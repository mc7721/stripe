{
    "openapi": "3.0.0",
    "info": {
        "version": "2019-08-14",
        "title": "Stripe API",
        "description": "The Stripe REST API. Please see https:\/\/stripe.com\/docs\/api for more details.",
        "termsOfService": "https:\/\/stripe.com\/us\/terms\/"
    },
    "servers": [
        "https:\/\/api.stripe.com\/"
    ],
    "paths": {
        "\/v1\/3d_secure": {
            "post": {
                "summary": "Post 3d Secure",
                "description": "Initiate 3D Secure authentication.",
                "operationId": "Post3dSecure",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/3d_secure\/{three_d_secure}": {
            "get": {
                "summary": "Get 3d Secure",
                "description": "Retrieves a 3D Secure object.",
                "operationId": "Get3dSecureThreeDSecure",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "three_d_secure",
                        "in": "path",
                        "description": "The identifier of the 3D Secure object to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account": {
            "delete": {
                "summary": "Delete Account",
                "description": "With Connect, you may delete Custom accounts you manage.\n\nCustom accounts created using test-mode keys can be deleted at any time. Custom accounts created using live-mode keys may only be deleted once all balances are zero.\n\nIf you are looking to close your own account, use the data tab in your account settings instead.",
                "operationId": "DeleteAccount",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Account",
                "description": "Retrieves the details of an account.",
                "operationId": "GetAccount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account",
                "description": "Updates a connected Express or Custom account by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked Custom Only below.) Parameters marked Custom and Express are supported by both account types.\n\nTo update your own account, use the Dashboard. Refer to",
                "operationId": "PostAccount",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/bank_accounts": {
            "post": {
                "summary": "Post Bank Accounts",
                "description": "Create an external account for a given account.",
                "operationId": "PostAccountBankAccounts",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/bank_accounts\/{id}": {
            "delete": {
                "summary": "Delete Bank Account",
                "description": "Delete a specified external account for a given account.",
                "operationId": "DeleteAccountBankAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Bank Account",
                "description": "Retrieve a specified external account for a given account.",
                "operationId": "GetAccountBankAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Bank Account",
                "description": "Updates the metadata, account holder name, and account holder type of a bank account belonging to a Custom account, and optionally sets it as the default for its currency. Other bank account details are not editable by design.\nYou can re-enable a disabled bank account by performing an update call without providing any arguments or changes.",
                "operationId": "PostAccountBankAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/capabilities": {
            "get": {
                "summary": "Get Account Capabilities",
                "description": "Returns a list of capabilities associated with the account. The capabilities are returned sorted by creation date, with the most recent capability appearing first.",
                "operationId": "GetAccountCapabilities",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/capabilities\/{capability}": {
            "get": {
                "summary": "Get Account Capabilities",
                "description": "Retrieves information about the specified Account Capability.",
                "operationId": "GetAccountCapabilitiesCapability",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "capability",
                        "in": "path",
                        "description": "The ID of an account capability to retrieve."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account Capabilities",
                "description": "Updates an existing Account Capability.",
                "operationId": "PostAccountCapabilitiesCapability",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "capability",
                        "in": "path",
                        "description": "The ID of an account capability to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/external_accounts": {
            "get": {
                "summary": "Get External Accounts",
                "description": "List external accounts for an account.",
                "operationId": "GetAccountExternalAccounts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post External Accounts",
                "description": "Create an external account for a given account.",
                "operationId": "PostAccountExternalAccounts",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/external_accounts\/{id}": {
            "delete": {
                "summary": "Delete External Account",
                "description": "Delete a specified external account for a given account.",
                "operationId": "DeleteAccountExternalAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get External Account",
                "description": "Retrieve a specified external account for a given account.",
                "operationId": "GetAccountExternalAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post External Account",
                "description": "Updates the metadata, account holder name, and account holder type of a bank account belonging to a Custom account, and optionally sets it as the default for its currency. Other bank account details are not editable by design.\nYou can re-enable a disabled bank account by performing an update call without providing any arguments or changes.",
                "operationId": "PostAccountExternalAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/login_links": {
            "post": {
                "summary": "Post Account Login Links",
                "description": "Creates a single-use login link for an Express account to access their Stripe dashboard.\n\nYou may only create login links for Express accounts connected to your platform.",
                "operationId": "PostAccountLoginLinks",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/logout": {
            "put": {
                "summary": "Put Account Logout",
                "description": "Invalidates all sessions for a light account, for a platform to use during platform logout.\n\nYou may only log out Express accounts connected to your platform.",
                "operationId": "PutAccountLogout",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/people": {
            "get": {
                "summary": "Get Account People",
                "description": "Returns a list of people associated with the account\u2019s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.",
                "operationId": "GetAccountPeople",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "relationship",
                        "in": "query",
                        "description": "Filters on the list of people returned based on the person's relationship to the account's company."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account People",
                "description": "Creates a new person.",
                "operationId": "PostAccountPeople",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/people\/{person}": {
            "delete": {
                "summary": "Delete Account People",
                "description": "Deletes an existing person\u2019s relationship to the account\u2019s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the account_opener. If your integration is using the executive parameter, you cannot delete the only verified executive on file.",
                "operationId": "DeleteAccountPeoplePerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Account People",
                "description": "Retrieves an existing person.",
                "operationId": "GetAccountPeoplePerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account People",
                "description": "Updates an existing person.",
                "operationId": "PostAccountPeoplePerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/persons": {
            "get": {
                "summary": "Get Account Persons",
                "description": "Returns a list of people associated with the account\u2019s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.",
                "operationId": "GetAccountPersons",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "relationship",
                        "in": "query",
                        "description": "Filters on the list of people returned based on the person's relationship to the account's company."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account Persons",
                "description": "Creates a new person.",
                "operationId": "PostAccountPersons",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account\/persons\/{person}": {
            "delete": {
                "summary": "Delete Account Persons",
                "description": "Deletes an existing person\u2019s relationship to the account\u2019s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the account_opener. If your integration is using the executive parameter, you cannot delete the only verified executive on file.",
                "operationId": "DeleteAccountPersonsPerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Account Persons",
                "description": "Retrieves an existing person.",
                "operationId": "GetAccountPersonsPerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account Persons",
                "description": "Updates an existing person.",
                "operationId": "PostAccountPersonsPerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/account_links": {
            "post": {
                "summary": "Post Account Links",
                "description": "Creates an AccountLink object that returns a Stripe URL that the user can redirect their user to in order to take them through the hosted onboarding flow.",
                "operationId": "PostAccountLinks",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts": {
            "get": {
                "summary": "Get Accounts",
                "description": "Returns a list of accounts connected to your platform via Connect. If you\u2019re not a platform, the list is empty.",
                "operationId": "GetAccounts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Accounts",
                "description": "With Connect, you can create Stripe accounts for your users.\nTo do this, you\u2019ll first need to register your platform.\n\nFor Standard accounts, parameters other than country, email, and type\nare used to prefill the account application that we ask the account holder to complete.",
                "operationId": "PostAccounts",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}": {
            "delete": {
                "summary": "Delete Account",
                "description": "With Connect, you may delete Custom accounts you manage.\n\nCustom accounts created using test-mode keys can be deleted at any time. Custom accounts created using live-mode keys may only be deleted once all balances are zero.\n\nIf you are looking to close your own account, use the data tab in your account settings instead.",
                "operationId": "DeleteAccountsAccount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Account",
                "description": "Retrieves the details of an account.",
                "operationId": "GetAccountsAccount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account",
                "description": "Updates a connected Express or Custom account by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked Custom Only below.) Parameters marked Custom and Express are supported by both account types.\n\nTo update your own account, use the Dashboard. Refer to",
                "operationId": "PostAccountsAccount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/bank_accounts": {
            "post": {
                "summary": "Post Bank Accounts",
                "description": "Create an external account for a given account.",
                "operationId": "PostAccountsAccountBankAccounts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/bank_accounts\/{id}": {
            "delete": {
                "summary": "Delete Bank Account",
                "description": "Delete a specified external account for a given account.",
                "operationId": "DeleteAccountsAccountBankAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Bank Account",
                "description": "Retrieve a specified external account for a given account.",
                "operationId": "GetAccountsAccountBankAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Bank Account",
                "description": "Updates the metadata, account holder name, and account holder type of a bank account belonging to a Custom account, and optionally sets it as the default for its currency. Other bank account details are not editable by design.\nYou can re-enable a disabled bank account by performing an update call without providing any arguments or changes.",
                "operationId": "PostAccountsAccountBankAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/capabilities": {
            "get": {
                "summary": "Get Account Capabilities",
                "description": "Returns a list of capabilities associated with the account. The capabilities are returned sorted by creation date, with the most recent capability appearing first.",
                "operationId": "GetAccountsAccountCapabilities",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/capabilities\/{capability}": {
            "get": {
                "summary": "Get Account Capabilities",
                "description": "Retrieves information about the specified Account Capability.",
                "operationId": "GetAccountsAccountCapabilitiesCapability",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "capability",
                        "in": "path",
                        "description": "The ID of an account capability to retrieve."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account Capabilities",
                "description": "Updates an existing Account Capability.",
                "operationId": "PostAccountsAccountCapabilitiesCapability",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "capability",
                        "in": "path",
                        "description": "The ID of an account capability to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/external_accounts": {
            "get": {
                "summary": "Get External Accounts",
                "description": "List external accounts for an account.",
                "operationId": "GetAccountsAccountExternalAccounts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post External Accounts",
                "description": "Create an external account for a given account.",
                "operationId": "PostAccountsAccountExternalAccounts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/external_accounts\/{id}": {
            "delete": {
                "summary": "Delete External Account",
                "description": "Delete a specified external account for a given account.",
                "operationId": "DeleteAccountsAccountExternalAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get External Account",
                "description": "Retrieve a specified external account for a given account.",
                "operationId": "GetAccountsAccountExternalAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post External Account",
                "description": "Updates the metadata, account holder name, and account holder type of a bank account belonging to a Custom account, and optionally sets it as the default for its currency. Other bank account details are not editable by design.\nYou can re-enable a disabled bank account by performing an update call without providing any arguments or changes.",
                "operationId": "PostAccountsAccountExternalAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/login_links": {
            "post": {
                "summary": "Post Account Login Links",
                "description": "Creates a single-use login link for an Express account to access their Stripe dashboard.\n\nYou may only create login links for Express accounts connected to your platform.",
                "operationId": "PostAccountsAccountLoginLinks",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/logout": {
            "put": {
                "summary": "Put Account Logout",
                "description": "Invalidates all sessions for a light account, for a platform to use during platform logout.\n\nYou may only log out Express accounts connected to your platform.",
                "operationId": "PutAccountsAccountLogout",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/people": {
            "get": {
                "summary": "Get Account People",
                "description": "Returns a list of people associated with the account\u2019s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.",
                "operationId": "GetAccountsAccountPeople",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "relationship",
                        "in": "query",
                        "description": "Filters on the list of people returned based on the person's relationship to the account's company."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account People",
                "description": "Creates a new person.",
                "operationId": "PostAccountsAccountPeople",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/people\/{person}": {
            "delete": {
                "summary": "Delete Account People",
                "description": "Deletes an existing person\u2019s relationship to the account\u2019s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the account_opener. If your integration is using the executive parameter, you cannot delete the only verified executive on file.",
                "operationId": "DeleteAccountsAccountPeoplePerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Account People",
                "description": "Retrieves an existing person.",
                "operationId": "GetAccountsAccountPeoplePerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account People",
                "description": "Updates an existing person.",
                "operationId": "PostAccountsAccountPeoplePerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/persons": {
            "get": {
                "summary": "Get Account Persons",
                "description": "Returns a list of people associated with the account\u2019s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.",
                "operationId": "GetAccountsAccountPersons",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "relationship",
                        "in": "query",
                        "description": "Filters on the list of people returned based on the person's relationship to the account's company."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account Persons",
                "description": "Creates a new person.",
                "operationId": "PostAccountsAccountPersons",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/persons\/{person}": {
            "delete": {
                "summary": "Delete Account Persons",
                "description": "Deletes an existing person\u2019s relationship to the account\u2019s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the account_opener. If your integration is using the executive parameter, you cannot delete the only verified executive on file.",
                "operationId": "DeleteAccountsAccountPersonsPerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Account Persons",
                "description": "Retrieves an existing person.",
                "operationId": "GetAccountsAccountPersonsPerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Account Persons",
                "description": "Updates an existing person.",
                "operationId": "PostAccountsAccountPersonsPerson",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    },
                    {
                        "name": "person",
                        "in": "path",
                        "description": "The ID of the person to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/accounts\/{account}\/reject": {
            "post": {
                "summary": "Post Account Reject",
                "description": "With Connect, you may flag accounts as suspicious.\n\nTest-mode Custom and Express accounts can be rejected at any time. Accounts created using live-mode keys may only be rejected once all balances are zero.",
                "operationId": "PostAccountsAccountReject",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/apple_pay\/domains": {
            "get": {
                "summary": "Get Apple Pay Domains",
                "description": "List apple pay domains.",
                "operationId": "GetApplePayDomains",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "domain_name",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Apple Pay Domains",
                "description": "Create an apple pay domain.",
                "operationId": "PostApplePayDomains",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/apple_pay\/domains\/{domain}": {
            "delete": {
                "summary": "Delete Apple Pay Domain",
                "description": "Delete an apple pay domain.",
                "operationId": "DeleteApplePayDomainsDomain",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Apple Pay Domain",
                "description": "Retrieve an apple pay domain.",
                "operationId": "GetApplePayDomainsDomain",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/application_fees": {
            "get": {
                "summary": "Get Application Fees",
                "description": "Returns a list of application fees you\u2019ve previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.",
                "operationId": "GetApplicationFees",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "query",
                        "description": "Only return application fees for the charge specified by this charge ID."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/application_fees\/{fee}\/refunds\/{id}": {
            "get": {
                "summary": "Get Application Fee Refund",
                "description": "By default, you can see the 10 most recent refunds stored directly on the application fee object, but you can also retrieve details about a specific refund stored on the application fee.",
                "operationId": "GetApplicationFeesFeeRefundsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "fee",
                        "in": "path",
                        "description": "ID of the application fee refunded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Application Fee Refund",
                "description": "Updates the specified application fee refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\nThis request only accepts metadata as an argument.",
                "operationId": "PostApplicationFeesFeeRefundsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "fee",
                        "in": "path",
                        "description": "ID of the application fee refunded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/application_fees\/{id}": {
            "get": {
                "summary": "Get Application Fee",
                "description": "Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.",
                "operationId": "GetApplicationFeesId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/application_fees\/{id}\/refund": {
            "post": {
                "summary": "Post Application Fee Refund",
                "description": "",
                "operationId": "PostApplicationFeesIdRefund",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/application_fees\/{id}\/refunds": {
            "get": {
                "summary": "Get Application Fee Refunds",
                "description": "You can see a list of the refunds belonging to a specific application fee. Note that the 10 most recent refunds are always available by default on the application fee object. If you need more than those 10, you can use this API method and the limit and starting_after parameters to page through additional refunds.",
                "operationId": "GetApplicationFeesIdRefunds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Application Fee Refunds",
                "description": "Refunds an application fee that has previously been collected but not yet refunded.\nFunds will be refunded to the Stripe account from which the fee was originally collected.\n\nYou can optionally refund only part of an application fee.\nYou can do so multiple times, until the entire fee has been refunded.\n\nOnce entirely refunded, an application fee can\u2019t be refunded again.\nThis method will raise an error when called on an already-refunded application fee,\nor when trying to refund",
                "operationId": "PostApplicationFeesIdRefunds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/balance": {
            "get": {
                "summary": "Get Balance",
                "description": "Retrieves the current account balance, based on the authentication that was used to make the request.\n For a sample request, see Accounting for negative balances.",
                "operationId": "GetBalance",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/balance\/history": {
            "get": {
                "summary": "Get Balance History",
                "description": "Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.\n\nNote that this endpoint was previously called \u201cBalance history\u201d and used the path \/v1\/balance\/history.",
                "operationId": "GetBalanceHistory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "available_on",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "payout",
                        "in": "query",
                        "description": "For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID."
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Only returns the original transaction."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Only returns transactions of the given type. One of: `charge`, `refund`, `adjustment`, `application_fee`, `application_fee_refund`, `transfer`, `payment`, `payout`, `payout_failure`, `stripe_fee`, or `network_cost`."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/balance\/history\/{id}": {
            "get": {
                "summary": "Get Balance History Id",
                "description": "Retrieves the balance transaction with the given ID.\n\nNote that this endpoint previously used the path \/v1\/balance\/history\/:id.",
                "operationId": "GetBalanceHistoryId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/balance_transactions": {
            "get": {
                "summary": "Get Balance Transactions",
                "description": "Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.\n\nNote that this endpoint was previously called \u201cBalance history\u201d and used the path \/v1\/balance\/history.",
                "operationId": "GetBalanceTransactions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "available_on",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "payout",
                        "in": "query",
                        "description": "For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID."
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Only returns the original transaction."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Only returns transactions of the given type. One of: `charge`, `refund`, `adjustment`, `application_fee`, `application_fee_refund`, `transfer`, `payment`, `payout`, `payout_failure`, `stripe_fee`, or `network_cost`."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/balance_transactions\/{id}": {
            "get": {
                "summary": "Get Balance Transaction",
                "description": "Retrieves the balance transaction with the given ID.\n\nNote that this endpoint previously used the path \/v1\/balance\/history\/:id.",
                "operationId": "GetBalanceTransactionsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/bitcoin\/receivers": {
            "get": {
                "summary": "Get Bitcoin Receivers",
                "description": "Returns a list of your receivers. Receivers are returned sorted by creation date, with the most recently created receivers appearing first.",
                "operationId": "GetBitcoinReceivers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter for active receivers."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "filled",
                        "in": "query",
                        "description": "Filter for filled receivers."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "uncaptured_funds",
                        "in": "query",
                        "description": "Filter for receivers with uncaptured funds."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/bitcoin\/receivers\/{id}": {
            "get": {
                "summary": "Get Bitcoin Receiver",
                "description": "Retrieves the Bitcoin receiver with the given ID.",
                "operationId": "GetBitcoinReceiversId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/bitcoin\/receivers\/{receiver}\/transactions": {
            "get": {
                "summary": "Get Bitcoin Receiver Transactions",
                "description": "List bitcoin transacitons for a given receiver.",
                "operationId": "GetBitcoinReceiversReceiverTransactions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "receiver",
                        "in": "path",
                        "description": "Only return transactions for the receiver specified by this receiver ID."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/bitcoin\/transactions": {
            "get": {
                "summary": "Get Bitcoin Transactions",
                "description": "List bitcoin transacitons for a given receiver.",
                "operationId": "GetBitcoinTransactions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "receiver",
                        "in": "query",
                        "description": "Only return transactions for the receiver specified by this receiver ID."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/charges": {
            "get": {
                "summary": "Get Charges",
                "description": "Returns a list of charges you\u2019ve previously created. The charges are returned in sorted order, with the most recent charges appearing first.",
                "operationId": "GetCharges",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "payment_intent",
                        "in": "query",
                        "description": "Only return charges that were created by the PaymentIntent specified by this PaymentIntent ID."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "transfer_group",
                        "in": "query",
                        "description": "Only return charges for this transfer group."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Charges",
                "description": "To charge a credit card or other payment source, you create a Charge object. If your API key is in test mode, the supplied payment source (e.g., card) won\u2019t actually be charged, although everything else will occur as if in live mode. (Stripe assumes that the charge would have completed successfully).",
                "operationId": "PostCharges",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/charges\/{charge}": {
            "get": {
                "summary": "Get Charge",
                "description": "Retrieves the details of a charge that has previously been created. Supply the unique charge ID that was returned from your previous request, and Stripe will return the corresponding charge information. The same information is returned when creating or refunding the charge.",
                "operationId": "GetChargesCharge",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "path",
                        "description": "The identifier of the charge to be retrieved."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Charge",
                "description": "Updates the specified charge by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
                "operationId": "PostChargesCharge",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "path",
                        "description": "The identifier of the charge to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/charges\/{charge}\/capture": {
            "post": {
                "summary": "Post Charge Capture",
                "description": "Capture the payment of an existing, uncaptured, charge. This is the second half of the two-step payment flow, where first you created a charge with the capture option set to false.\n\nUncaptured payments expire exactly seven days after they are created. If they are not captured by that point in time, they will be marked as refunded and will no longer be capturable.",
                "operationId": "PostChargesChargeCapture",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "path",
                        "description": "The identifier of the charge to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/charges\/{charge}\/dispute": {
            "get": {
                "summary": "Get Charge Dispute",
                "description": "Retrieve a dispute for a specified charge.",
                "operationId": "GetChargesChargeDispute",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "path",
                        "description": "The identifier of the charge to be retrieved."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Charge Dispute",
                "description": "",
                "operationId": "PostChargesChargeDispute",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "path",
                        "description": "The identifier of the charge to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/charges\/{charge}\/dispute\/close": {
            "post": {
                "summary": "Post Charge Dispute Close",
                "description": "",
                "operationId": "PostChargesChargeDisputeClose",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "path",
                        "description": "The identifier of the charge to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/charges\/{charge}\/refund": {
            "post": {
                "summary": "Post Charge Refund",
                "description": "When you create a new refund, you must specify a charge on which to create it.\n\nCreating a new refund will refund a charge that has previously been created but not yet refunded.\nFunds will be refunded to the credit or debit card that was originally charged.\n\nYou can optionally refund only part of a charge.\nYou can do so multiple times, until the entire charge has been refunded.\n\nOnce entirely refunded, a charge can\u2019t be refunded again.\nThis method will raise an error wh",
                "operationId": "PostChargesChargeRefund",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "path",
                        "description": "The identifier of the charge to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/charges\/{charge}\/refunds": {
            "get": {
                "summary": "Get Charge Refunds",
                "description": "You can see a list of the refunds belonging to a specific charge. Note that the 10 most recent refunds are always available by default on the charge object. If you need more than those 10, you can use this API method and the limit and starting_after parameters to page through additional refunds.",
                "operationId": "GetChargesChargeRefunds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "path",
                        "description": "The identifier of the charge to be retrieved."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Charge Refunds",
                "description": "Create a refund.",
                "operationId": "PostChargesChargeRefunds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "path",
                        "description": "The identifier of the charge to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/charges\/{charge}\/refunds\/{refund}": {
            "get": {
                "summary": "Get Charge Refunds",
                "description": "Retrieves the details of an existing refund.",
                "operationId": "GetChargesChargeRefundsRefund",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "path",
                        "description": "The identifier of the charge to be retrieved."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "refund",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Charge Refunds",
                "description": "Update a specified refund.",
                "operationId": "PostChargesChargeRefundsRefund",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "path",
                        "description": "The identifier of the charge to be retrieved."
                    },
                    {
                        "name": "refund",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/checkout\/sessions": {
            "post": {
                "summary": "Post Checkout Sessions",
                "description": "Creates a Session object.",
                "operationId": "PostCheckoutSessions",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/checkout\/sessions\/{session}": {
            "get": {
                "summary": "Get Checkout Sessions",
                "description": "Retrieves a Session object.",
                "operationId": "GetCheckoutSessionsSession",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "session",
                        "in": "path",
                        "description": "The ID of the Checkout Session."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/country_specs": {
            "get": {
                "summary": "Get Country Specs",
                "description": "Lists all Country Spec objects available in the API.",
                "operationId": "GetCountrySpecs",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/country_specs\/{country}": {
            "get": {
                "summary": "Get Country Specs Country",
                "description": "Returns a Country Spec for a given Country code.",
                "operationId": "GetCountrySpecsCountry",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "description": "An ISO 3166-1 alpha-2 country code. Available country codes can be listed with the [List Country Specs](https:\/\/stripe.com\/docs\/api#list_country_specs) endpoint."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/coupons": {
            "get": {
                "summary": "Get Coupons",
                "description": "Returns a list of your coupons.",
                "operationId": "GetCoupons",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Coupons",
                "description": "You can create coupons easily via the coupon management page of the Stripe dashboard. Coupon creation is also accessible via the API if you need to create coupons on the fly.\n\nA coupon has either a percent_off or an amount_off and currency. If you set an amount_off, that amount will be subtracted from any invoice\u2019s subtotal. For example, an invoice with a subtotal of 100",
                "operationId": "PostCoupons",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/coupons\/{coupon}": {
            "delete": {
                "summary": "Delete Coupon",
                "description": "You can delete coupons via the coupon management page of the Stripe dashboard. However, deleting a coupon does not affect any customers who have already applied the coupon; it means that new customers can\u2019t redeem the coupon. You can also delete coupons via the API.",
                "operationId": "DeleteCouponsCoupon",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "coupon",
                        "in": "path",
                        "description": "The identifier of the coupon to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Coupon",
                "description": "Retrieves the coupon with the given ID.",
                "operationId": "GetCouponsCoupon",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "coupon",
                        "in": "path",
                        "description": "The identifier of the coupon to be deleted."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Coupon",
                "description": "Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by design, not editable.",
                "operationId": "PostCouponsCoupon",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "coupon",
                        "in": "path",
                        "description": "The identifier of the coupon to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/credit_notes": {
            "get": {
                "summary": "Get Credit Notes",
                "description": "Returns a list of credit notes.",
                "operationId": "GetCreditNotes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "invoice",
                        "in": "query",
                        "description": "Only return credit notes for the invoice specified by this invoice ID."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Credit Notes",
                "description": "Issue a credit note to adjust the amount of a finalized invoice. For a status=open invoice, a credit note reduces\nits amount_due. For a status=paid invoice, a credit note does not affect its amount_due. Instead, it can result\nin any combination of the following:\n\n\n Refund: create a new refund (using refund_amount) or link an existing refund (using refund).\n Customer balance credit: credit the cu",
                "operationId": "PostCreditNotes",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/credit_notes\/{id}": {
            "get": {
                "summary": "Get Credit Note",
                "description": "Retrieves the credit note object with the given identifier.",
                "operationId": "GetCreditNotesId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Credit Note",
                "description": "Updates an existing credit note.",
                "operationId": "PostCreditNotesId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/credit_notes\/{id}\/void": {
            "post": {
                "summary": "Post Credit Note Void",
                "description": "Marks a credit note as void. Learn more about voiding credit notes.",
                "operationId": "PostCreditNotesIdVoid",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers": {
            "get": {
                "summary": "Get Customers",
                "description": "Returns a list of your customers. The customers are returned sorted by creation date, with the most recent customers appearing first.",
                "operationId": "GetCustomers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "A filter on the list based on the customer's `email` field. The value must be a string."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customers",
                "description": "Creates a new customer object.",
                "operationId": "PostCustomers",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}": {
            "delete": {
                "summary": "Delete Customer",
                "description": "Permanently deletes a customer. It cannot be undone. Also immediately cancels any active subscriptions on the customer.",
                "operationId": "DeleteCustomersCustomer",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Customer",
                "description": "Retrieves the details of an existing customer. You need only supply the unique customer identifier that was returned upon customer creation.",
                "operationId": "GetCustomersCustomer",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer",
                "description": "Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged. For example, if you pass the source parameter, that becomes the customer\u2019s active source (e.g., a card) to be used for all charges in the future. When you update a customer to a new valid card source by passing the source parameter: for each of the customer\u2019s current subscriptions, if the subscription bills automatically and i",
                "operationId": "PostCustomersCustomer",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/balance_transactions": {
            "get": {
                "summary": "Get Customer Balance Transactions",
                "description": "Returns a list of transactions that updated the customer\u2019s balance.",
                "operationId": "GetCustomersCustomerBalanceTransactions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer Balance Transactions",
                "description": "Creates an immutable transaction that updates the customer\u2019s balance.",
                "operationId": "PostCustomersCustomerBalanceTransactions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/balance_transactions\/{transaction}": {
            "get": {
                "summary": "Get Customer Balance Transactions",
                "description": "Retrieves a specific transaction that updated the customer\u2019s balance.",
                "operationId": "GetCustomersCustomerBalanceTransactionsTransaction",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "The transaction to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer Balance Transactions",
                "description": "Most customer balance transaction fields are immutable, but you may update its description and metadata.",
                "operationId": "PostCustomersCustomerBalanceTransactionsTransaction",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "The transaction to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/bank_accounts": {
            "get": {
                "summary": "Get Customer Bank Accounts",
                "description": "You can see a list of the bank accounts belonging to a Customer. Note that the 10 most recent sources are always available by default on the Customer. If you need more than those 10, you can use this API method and the limit and starting_after parameters to page through additional bank accounts.",
                "operationId": "GetCustomersCustomerBankAccounts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer Bank Accounts",
                "description": "When you create a new credit card, you must specify a customer or recipient on which to create it.\n\nIf the card\u2019s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should either update the customer to have a new default_source,\nor update the recipient to have a new defau",
                "operationId": "PostCustomersCustomerBankAccounts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/bank_accounts\/{id}": {
            "delete": {
                "summary": "Delete Customer Bank Account",
                "description": "Delete a specified source for a given customer.",
                "operationId": "DeleteCustomersCustomerBankAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Customer Bank Account",
                "description": "By default, you can see the 10 most recent sources stored on a Customer directly on the object, but you can also retrieve details about a specific bank account stored on the Stripe account.",
                "operationId": "GetCustomersCustomerBankAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer Bank Account",
                "description": "Update a specified source for a given customer.",
                "operationId": "PostCustomersCustomerBankAccountsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/bank_accounts\/{id}\/verify": {
            "post": {
                "summary": "Post Customer Bank Account Verify",
                "description": "Verify a specified bank account for a given customer.",
                "operationId": "PostCustomersCustomerBankAccountsIdVerify",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/cards": {
            "get": {
                "summary": "Get Customer Cards",
                "description": "You can see a list of the cards belonging to a customer.\nNote that the 10 most recent sources are always available on the Customer object.\nIf you need more than those 10, you can use this API method and the limit and starting_after parameters to page through additional cards.",
                "operationId": "GetCustomersCustomerCards",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer Cards",
                "description": "When you create a new credit card, you must specify a customer or recipient on which to create it.\n\nIf the card\u2019s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should either update the customer to have a new default_source,\nor update the recipient to have a new defau",
                "operationId": "PostCustomersCustomerCards",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/cards\/{id}": {
            "delete": {
                "summary": "Delete Customer Card",
                "description": "Delete a specified source for a given customer.",
                "operationId": "DeleteCustomersCustomerCardsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Customer Card",
                "description": "You can always see the 10 most recent cards directly on a customer; this method lets you retrieve details about a specific card stored on the customer.",
                "operationId": "GetCustomersCustomerCardsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer Card",
                "description": "Update a specified source for a given customer.",
                "operationId": "PostCustomersCustomerCardsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/discount": {
            "delete": {
                "summary": "Delete Customer Discount",
                "description": "Removes the currently applied discount on a customer.",
                "operationId": "DeleteCustomersCustomerDiscount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Customer Discount",
                "description": "",
                "operationId": "GetCustomersCustomerDiscount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/sources": {
            "get": {
                "summary": "Get Customer Sources",
                "description": "List sources for a specified customer.",
                "operationId": "GetCustomersCustomerSources",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "object",
                        "in": "query",
                        "description": "Filter sources according to a particular object type."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer Sources",
                "description": "When you create a new credit card, you must specify a customer or recipient on which to create it.\n\nIf the card\u2019s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should either update the customer to have a new default_source,\nor update the recipient to have a new defau",
                "operationId": "PostCustomersCustomerSources",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/sources\/{id}": {
            "delete": {
                "summary": "Delete Customer Source",
                "description": "Delete a specified source for a given customer.",
                "operationId": "DeleteCustomersCustomerSourcesId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Customer Source",
                "description": "Retrieve a specified source for a given customer.",
                "operationId": "GetCustomersCustomerSourcesId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer Source",
                "description": "Update a specified source for a given customer.",
                "operationId": "PostCustomersCustomerSourcesId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/sources\/{id}\/verify": {
            "post": {
                "summary": "Post Customer Source Verify",
                "description": "Verify a specified bank account for a given customer.",
                "operationId": "PostCustomersCustomerSourcesIdVerify",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/subscriptions": {
            "get": {
                "summary": "Get Customer Subscriptions",
                "description": "You can see a list of the customer\u2019s active subscriptions. Note that the 10 most recent active subscriptions are always available by default on the customer object. If you need more than those 10, you can use the limit and starting_after parameters to page through additional subscriptions.",
                "operationId": "GetCustomersCustomerSubscriptions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer Subscriptions",
                "description": "Creates a new subscription on an existing customer.",
                "operationId": "PostCustomersCustomerSubscriptions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/subscriptions\/{subscription_exposed_id}": {
            "delete": {
                "summary": "Delete Customer Subscriptions Exposed Id",
                "description": "Cancels a customer\u2019s subscription. If you set the at_period_end parameter to true, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. Otherwise, with the default false value, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription.\n\nNote, however, that any pending invoice items that you\u2019ve created will still be char",
                "operationId": "DeleteCustomersCustomerSubscriptionsSubscriptionExposedId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "subscription_exposed_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Customer Subscriptions Exposed Id",
                "description": "Retrieves the subscription with the given ID.",
                "operationId": "GetCustomersCustomerSubscriptionsSubscriptionExposedId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "subscription_exposed_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer Subscriptions Exposed Id",
                "description": "Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the upcoming invoice endpoint.",
                "operationId": "PostCustomersCustomerSubscriptionsSubscriptionExposedId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "subscription_exposed_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/subscriptions\/{subscription_exposed_id}\/discount": {
            "delete": {
                "summary": "Delete Customer Subscriptions Exposed Id Discount",
                "description": "Removes the currently applied discount on a customer.",
                "operationId": "DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "subscription_exposed_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Customer Subscriptions Exposed Id Discount",
                "description": "",
                "operationId": "GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "subscription_exposed_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/tax_ids": {
            "get": {
                "summary": "Get Customer Tax Ids",
                "description": "Returns a list of tax IDs for a customer.",
                "operationId": "GetCustomersCustomerTaxIds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Customer Tax Ids",
                "description": "Creates a new TaxID object for a customer.",
                "operationId": "PostCustomersCustomerTaxIds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/customers\/{customer}\/tax_ids\/{id}": {
            "delete": {
                "summary": "Delete Customer Tax Id",
                "description": "Deletes an existing TaxID object.",
                "operationId": "DeleteCustomersCustomerTaxIdsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Customer Tax Id",
                "description": "Retrieves the TaxID object with the given identifier.",
                "operationId": "GetCustomersCustomerTaxIdsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The identifier of the customer to be deleted."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/disputes": {
            "get": {
                "summary": "Get Disputes",
                "description": "Returns a list of your disputes.",
                "operationId": "GetDisputes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/disputes\/{dispute}": {
            "get": {
                "summary": "Get Disputes",
                "description": "Retrieves the dispute with the given ID.",
                "operationId": "GetDisputesDispute",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "dispute",
                        "in": "path",
                        "description": "ID of dispute to retrieve."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Disputes",
                "description": "When you get a dispute, contacting your customer is always the best first step. If that doesn\u2019t work, you can submit evidence to help us resolve the dispute in your favor. You can do this in your dashboard, but if you prefer, you can use the API to submit evidence programmatically.\n\nDepending on your dispute type, different evidence fields will give you a better chance of winning your dispute. To figure out which evidence fields to",
                "operationId": "PostDisputesDispute",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "dispute",
                        "in": "path",
                        "description": "ID of dispute to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/disputes\/{dispute}\/close": {
            "post": {
                "summary": "Post Disputes Close",
                "description": "Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially dismissing the dispute, acknowledging it as lost.\n\nThe status of the dispute will change from needs_response to lost. Closing a dispute is irreversible.",
                "operationId": "PostDisputesDisputeClose",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "dispute",
                        "in": "path",
                        "description": "ID of dispute to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/ephemeral_keys": {
            "post": {
                "summary": "Post Ephemeral Keys",
                "description": "Creates a short-lived API key for a given resource.",
                "operationId": "PostEphemeralKeys",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/ephemeral_keys\/{key}": {
            "delete": {
                "summary": "Delete Ephemeral Keys",
                "description": "Invalidates a short-lived API key for a given resource.",
                "operationId": "DeleteEphemeralKeysKey",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "The ID of the key you'd like to invalidate."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/events": {
            "get": {
                "summary": "Get Events",
                "description": "List events, going back up to 30 days. Each event data is rendered according to Stripe API version at its creation time, specified in event object api_version attribute (not according to your current Stripe API version or Stripe-Version header).",
                "operationId": "GetEvents",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "delivery_success",
                        "in": "query",
                        "description": "Filter events by whether all webhooks were successfully delivered. If false, events which are still pending or have failed all delivery attempts to a webhook endpoint will be returned."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Only returns transactions of the given type. One of: `charge`, `refund`, `adjustment`, `application_fee`, `application_fee_refund`, `transfer`, `payment`, `payout`, `payout_failure`, `stripe_fee`, or `network_cost`."
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "description": "An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property. You may pass either `type` or `types`, but not both."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/events\/{id}": {
            "get": {
                "summary": "Get Event",
                "description": "Retrieves the details of an event. Supply the unique identifier of the event, which you might have received in a webhook.",
                "operationId": "GetEventsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/events\/{id}\/retry": {
            "post": {
                "summary": "Post Event Retry",
                "description": "Resend an event. This only works in testmode",
                "operationId": "PostEventsIdRetry",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/exchange_rates": {
            "get": {
                "summary": "Get Exchange Rates",
                "description": "Returns a list of objects that contain the rates at which foreign currencies are converted to one another. Only shows the currencies for which Stripe supports.",
                "operationId": "GetExchangeRates",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/exchange_rates\/{currency}": {
            "get": {
                "summary": "Get Exchange Rates Currency",
                "description": "Retrieves the exchange rates from the given currency to every supported currency.",
                "operationId": "GetExchangeRatesCurrency",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "currency",
                        "in": "path",
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies)."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/file_links": {
            "get": {
                "summary": "Get File Links",
                "description": "Returns a list of file links.",
                "operationId": "GetFileLinks",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "expired",
                        "in": "query",
                        "description": "Filter links by their expiration status. By default, all links are returned."
                    },
                    {
                        "name": "file",
                        "in": "query",
                        "description": "Only return links for the given file."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post File Links",
                "description": "Creates a new file link object.",
                "operationId": "PostFileLinks",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/file_links\/{link}": {
            "get": {
                "summary": "Get File Links",
                "description": "Retrieves the file link with the given ID.",
                "operationId": "GetFileLinksLink",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "link",
                        "in": "path",
                        "description": "The identifier of the file link to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post File Links",
                "description": "Updates an existing file link object. Expired links can no longer be updated.",
                "operationId": "PostFileLinksLink",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "link",
                        "in": "path",
                        "description": "The identifier of the file link to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/files": {
            "get": {
                "summary": "Get Files",
                "description": "Returns a list of the files that your account has access to. The files are returned sorted by creation date, with the most recently created files appearing first.",
                "operationId": "GetFiles",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "purpose",
                        "in": "query",
                        "description": "The file purpose to filter queries by. If none is provided, files will not be filtered by purpose."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Files",
                "description": "To upload a file to Stripe, you\u2019ll need to send a request of type multipart\/form-data. The request should contain the file you would like to upload, as well as the parameters for creating a file.\n\nAll of Stripe\u2019s officially supported Client libraries should have support for sending multipart\/form-data.",
                "operationId": "PostFiles",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/files\/{file}": {
            "get": {
                "summary": "Get Files",
                "description": "Retrieves the details of an existing file object. Supply the unique file ID from a file, and Stripe will return the corresponding file object.",
                "operationId": "GetFilesFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "file",
                        "in": "path",
                        "description": "The identifier of the file to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoiceitems": {
            "get": {
                "summary": "Get Invoiceitems",
                "description": "Returns a list of your invoice items. Invoice items are returned sorted by creation date, with the most recently created invoice items appearing first.",
                "operationId": "GetInvoiceitems",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "invoice",
                        "in": "query",
                        "description": "Only return credit notes for the invoice specified by this invoice ID."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "pending",
                        "in": "query",
                        "description": "Set to `true` to only show pending invoice items, which are not yet attached to any invoices. Set to `false` to only show invoice items already attached to invoices. If unspecified, no filter is applied."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Invoiceitems",
                "description": "Creates an item to be added to a draft invoice. If no invoice is specified, the item will be on the next invoice created for the customer specified.",
                "operationId": "PostInvoiceitems",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoiceitems\/{invoiceitem}": {
            "delete": {
                "summary": "Delete Invoiceitems",
                "description": "Deletes an invoice item, removing it from an invoice. Deleting invoice items is only possible when they\u2019re not attached to invoices, or if it\u2019s attached to a draft invoice.",
                "operationId": "DeleteInvoiceitemsInvoiceitem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "invoiceitem",
                        "in": "path",
                        "description": "The identifier of the invoice item to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Invoiceitems",
                "description": "Retrieves the invoice item with the given ID.",
                "operationId": "GetInvoiceitemsInvoiceitem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "invoiceitem",
                        "in": "path",
                        "description": "The identifier of the invoice item to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Invoiceitems",
                "description": "Updates the amount or description of an invoice item on an upcoming invoice. Updating an invoice item is only possible before the invoice it\u2019s attached to is closed.",
                "operationId": "PostInvoiceitemsInvoiceitem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "invoiceitem",
                        "in": "path",
                        "description": "The identifier of the invoice item to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoices": {
            "get": {
                "summary": "Get Invoices",
                "description": "You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.",
                "operationId": "GetInvoices",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "billing",
                        "in": "query",
                        "description": "This field has been renamed to `collection_method` and will be removed in a future API version."
                    },
                    {
                        "name": "collection_method",
                        "in": "query",
                        "description": "The collection method of the invoice to retrieve. Either `charge_automatically` or `send_invoice`."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "due_date",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow#workflow-overview)"
                    },
                    {
                        "name": "subscription",
                        "in": "query",
                        "description": "Only return invoices for the subscription specified by this subscription ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Invoices",
                "description": "This endpoint creates a draft invoice for a given customer. The draft invoice created pulls in all pending invoice items on that customer, including prorations.",
                "operationId": "PostInvoices",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoices\/upcoming": {
            "get": {
                "summary": "Get Invoices Upcoming",
                "description": "At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discount that is applicable to the customer.\n\nNote that when you are viewing an upcoming invoice, you are simply viewing a preview \u2013 the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pa",
                "operationId": "GetInvoicesUpcoming",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "coupon",
                        "in": "query",
                        "description": "The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string."
                    },
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "invoice_items",
                        "in": "query",
                        "description": "List of invoice items to add or update in the upcoming invoice preview."
                    },
                    {
                        "name": "schedule",
                        "in": "query",
                        "description": "The identifier of the unstarted schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields."
                    },
                    {
                        "name": "subscription",
                        "in": "query",
                        "description": "Only return invoices for the subscription specified by this subscription ID."
                    },
                    {
                        "name": "subscription_billing_cycle_anchor",
                        "in": "query",
                        "description": "For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https:\/\/stripe.com\/docs\/subscriptions\/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`."
                    },
                    {
                        "name": "subscription_cancel_at",
                        "in": "query",
                        "description": "Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period if `prorate=true`"
                    },
                    {
                        "name": "subscription_cancel_at_period_end",
                        "in": "query",
                        "description": "Boolean indicating whether this subscription should cancel at the end of the current period."
                    },
                    {
                        "name": "subscription_cancel_now",
                        "in": "query",
                        "description": "This simulates the subscription being canceled or expired immediately."
                    },
                    {
                        "name": "subscription_default_tax_rates",
                        "in": "query",
                        "description": "If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set."
                    },
                    {
                        "name": "subscription_items",
                        "in": "query",
                        "description": "List of subscription items, each with an attached plan."
                    },
                    {
                        "name": "subscription_prorate",
                        "in": "query",
                        "description": "If previewing an update to a subscription, this decides whether the preview will show the result of applying prorations or not. If set, one of `subscription_items` or `subscription`, and one of `subscription_items` or `subscription_trial_end` are required."
                    },
                    {
                        "name": "subscription_proration_date",
                        "in": "query",
                        "description": "If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period, and cannot be before the subscription was on its current plan. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration` cannot be set to false."
                    },
                    {
                        "name": "subscription_start_date",
                        "in": "query",
                        "description": "Date a subscription is intended to start (can be future or past)"
                    },
                    {
                        "name": "subscription_tax_percent",
                        "in": "query",
                        "description": "If provided, the invoice returned will preview updating or creating a subscription with that tax percent. If set, one of `subscription_items` or `subscription` is required. This field has been deprecated and will be removed in a future API version, for further information view the [migration docs](https:\/\/stripe.com\/docs\/billing\/migration\/taxes) for `tax_rates`."
                    },
                    {
                        "name": "subscription_trial_end",
                        "in": "query",
                        "description": "If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required."
                    },
                    {
                        "name": "subscription_trial_from_plan",
                        "in": "query",
                        "description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoices\/upcoming\/lines": {
            "get": {
                "summary": "Get Invoices Upcoming Lines",
                "description": "When retrieving an upcoming invoice, you\u2019ll get a lines property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.",
                "operationId": "GetInvoicesUpcomingLines",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "coupon",
                        "in": "query",
                        "description": "The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string."
                    },
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "invoice_items",
                        "in": "query",
                        "description": "List of invoice items to add or update in the upcoming invoice preview."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "schedule",
                        "in": "query",
                        "description": "The identifier of the unstarted schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "subscription",
                        "in": "query",
                        "description": "Only return invoices for the subscription specified by this subscription ID."
                    },
                    {
                        "name": "subscription_billing_cycle_anchor",
                        "in": "query",
                        "description": "For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https:\/\/stripe.com\/docs\/subscriptions\/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`."
                    },
                    {
                        "name": "subscription_cancel_at",
                        "in": "query",
                        "description": "Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period if `prorate=true`"
                    },
                    {
                        "name": "subscription_cancel_at_period_end",
                        "in": "query",
                        "description": "Boolean indicating whether this subscription should cancel at the end of the current period."
                    },
                    {
                        "name": "subscription_cancel_now",
                        "in": "query",
                        "description": "This simulates the subscription being canceled or expired immediately."
                    },
                    {
                        "name": "subscription_default_tax_rates",
                        "in": "query",
                        "description": "If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set."
                    },
                    {
                        "name": "subscription_items",
                        "in": "query",
                        "description": "List of subscription items, each with an attached plan."
                    },
                    {
                        "name": "subscription_prorate",
                        "in": "query",
                        "description": "If previewing an update to a subscription, this decides whether the preview will show the result of applying prorations or not. If set, one of `subscription_items` or `subscription`, and one of `subscription_items` or `subscription_trial_end` are required."
                    },
                    {
                        "name": "subscription_proration_date",
                        "in": "query",
                        "description": "If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period, and cannot be before the subscription was on its current plan. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration` cannot be set to false."
                    },
                    {
                        "name": "subscription_start_date",
                        "in": "query",
                        "description": "Date a subscription is intended to start (can be future or past)"
                    },
                    {
                        "name": "subscription_tax_percent",
                        "in": "query",
                        "description": "If provided, the invoice returned will preview updating or creating a subscription with that tax percent. If set, one of `subscription_items` or `subscription` is required. This field has been deprecated and will be removed in a future API version, for further information view the [migration docs](https:\/\/stripe.com\/docs\/billing\/migration\/taxes) for `tax_rates`."
                    },
                    {
                        "name": "subscription_trial_end",
                        "in": "query",
                        "description": "If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required."
                    },
                    {
                        "name": "subscription_trial_from_plan",
                        "in": "query",
                        "description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoices\/{invoice}": {
            "delete": {
                "summary": "Delete Invoices",
                "description": "Permanently deletes a draft invoice. This cannot be undone. Attempts to delete invoices that are no longer in a draft state will fail; once an invoice has been finalized, it must be voided.",
                "operationId": "DeleteInvoicesInvoice",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "invoice",
                        "in": "path",
                        "description": "The identifier of the invoice to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Invoices",
                "description": "Retrieves the invoice with the given ID.",
                "operationId": "GetInvoicesInvoice",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "invoice",
                        "in": "path",
                        "description": "The identifier of the invoice to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Invoices",
                "description": "Draft invoices are fully editable. Once an invoice is finalized,\nmonetary values, as well as collection_method, become uneditable.\n\nIf you would like to stop the Stripe Billing engine from automatically finalizing, reattempting payments on,\nsending reminders for, or automatically reconciling invoices, pass\nauto_advance=false.",
                "operationId": "PostInvoicesInvoice",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "invoice",
                        "in": "path",
                        "description": "The identifier of the invoice to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoices\/{invoice}\/finalize": {
            "post": {
                "summary": "Post Invoices Finalize",
                "description": "Stripe automatically finalizes drafts before sending and attempting payment on invoices. However, if you\u2019d like to finalize a draft invoice manually, you can do so using this method.",
                "operationId": "PostInvoicesInvoiceFinalize",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "invoice",
                        "in": "path",
                        "description": "The identifier of the invoice to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoices\/{invoice}\/lines": {
            "get": {
                "summary": "Get Invoices Lines",
                "description": "When retrieving an invoice, you\u2019ll get a lines property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.",
                "operationId": "GetInvoicesInvoiceLines",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "invoice",
                        "in": "path",
                        "description": "The identifier of the invoice to be deleted."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoices\/{invoice}\/mark_uncollectible": {
            "post": {
                "summary": "Post Invoices Mark Uncollectible",
                "description": "Marking an invoice as uncollectible is useful for keeping track of bad debts that can be written off for accounting purposes.",
                "operationId": "PostInvoicesInvoiceMarkUncollectible",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "invoice",
                        "in": "path",
                        "description": "The identifier of the invoice to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoices\/{invoice}\/pay": {
            "post": {
                "summary": "Post Invoices Pay",
                "description": "Stripe automatically creates and then attempts to collect payment on invoices for customers on subscriptions according to your subscriptions settings. However, if you\u2019d like to attempt payment on an invoice out of the normal collection schedule or for some other reason, you can do so.",
                "operationId": "PostInvoicesInvoicePay",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "invoice",
                        "in": "path",
                        "description": "The identifier of the invoice to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoices\/{invoice}\/send": {
            "post": {
                "summary": "Post Invoices Send",
                "description": "Stripe will automatically send invoices to customers according to your subscriptions settings. However, if you\u2019d like to manually send an invoice to your customer out of the normal schedule, you can do so. When sending invoices that have already been paid, there will be no reference to the payment in the email.\n\nRequests made in test-mode result in no emails being sent, despite sending an invoice.sent e",
                "operationId": "PostInvoicesInvoiceSend",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "invoice",
                        "in": "path",
                        "description": "The identifier of the invoice to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/invoices\/{invoice}\/void": {
            "post": {
                "summary": "Post Invoices Void",
                "description": "Mark a finalized invoice as void. This cannot be undone. Voiding an invoice is similar to deletion, however it only applies to finalized invoices and maintains a papertrail where the invoice can still be found.",
                "operationId": "PostInvoicesInvoiceVoid",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "invoice",
                        "in": "path",
                        "description": "The identifier of the invoice to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuer_fraud_records": {
            "get": {
                "summary": "Get Issuer Fraud Records",
                "description": "Returns a list of issuer fraud records.",
                "operationId": "GetIssuerFraudRecords",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "query",
                        "description": "Only return application fees for the charge specified by this charge ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuer_fraud_records\/{issuer_fraud_record}": {
            "get": {
                "summary": "Get Issuer Fraud Records Issuer Fraud Record",
                "description": "Retrieves the details of an issuer fraud record that has previously been created. \n\nPlease refer to the issuer fraud record object reference for more details.",
                "operationId": "GetIssuerFraudRecordsIssuerFraudRecord",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "issuer_fraud_record",
                        "in": "path",
                        "description": "The identifier of the issuer fraud record to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/authorizations": {
            "get": {
                "summary": "Get Issuing Authorizations",
                "description": "Returns a list of Issuing Authorization objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.",
                "operationId": "GetIssuingAuthorizations",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "card",
                        "in": "query",
                        "description": "Only return issuing transactions that belong to the given card."
                    },
                    {
                        "name": "cardholder",
                        "in": "query",
                        "description": "Only return authorizations belonging to the given cardholder."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow#workflow-overview)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/authorizations\/{authorization}": {
            "get": {
                "summary": "Get Issuing Authorization",
                "description": "Retrieves an Issuing Authorization object.",
                "operationId": "GetIssuingAuthorizationsAuthorization",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "authorization",
                        "in": "path",
                        "description": "The ID of the authorization to retrieve."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Issuing Authorization",
                "description": "Updates the specified Issuing Authorization object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
                "operationId": "PostIssuingAuthorizationsAuthorization",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "authorization",
                        "in": "path",
                        "description": "The ID of the authorization to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/authorizations\/{authorization}\/approve": {
            "post": {
                "summary": "Post Issuing Authorization Approve",
                "description": "Approves a pending Issuing Authorization object.",
                "operationId": "PostIssuingAuthorizationsAuthorizationApprove",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "authorization",
                        "in": "path",
                        "description": "The ID of the authorization to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/authorizations\/{authorization}\/decline": {
            "post": {
                "summary": "Post Issuing Authorization Decline",
                "description": "Declines a pending Issuing Authorization object.",
                "operationId": "PostIssuingAuthorizationsAuthorizationDecline",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "authorization",
                        "in": "path",
                        "description": "The ID of the authorization to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/cardholders": {
            "get": {
                "summary": "Get Issuing Cardholders",
                "description": "Returns a list of Issuing Cardholder objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.",
                "operationId": "GetIssuingCardholders",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "A filter on the list based on the customer's `email` field. The value must be a string."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "is_default",
                        "in": "query",
                        "description": "Only return the default cardholder."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "Only return cardholders that have the given phone number."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow#workflow-overview)"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Only returns transactions of the given type. One of: `charge`, `refund`, `adjustment`, `application_fee`, `application_fee_refund`, `transfer`, `payment`, `payout`, `payout_failure`, `stripe_fee`, or `network_cost`."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Issuing Cardholders",
                "description": "Creates a new Issuing Cardholder object that can be issued cards.",
                "operationId": "PostIssuingCardholders",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/cardholders\/{cardholder}": {
            "get": {
                "summary": "Get Issuing Cardholders",
                "description": "Retrieves an Issuing Cardholder object.",
                "operationId": "GetIssuingCardholdersCardholder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "cardholder",
                        "in": "path",
                        "description": "The identifier of the cardholder to be retrieved."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Issuing Cardholders",
                "description": "Updates the specified Issuing Cardholder object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
                "operationId": "PostIssuingCardholdersCardholder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "cardholder",
                        "in": "path",
                        "description": "The identifier of the cardholder to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/cards": {
            "get": {
                "summary": "Get Issuing Cards",
                "description": "Returns a list of Issuing Card objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.",
                "operationId": "GetIssuingCards",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "cardholder",
                        "in": "query",
                        "description": "Only return authorizations belonging to the given cardholder."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "exp_month",
                        "in": "query",
                        "description": "Only return cards that have the given expiration month."
                    },
                    {
                        "name": "exp_year",
                        "in": "query",
                        "description": "Only return cards that have the given expiration year."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "last4",
                        "in": "query",
                        "description": "Only return cards that have the given last four digits."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Only return cards that have the given name."
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Only returns the original transaction."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow#workflow-overview)"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Only returns transactions of the given type. One of: `charge`, `refund`, `adjustment`, `application_fee`, `application_fee_refund`, `transfer`, `payment`, `payout`, `payout_failure`, `stripe_fee`, or `network_cost`."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Issuing Cards",
                "description": "Creates an Issuing Card object.",
                "operationId": "PostIssuingCards",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/cards\/{card}": {
            "get": {
                "summary": "Get Issuing Cards",
                "description": "Retrieves an Issuing Card object.",
                "operationId": "GetIssuingCardsCard",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "card",
                        "in": "path",
                        "description": "The identifier of the card to be retrieved."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Issuing Cards",
                "description": "Updates the specified Issuing Card object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
                "operationId": "PostIssuingCardsCard",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "card",
                        "in": "path",
                        "description": "The identifier of the card to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/cards\/{card}\/details": {
            "get": {
                "summary": "Get Issuing Cards Details",
                "description": "For virtual cards only. Retrieves an Issuing Card_details object that contains the sensitive details of a virtual card.",
                "operationId": "GetIssuingCardsCardDetails",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "card",
                        "in": "path",
                        "description": "The identifier of the card to be retrieved."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/cards\/{card}\/pin": {
            "get": {
                "summary": "Get Issuing Cards Pin",
                "description": "Retrieves the PIN for a card object, subject to cardholder verification, see Retrieve and update cardholder PIN",
                "operationId": "GetIssuingCardsCardPin",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "card",
                        "in": "path",
                        "description": "The identifier of the card to be retrieved."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "verification",
                        "in": "query",
                        "description": "The id of the `Verification` that was sent and the code entered by the cardholder"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Issuing Cards Pin",
                "description": "Updates the PIN for a card, subject to cardholder verification. See Retrieve and update cardholder PIN",
                "operationId": "PostIssuingCardsCardPin",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "card",
                        "in": "path",
                        "description": "The identifier of the card to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/disputes": {
            "get": {
                "summary": "Get Issuing Disputes",
                "description": "Returns a list of Issuing Dispute objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.",
                "operationId": "GetIssuingDisputes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "disputed_transaction",
                        "in": "query",
                        "description": "Only return issuing disputes for the given transaction."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Issuing Disputes",
                "description": "Creates an Issuing Dispute object.",
                "operationId": "PostIssuingDisputes",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/disputes\/{dispute}": {
            "get": {
                "summary": "Get Issuing Disputes",
                "description": "Retrieves an Issuing Dispute object.",
                "operationId": "GetIssuingDisputesDispute",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "dispute",
                        "in": "path",
                        "description": "ID of dispute to retrieve."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Issuing Disputes",
                "description": "Updates the specified Issuing Dispute object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
                "operationId": "PostIssuingDisputesDispute",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "dispute",
                        "in": "path",
                        "description": "ID of dispute to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/settlements": {
            "get": {
                "summary": "Get Issuing Settlements",
                "description": "Returns a list of Issuing Settlement objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.",
                "operationId": "GetIssuingSettlements",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/settlements\/{settlement}": {
            "get": {
                "summary": "Get Issuing Settlements",
                "description": "Retrieves an Issuing Settlement object.",
                "operationId": "GetIssuingSettlementsSettlement",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "settlement",
                        "in": "path",
                        "description": "The ID of the settlement to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Issuing Settlements",
                "description": "Updates the specified Issuing Settlement object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
                "operationId": "PostIssuingSettlementsSettlement",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "settlement",
                        "in": "path",
                        "description": "The ID of the settlement to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/transactions": {
            "get": {
                "summary": "Get Issuing Transactions",
                "description": "Returns a list of Issuing Transaction objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.",
                "operationId": "GetIssuingTransactions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "card",
                        "in": "query",
                        "description": "Only return issuing transactions that belong to the given card."
                    },
                    {
                        "name": "cardholder",
                        "in": "query",
                        "description": "Only return authorizations belonging to the given cardholder."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "dispute",
                        "in": "query",
                        "description": "Only return transactions that originate from a given dispute."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "settlement",
                        "in": "query",
                        "description": "Only return transactions that are associated with the given settlement."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/transactions\/{transaction}": {
            "get": {
                "summary": "Get Issuing Transactions",
                "description": "Retrieves an Issuing Transaction object.",
                "operationId": "GetIssuingTransactionsTransaction",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "The transaction to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Issuing Transactions",
                "description": "Updates the specified Issuing Transaction object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
                "operationId": "PostIssuingTransactionsTransaction",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "The transaction to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/issuing\/verifications": {
            "post": {
                "summary": "Post Issuing Verifications",
                "description": "Some actions (eg: updating a PIN) need confirmation from the cardholder",
                "operationId": "PostIssuingVerifications",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/order_returns": {
            "get": {
                "summary": "Get Order Returns",
                "description": "Returns a list of your order returns. The returns are returned sorted by creation date, with the most recently created return appearing first.",
                "operationId": "GetOrderReturns",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order to retrieve returns for."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/order_returns\/{id}": {
            "get": {
                "summary": "Get Order Return",
                "description": "Retrieves the details of an existing order return. Supply the unique order ID from either an order return creation request or the order return list, and Stripe will return the corresponding order information.",
                "operationId": "GetOrderReturnsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/orders": {
            "get": {
                "summary": "Get Orders",
                "description": "Returns a list of your orders. The orders are returned sorted by creation date, with the most recently created orders appearing first.",
                "operationId": "GetOrders",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Only return orders with the given IDs."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow#workflow-overview)"
                    },
                    {
                        "name": "status_transitions",
                        "in": "query",
                        "description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
                    },
                    {
                        "name": "upstream_ids",
                        "in": "query",
                        "description": "Only return orders with the given upstream order IDs."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Orders",
                "description": "Creates a new order object.",
                "operationId": "PostOrders",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/orders\/{id}": {
            "get": {
                "summary": "Get Order",
                "description": "Retrieves the details of an existing order. Supply the unique order ID from either an order creation request or the order list, and Stripe will return the corresponding order information.",
                "operationId": "GetOrdersId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Order",
                "description": "Updates the specific order by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
                "operationId": "PostOrdersId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/orders\/{id}\/pay": {
            "post": {
                "summary": "Post Order Pay",
                "description": "Pay an order by providing a source to create a payment.",
                "operationId": "PostOrdersIdPay",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/orders\/{id}\/returns": {
            "post": {
                "summary": "Post Order Returns",
                "description": "Return all or part of an order. The order must have a status of paid or fulfilled before it can be returned. Once all items have been returned, the order will become canceled or returned depending on which status the order started in.",
                "operationId": "PostOrdersIdReturns",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payment_intents": {
            "get": {
                "summary": "Get Payment Intents",
                "description": "Returns a list of PaymentIntents.",
                "operationId": "GetPaymentIntents",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Payment Intents",
                "description": "Creates a PaymentIntent object.\n\nAfter the PaymentIntent is created, attach a payment method and confirm\nto continue the payment. You can read more about the different payment flows\navailable via the Payment Intents API here.\n\nWhen confirm=true is used during creation, it is equivalent to creating\nand confirming the PaymentIntent in the same call. You may use any parameters",
                "operationId": "PostPaymentIntents",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payment_intents\/{intent}": {
            "get": {
                "summary": "Get Payment Intents",
                "description": "Retrieves the details of a PaymentIntent that has previously been created. \n\nClient-side retrieval using a publishable key is allowed when the client_secret is provided in the query string. \n\nWhen retrieved with a publishable key, only a subset of properties will be returned. Please refer to the payment intent object reference for more details.",
                "operationId": "GetPaymentIntentsIntent",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "client_secret",
                        "in": "query",
                        "description": "The client secret of the PaymentIntent. Required if a publishable key is used to retrieve the source."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "intent",
                        "in": "path",
                        "description": "ID of the PaymentIntent to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Payment Intents",
                "description": "Updates properties on a PaymentIntent object without confirming.\n\nDepending on which properties you update, you may need to confirm the\nPaymentIntent again. For example, updating the payment_method will\nalways require you to confirm the PaymentIntent again. If you prefer to\nupdate and confirm at the same time, we recommend updating properties via\nthe confirm API instead.",
                "operationId": "PostPaymentIntentsIntent",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "intent",
                        "in": "path",
                        "description": "ID of the PaymentIntent to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payment_intents\/{intent}\/cancel": {
            "post": {
                "summary": "Post Payment Intents Cancel",
                "description": "A PaymentIntent object can be canceled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_action. \n\nOnce canceled, no additional charges will be made by the PaymentIntent and any operations on the PaymentIntent will fail with an error. For PaymentIntents with status='requires_capture', the remaining amount_capturable will automatically be refunded.",
                "operationId": "PostPaymentIntentsIntentCancel",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "intent",
                        "in": "path",
                        "description": "ID of the PaymentIntent to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payment_intents\/{intent}\/capture": {
            "post": {
                "summary": "Post Payment Intents Capture",
                "description": "Capture the funds of an existing uncaptured PaymentIntent when its status is requires_capture.\n\nUncaptured PaymentIntents will be canceled exactly seven days after they are created.\n\nRead the expanded documentation to learn more about separate authorization and capture.",
                "operationId": "PostPaymentIntentsIntentCapture",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "intent",
                        "in": "path",
                        "description": "ID of the PaymentIntent to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payment_intents\/{intent}\/confirm": {
            "post": {
                "summary": "Post Payment Intents Confirm",
                "description": "Confirm that your customer intends to pay with current or provided\npayment method. Upon confirmation, the PaymentIntent will attempt to initiate\na payment.\n\nIf the selected payment method requires additional authentication steps, the\nPaymentIntent will transition to the requires_action status and\nsuggest additional actions via next_action. If payment fails,\nthe PaymentIntent will transition to the requires_payment_method status. If\npayment succeed",
                "operationId": "PostPaymentIntentsIntentConfirm",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "intent",
                        "in": "path",
                        "description": "ID of the PaymentIntent to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payment_methods": {
            "get": {
                "summary": "Get Payment Methods",
                "description": "Returns a list of PaymentMethods for a given Customer",
                "operationId": "GetPaymentMethods",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Only returns transactions of the given type. One of: `charge`, `refund`, `adjustment`, `application_fee`, `application_fee_refund`, `transfer`, `payment`, `payout`, `payout_failure`, `stripe_fee`, or `network_cost`."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Payment Methods",
                "description": "Creates a PaymentMethod object. Read the Stripe.js reference to learn how to create PaymentMethods via Stripe.js.",
                "operationId": "PostPaymentMethods",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payment_methods\/{payment_method}": {
            "get": {
                "summary": "Get Payment Methods Payment Method",
                "description": "Retrieves a PaymentMethod object.",
                "operationId": "GetPaymentMethodsPaymentMethod",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "payment_method",
                        "in": "path",
                        "description": "The ID of the PaymentMethod."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Payment Methods Payment Method",
                "description": "Updates a PaymentMethod object. A PaymentMethod must be attached a customer to be updated.",
                "operationId": "PostPaymentMethodsPaymentMethod",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "payment_method",
                        "in": "path",
                        "description": "The ID of the PaymentMethod."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payment_methods\/{payment_method}\/attach": {
            "post": {
                "summary": "Post Payment Methods Payment Method Attach",
                "description": "Attaches a PaymentMethod object to a Customer.\n\nTo use this PaymentMethod as the default for invoice or subscription payments,\nset invoice_settings.default_payment_method,\non the Customer to the PaymentMethod\u2019s ID.",
                "operationId": "PostPaymentMethodsPaymentMethodAttach",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "payment_method",
                        "in": "path",
                        "description": "The ID of the PaymentMethod."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payment_methods\/{payment_method}\/detach": {
            "post": {
                "summary": "Post Payment Methods Payment Method Detach",
                "description": "Detaches a PaymentMethod object from a Customer.",
                "operationId": "PostPaymentMethodsPaymentMethodDetach",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "payment_method",
                        "in": "path",
                        "description": "The ID of the PaymentMethod."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payouts": {
            "get": {
                "summary": "Get Payouts",
                "description": "Returns a list of existing payouts sent to third-party bank accounts or that Stripe has sent you. The payouts are returned in sorted order, with the most recently created payouts appearing first.",
                "operationId": "GetPayouts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "arrival_date",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "The ID of an external account - only return payouts sent to this external account."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow#workflow-overview)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Payouts",
                "description": "To send funds to your own bank account, you create a new payout object. Your Stripe balance must be able to cover the payout amount, or you\u2019ll receive an \u201cInsufficient Funds\u201d error.\n\nIf your API key is in test mode, money won\u2019t actually be sent, though everything else will occur as if in live mode.\n\nIf you are creating a manual payout on a Stripe account that uses multiple payment source types, you\u2019ll need to specify the source type balance that",
                "operationId": "PostPayouts",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payouts\/{payout}": {
            "get": {
                "summary": "Get Payouts",
                "description": "Retrieves the details of an existing payout. Supply the unique payout ID from either a payout creation request or the payout list, and Stripe will return the corresponding payout information.",
                "operationId": "GetPayoutsPayout",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "payout",
                        "in": "path",
                        "description": "The identifier of the payout to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Payouts",
                "description": "Updates the specified payout by setting the values of the parameters passed. Any parameters not provided will be left unchanged. This request accepts only the metadata as arguments.",
                "operationId": "PostPayoutsPayout",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "payout",
                        "in": "path",
                        "description": "The identifier of the payout to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/payouts\/{payout}\/cancel": {
            "post": {
                "summary": "Post Payouts Cancel",
                "description": "A previously created payout can be canceled if it has not yet been paid out. Funds will be refunded to your available balance. You may not cancel automatic Stripe payouts.",
                "operationId": "PostPayoutsPayoutCancel",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "payout",
                        "in": "path",
                        "description": "The identifier of the payout to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/plans": {
            "get": {
                "summary": "Get Plans",
                "description": "Returns a list of your plans.",
                "operationId": "GetPlans",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter for active receivers."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "product",
                        "in": "query",
                        "description": "Only return plans for the given product."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Plans",
                "description": "You can create plans using the API, or in the Stripe Dashboard.",
                "operationId": "PostPlans",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/plans\/{plan}": {
            "delete": {
                "summary": "Delete Plans",
                "description": "Deleting plans means new subscribers can\u2019t be added. Existing subscribers aren\u2019t affected.",
                "operationId": "DeletePlansPlan",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "description": "The identifier of the plan to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Plans",
                "description": "Retrieves the plan with the given ID.",
                "operationId": "GetPlansPlan",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "plan",
                        "in": "path",
                        "description": "The identifier of the plan to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Plans",
                "description": "Updates the specified plan by setting the values of the parameters passed. Any parameters not provided are left unchanged. By design, you cannot change a plan\u2019s ID, amount, currency, or billing cycle.",
                "operationId": "PostPlansPlan",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "description": "The identifier of the plan to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/products": {
            "get": {
                "summary": "Get Products",
                "description": "Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.",
                "operationId": "GetProducts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter for active receivers."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Only return orders with the given IDs."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "shippable",
                        "in": "query",
                        "description": "Only return products that can be shipped (i.e., physical, not digital products)."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Only returns transactions of the given type. One of: `charge`, `refund`, `adjustment`, `application_fee`, `application_fee_refund`, `transfer`, `payment`, `payout`, `payout_failure`, `stripe_fee`, or `network_cost`."
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "Only return products with the given url."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Products",
                "description": "Creates a new product object. To create a product for use with subscriptions, see Subscriptions Products.",
                "operationId": "PostProducts",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/products\/{id}": {
            "delete": {
                "summary": "Delete Product",
                "description": "Delete a product. Deleting a product with type=good is only possible if it has no SKUs associated with it. Deleting a product with type=service is only possible if it has no plans associated with it.",
                "operationId": "DeleteProductsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Product",
                "description": "Retrieves the details of an existing product. Supply the unique product ID from either a product creation request or the product list, and Stripe will return the corresponding product information.",
                "operationId": "GetProductsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Product",
                "description": "Updates the specific product by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\nNote that a product\u2019s attributes are not editable. Instead, you would need to deactivate the existing product and create a new one with the new attribute values.",
                "operationId": "PostProductsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/radar\/early_fraud_warnings": {
            "get": {
                "summary": "Get Radar Early Fraud Warnings",
                "description": "Returns a list of early fraud warnings.",
                "operationId": "GetRadarEarlyFraudWarnings",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "query",
                        "description": "Only return application fees for the charge specified by this charge ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/radar\/early_fraud_warnings\/{early_fraud_warning}": {
            "get": {
                "summary": "Get Radar Early Fraud Warnings Early Fraud Warning",
                "description": "Retrieves the details of an early fraud warning that has previously been created. \n\nPlease refer to the early fraud warning object reference for more details.",
                "operationId": "GetRadarEarlyFraudWarningsEarlyFraudWarning",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "early_fraud_warning",
                        "in": "path",
                        "description": "The identifier of the early fraud warning to be retrieved."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/radar\/value_list_items": {
            "get": {
                "summary": "Get Radar Value List Items",
                "description": "Returns a list of ValueListItem objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.",
                "operationId": "GetRadarValueListItems",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "Return items belonging to the parent list whose value matches the specified value (using an \"is like\" match)."
                    },
                    {
                        "name": "value_list",
                        "in": "query",
                        "description": "Identifier for the parent value list this item belongs to."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Radar Value List Items",
                "description": "Creates a new ValueListItem object, which is added to the specified parent value list.",
                "operationId": "PostRadarValueListItems",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/radar\/value_list_items\/{item}": {
            "delete": {
                "summary": "Delete Radar Value List Items",
                "description": "Deletes a ValueListItem object, removing it from its parent value list.",
                "operationId": "DeleteRadarValueListItemsItem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "description": "The identifier of the value list item to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Radar Value List Items",
                "description": "Retrieves a ValueListItem object.",
                "operationId": "GetRadarValueListItemsItem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "item",
                        "in": "path",
                        "description": "The identifier of the value list item to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/radar\/value_lists": {
            "get": {
                "summary": "Get Radar Value Lists",
                "description": "Returns a list of ValueList objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.",
                "operationId": "GetRadarValueLists",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "alias",
                        "in": "query",
                        "description": "The alias used to reference the value list when writing rules."
                    },
                    {
                        "name": "contains",
                        "in": "query",
                        "description": "A value contained within a value list - returns all value lists containing this value."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Radar Value Lists",
                "description": "Creates a new ValueList object, which can then be referenced in rules.",
                "operationId": "PostRadarValueLists",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/radar\/value_lists\/{value_list}": {
            "delete": {
                "summary": "Delete Radar Value Lists Value List",
                "description": "Deletes a ValueList object, also deleting any items contained within the value list. To be deleted, a value list must not be referenced in any rules.",
                "operationId": "DeleteRadarValueListsValueList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "value_list",
                        "in": "path",
                        "description": "The identifier of the value list to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Radar Value Lists Value List",
                "description": "Retrieves a ValueList object.",
                "operationId": "GetRadarValueListsValueList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "value_list",
                        "in": "path",
                        "description": "The identifier of the value list to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Radar Value Lists Value List",
                "description": "Updates a ValueList object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Note that item_type is immutable.",
                "operationId": "PostRadarValueListsValueList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "value_list",
                        "in": "path",
                        "description": "The identifier of the value list to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/recipients": {
            "get": {
                "summary": "Get Recipients",
                "description": "Returns a list of your recipients. The recipients are returned sorted by creation date, with the most recently created recipients appearing first.",
                "operationId": "GetRecipients",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Only returns transactions of the given type. One of: `charge`, `refund`, `adjustment`, `application_fee`, `application_fee_refund`, `transfer`, `payment`, `payout`, `payout_failure`, `stripe_fee`, or `network_cost`."
                    },
                    {
                        "name": "verified",
                        "in": "query",
                        "description": "Only return recipients that are verified or unverified."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Recipients",
                "description": "Creates a new Recipient object and verifies the recipient\u2019s identity.\nAlso verifies the recipient\u2019s bank account information or debit card, if either is provided.",
                "operationId": "PostRecipients",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/recipients\/{id}": {
            "delete": {
                "summary": "Delete Recipient",
                "description": "Permanently deletes a recipient. It cannot be undone.",
                "operationId": "DeleteRecipientsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Recipient",
                "description": "Retrieves the details of an existing recipient. You need only supply the unique recipient identifier that was returned upon recipient creation.",
                "operationId": "GetRecipientsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Recipient",
                "description": "Updates the specified recipient by setting the values of the parameters passed.\nAny parameters not provided will be left unchanged.\n\nIf you update the name or tax ID, the identity verification will automatically be rerun.\nIf you update the bank account, the bank account validation will automatically be rerun.",
                "operationId": "PostRecipientsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/refunds": {
            "get": {
                "summary": "Get Refunds",
                "description": "Returns a list of all refunds you\u2019ve previously created. The refunds are returned in sorted order, with the most recent refunds appearing first. For convenience, the 10 most recent refunds are always available by default on the charge object.",
                "operationId": "GetRefunds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "charge",
                        "in": "query",
                        "description": "Only return application fees for the charge specified by this charge ID."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Refunds",
                "description": "Create a refund.",
                "operationId": "PostRefunds",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/refunds\/{refund}": {
            "get": {
                "summary": "Get Refunds",
                "description": "Retrieves the details of an existing refund.",
                "operationId": "GetRefundsRefund",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "refund",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Refunds",
                "description": "Updates the specified refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\nThis request only accepts metadata as an argument.",
                "operationId": "PostRefundsRefund",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "refund",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/reporting\/report_runs": {
            "get": {
                "summary": "Get Reporting Runs",
                "description": "Returns a list of Report Runs, with the most recent appearing first. (Requires a live-mode API key.)",
                "operationId": "GetReportingReportRuns",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Reporting Runs",
                "description": "Creates a new object and begin running the report. (Requires a live-mode API key.)",
                "operationId": "PostReportingReportRuns",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/reporting\/report_runs\/{report_run}": {
            "get": {
                "summary": "Get Reporting Runs Report Run",
                "description": "Retrieves the details of an existing Report Run. (Requires a live-mode API key.)",
                "operationId": "GetReportingReportRunsReportRun",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "report_run",
                        "in": "path",
                        "description": "The ID of the run to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/reporting\/report_types": {
            "get": {
                "summary": "Get Reporting Types",
                "description": "Returns a full list of Report Types. (Requires a live-mode API key.)",
                "operationId": "GetReportingReportTypes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/reporting\/report_types\/{report_type}": {
            "get": {
                "summary": "Get Reporting Types Report Type",
                "description": "Retrieves the details of a Report Type. (Requires a live-mode API key.)",
                "operationId": "GetReportingReportTypesReportType",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "report_type",
                        "in": "path",
                        "description": "The [ID of the Report Type](https:\/\/stripe.com\/docs\/reporting\/statements\/api#available-report-types) to retrieve, such as `balance.summary.1`."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/reviews": {
            "get": {
                "summary": "Get Reviews",
                "description": "Returns a list of Review objects that have open set to true. The objects are sorted in descending order by creation date, with the most recently created object appearing first.",
                "operationId": "GetReviews",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/reviews\/{review}": {
            "get": {
                "summary": "Get Reviews",
                "description": "Retrieves a Review object.",
                "operationId": "GetReviewsReview",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "review",
                        "in": "path",
                        "description": "The identifier of the review to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/reviews\/{review}\/approve": {
            "post": {
                "summary": "Post Reviews Approve",
                "description": "Approves a Review object, closing it and removing it from the list of reviews.",
                "operationId": "PostReviewsReviewApprove",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "review",
                        "in": "path",
                        "description": "The identifier of the review to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/setup_intents": {
            "get": {
                "summary": "Get Setup Intents",
                "description": "Returns a list of SetupIntents.",
                "operationId": "GetSetupIntents",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "payment_method",
                        "in": "query",
                        "description": "Only return SetupIntents associated with the specified payment method."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Setup Intents",
                "description": "Creates a SetupIntent object.\n\nAfter the SetupIntent is created, attach a payment method and confirm\nto collect any required permissions to charge the payment method later.",
                "operationId": "PostSetupIntents",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/setup_intents\/{intent}": {
            "get": {
                "summary": "Get Setup Intents",
                "description": "Retrieves the details of a SetupIntent that has previously been created. \n\nClient-side retrieval using a publishable key is allowed when the client_secret is provided in the query string. \n\nWhen retrieved with a publishable key, only a subset of properties will be returned. Please refer to the SetupIntent object reference for more details.",
                "operationId": "GetSetupIntentsIntent",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "client_secret",
                        "in": "query",
                        "description": "The client secret of the PaymentIntent. Required if a publishable key is used to retrieve the source."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "intent",
                        "in": "path",
                        "description": "ID of the PaymentIntent to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Setup Intents",
                "description": "Updates a SetupIntent object.",
                "operationId": "PostSetupIntentsIntent",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "intent",
                        "in": "path",
                        "description": "ID of the PaymentIntent to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/setup_intents\/{intent}\/cancel": {
            "post": {
                "summary": "Post Setup Intents Cancel",
                "description": "A SetupIntent object can be canceled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_action. \n\nOnce canceled, setup is abandoned and any operations on the SetupIntent will fail with an error.",
                "operationId": "PostSetupIntentsIntentCancel",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "intent",
                        "in": "path",
                        "description": "ID of the PaymentIntent to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/setup_intents\/{intent}\/confirm": {
            "post": {
                "summary": "Post Setup Intents Confirm",
                "description": "Confirm that your customer intends to set up the current or\nprovided payment method. For example, you would confirm a SetupIntent\nwhen a customer hits the \u201cSave\u201d button on a payment method management\npage on your website.\n\nIf the selected payment method does not require any additional\nsteps from the customer, the SetupIntent will transition to the\nsucceeded status.\n\nOtherwise, it will transition to the requires_action status and\nsuggest additional a",
                "operationId": "PostSetupIntentsIntentConfirm",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "intent",
                        "in": "path",
                        "description": "ID of the PaymentIntent to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/sigma\/scheduled_query_runs": {
            "get": {
                "summary": "Get Sigma Scheduled Query Runs",
                "description": "Returns a list of scheduled query runs.",
                "operationId": "GetSigmaScheduledQueryRuns",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/sigma\/scheduled_query_runs\/{scheduled_query_run}": {
            "get": {
                "summary": "Get Sigma Scheduled Query Runs Scheduled Query Run",
                "description": "Retrieves the details of an scheduled query run.",
                "operationId": "GetSigmaScheduledQueryRunsScheduledQueryRun",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "scheduled_query_run",
                        "in": "path",
                        "description": "Unique identifier for the object."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/skus": {
            "get": {
                "summary": "Get Skus",
                "description": "Returns a list of your SKUs. The SKUs are returned sorted by creation date, with the most recently created SKUs appearing first.",
                "operationId": "GetSkus",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter for active receivers."
                    },
                    {
                        "name": "attributes",
                        "in": "query",
                        "description": "Only return SKUs that have the specified key-value pairs in this partially constructed dictionary. Can be specified only if `product` is also supplied. For instance, if the associated product has attributes `[\"color\", \"size\"]`, passing in `attributes[color]=red` returns all the SKUs for this product that have `color` set to `red`."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Only return orders with the given IDs."
                    },
                    {
                        "name": "in_stock",
                        "in": "query",
                        "description": "Only return SKUs that are either in stock or out of stock (e.g., pass `false` to list all SKUs that are out of stock). If no value is provided, all SKUs are returned."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "product",
                        "in": "query",
                        "description": "Only return plans for the given product."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Skus",
                "description": "Creates a new SKU associated with a product.",
                "operationId": "PostSkus",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/skus\/{id}": {
            "delete": {
                "summary": "Delete Sku",
                "description": "Delete a SKU. Deleting a SKU is only possible until it has been used in an order.",
                "operationId": "DeleteSkusId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Sku",
                "description": "Retrieves the details of an existing SKU. Supply the unique SKU identifier from either a SKU creation request or from the product, and Stripe will return the corresponding SKU information.",
                "operationId": "GetSkusId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Sku",
                "description": "Updates the specific SKU by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\nNote that a SKU\u2019s attributes are not editable. Instead, you would need to deactivate the existing SKU and create a new one with the new attribute values.",
                "operationId": "PostSkusId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/sources": {
            "post": {
                "summary": "Post Sources",
                "description": "Creates a new source object.",
                "operationId": "PostSources",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/sources\/{source}": {
            "get": {
                "summary": "Get Sources",
                "description": "Retrieves an existing source object. Supply the unique source ID from a source creation request and Stripe will return the corresponding up-to-date source object information.",
                "operationId": "GetSourcesSource",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "client_secret",
                        "in": "query",
                        "description": "The client secret of the PaymentIntent. Required if a publishable key is used to retrieve the source."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "source",
                        "in": "path",
                        "description": "The identifier of the source to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Sources",
                "description": "Updates the specified source by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\nThis request accepts the metadata and owner as arguments. It is also possible to update type specific information for selected payment methods. Please refer to our payment method guides for more detail.",
                "operationId": "PostSourcesSource",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "description": "The identifier of the source to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/sources\/{source}\/mandate_notifications\/{mandate_notification}": {
            "get": {
                "summary": "Get Sources Mandate Notifications Mandate Notification",
                "description": "Retrieves a new Source MandateNotification.",
                "operationId": "GetSourcesSourceMandateNotificationsMandateNotification",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "mandate_notification",
                        "in": "path",
                        "description": "The ID of the Source MandateNotification."
                    },
                    {
                        "name": "source",
                        "in": "path",
                        "description": "The identifier of the source to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/sources\/{source}\/source_transactions": {
            "get": {
                "summary": "Get Sources Transactions",
                "description": "List source transactions for a given source.",
                "operationId": "GetSourcesSourceSourceTransactions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "source",
                        "in": "path",
                        "description": "The identifier of the source to be retrieved."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/sources\/{source}\/source_transactions\/{source_transaction}": {
            "get": {
                "summary": "Get Sources Transactions Source Transaction",
                "description": "Retrieve an existing source transaction object. Supply the unique source ID from a source creation request and the source transaction ID and Stripe will return the corresponding up-to-date source object information.",
                "operationId": "GetSourcesSourceSourceTransactionsSourceTransaction",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "source",
                        "in": "path",
                        "description": "The identifier of the source to be retrieved."
                    },
                    {
                        "name": "source_transaction",
                        "in": "path",
                        "description": "The ID of the source transaction that will be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/sources\/{source}\/verify": {
            "post": {
                "summary": "Post Sources Verify",
                "description": "Verify a given source.",
                "operationId": "PostSourcesSourceVerify",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "description": "The identifier of the source to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/subscription_items": {
            "get": {
                "summary": "Get Subscription Items",
                "description": "Returns a list of your subscription items for a given subscription.",
                "operationId": "GetSubscriptionItems",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "subscription",
                        "in": "query",
                        "description": "Only return invoices for the subscription specified by this subscription ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Subscription Items",
                "description": "Adds a new item to an existing subscription. No existing items will be changed or replaced.",
                "operationId": "PostSubscriptionItems",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/subscription_items\/{item}": {
            "delete": {
                "summary": "Delete Subscription Items",
                "description": "Deletes an item from the subscription. Removing a subscription item from a subscription will not cancel the subscription.",
                "operationId": "DeleteSubscriptionItemsItem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "description": "The identifier of the value list item to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Subscription Items",
                "description": "Retrieves the invoice item with the given ID.",
                "operationId": "GetSubscriptionItemsItem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "item",
                        "in": "path",
                        "description": "The identifier of the value list item to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Subscription Items",
                "description": "Updates the plan or quantity of an item on a current subscription.",
                "operationId": "PostSubscriptionItemsItem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "description": "The identifier of the value list item to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/subscription_items\/{subscription_item}\/usage_record_summaries": {
            "get": {
                "summary": "Get Subscription Items Subscription Item Usage Record Summaries",
                "description": "For the specified subscription item, returns a list of summary objects. Each object in the list provides usage information that\u2019s been summarized from multiple usage records and over a subscription billing period (e.g., 15 usage records in the billing plan\u2019s month of September).\n\nThe list is sorted in reverse-chronological order (newest first). The first list item represents the most current usage period that hasn\u2019t ended yet. Since new usage records can still be added, the retur",
                "operationId": "GetSubscriptionItemsSubscriptionItemUsageRecordSummaries",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "subscription_item",
                        "in": "path",
                        "description": "Only summary items for the given subscription item."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/subscription_items\/{subscription_item}\/usage_records": {
            "post": {
                "summary": "Post Subscription Items Subscription Item Usage Records",
                "description": "Creates a usage record for a specified subscription item and date, and fills it with a quantity.\n\nUsage records provide quantity information that Stripe uses to track how much a customer is using your service. With usage information and the pricing model set up by the metered billing plan, Stripe helps you send accurate invoices to your customers.\n\nThe default calculation for usage is to add",
                "operationId": "PostSubscriptionItemsSubscriptionItemUsageRecords",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "subscription_item",
                        "in": "path",
                        "description": "Only summary items for the given subscription item."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/subscription_schedules": {
            "get": {
                "summary": "Get Subscription Schedules",
                "description": "Retrieves the list of your subscription schedules.",
                "operationId": "GetSubscriptionSchedules",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "canceled_at",
                        "in": "query",
                        "description": "Only return subscription schedules that were created canceled the given date interval."
                    },
                    {
                        "name": "completed_at",
                        "in": "query",
                        "description": "Only return subscription schedules that completed during the given date interval."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "released_at",
                        "in": "query",
                        "description": "Only return subscription schedules that were released during the given date interval."
                    },
                    {
                        "name": "scheduled",
                        "in": "query",
                        "description": "Only return subscription schedules that have not started yet."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Subscription Schedules",
                "description": "Creates a new subscription schedule object.",
                "operationId": "PostSubscriptionSchedules",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/subscription_schedules\/{schedule}": {
            "get": {
                "summary": "Get Subscription Schedules",
                "description": "Retrieves the details of an existing subscription schedule. You only need to supply the unique subscription schedule identifier that was returned upon subscription schedule creation.",
                "operationId": "GetSubscriptionSchedulesSchedule",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "The identifier of the subscription schedule to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Subscription Schedules",
                "description": "Updates an existing subscription schedule.",
                "operationId": "PostSubscriptionSchedulesSchedule",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "The identifier of the subscription schedule to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/subscription_schedules\/{schedule}\/cancel": {
            "post": {
                "summary": "Post Subscription Schedules Cancel",
                "description": "Cancels a subscription schedule and its associated subscription immediately (if the subscription schedule has an active subscription). A subscription schedule can only be canceled if its status is not_started or active.",
                "operationId": "PostSubscriptionSchedulesScheduleCancel",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "The identifier of the subscription schedule to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/subscription_schedules\/{schedule}\/release": {
            "post": {
                "summary": "Post Subscription Schedules Release",
                "description": "Releases the subscription schedule immediately, which will stop scheduling of its phases, but leave any existing subscription in place. A schedule can only be released if its status is not_started or active. If the subscription schedule is currently associated with a subscription, releasing it will remove its subscription property and set the subscription\u2019s ID to the released_subscription property.",
                "operationId": "PostSubscriptionSchedulesScheduleRelease",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "The identifier of the subscription schedule to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/subscriptions": {
            "get": {
                "summary": "Get Subscriptions",
                "description": "By default, returns a list of subscriptions that have not been canceled. In order to list canceled subscriptions, specify status=canceled.",
                "operationId": "GetSubscriptions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "billing",
                        "in": "query",
                        "description": "This field has been renamed to `collection_method` and will be removed in a future API version."
                    },
                    {
                        "name": "collection_method",
                        "in": "query",
                        "description": "The collection method of the invoice to retrieve. Either `charge_automatically` or `send_invoice`."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "current_period_end",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "current_period_start",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Only return transactions for the customer specified by this customer ID."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "plan",
                        "in": "query",
                        "description": "The ID of the plan whose subscriptions will be retrieved."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow#workflow-overview)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Subscriptions",
                "description": "Creates a new subscription on an existing customer.",
                "operationId": "PostSubscriptions",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/subscriptions\/{subscription_exposed_id}": {
            "delete": {
                "summary": "Delete Subscriptions Exposed Id",
                "description": "Cancels a customer\u2019s subscription immediately. The customer will not be charged again for the subscription.\n\nNote, however, that any pending invoice items that you\u2019ve created will still be charged for at the end of the period, unless manually deleted. If you\u2019ve set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel",
                "operationId": "DeleteSubscriptionsSubscriptionExposedId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "subscription_exposed_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Subscriptions Exposed Id",
                "description": "Retrieves the subscription with the given ID.",
                "operationId": "GetSubscriptionsSubscriptionExposedId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "subscription_exposed_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Subscriptions Exposed Id",
                "description": "Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the upcoming invoice endpoint.",
                "operationId": "PostSubscriptionsSubscriptionExposedId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "subscription_exposed_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/subscriptions\/{subscription_exposed_id}\/discount": {
            "delete": {
                "summary": "Delete Subscriptions Exposed Id Discount",
                "description": "Removes the currently applied discount on a subscription.",
                "operationId": "DeleteSubscriptionsSubscriptionExposedIdDiscount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "subscription_exposed_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/tax_rates": {
            "get": {
                "summary": "Get Tax Rates",
                "description": "Returns a list of your tax rates. Tax rates are returned sorted by creation date, with the most recently created tax rates appearing first.",
                "operationId": "GetTaxRates",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter for active receivers."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "inclusive",
                        "in": "query",
                        "description": "Optional flag to filter by tax rates that are inclusive (or those that are not inclusive)"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Tax Rates",
                "description": "Creates a new tax rate.",
                "operationId": "PostTaxRates",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/tax_rates\/{tax_rate}": {
            "get": {
                "summary": "Get Tax Rates Tax Rate",
                "description": "Retrieves a tax rate with the given ID",
                "operationId": "GetTaxRatesTaxRate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "tax_rate",
                        "in": "path",
                        "description": "The ID of the desired tax rate."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Tax Rates Tax Rate",
                "description": "Updates an existing tax rate.",
                "operationId": "PostTaxRatesTaxRate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "tax_rate",
                        "in": "path",
                        "description": "The ID of the desired tax rate."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/terminal\/connection_tokens": {
            "post": {
                "summary": "Post Terminal Connection Tokens",
                "description": "To connect to a reader the Stripe Terminal SDK needs to retrieve a short-lived connection token from Stripe, proxied through your server. On your backend, add an endpoint that creates and returns a connection token.",
                "operationId": "PostTerminalConnectionTokens",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/terminal\/locations": {
            "get": {
                "summary": "Get Terminal Locations",
                "description": "Returns a list of Location objects.",
                "operationId": "GetTerminalLocations",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Terminal Locations",
                "description": "Creates a new Location object.",
                "operationId": "PostTerminalLocations",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/terminal\/locations\/{location}": {
            "delete": {
                "summary": "Delete Terminal Locations",
                "description": "Deletes a Location object.",
                "operationId": "DeleteTerminalLocationsLocation",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "description": "The identifier of the location to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Terminal Locations",
                "description": "Retrieves a Location object.",
                "operationId": "GetTerminalLocationsLocation",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "location",
                        "in": "path",
                        "description": "The identifier of the location to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Terminal Locations",
                "description": "Updates a Location object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
                "operationId": "PostTerminalLocationsLocation",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "description": "The identifier of the location to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/terminal\/readers": {
            "get": {
                "summary": "Get Terminal Readers",
                "description": "Returns a list of Reader objects.",
                "operationId": "GetTerminalReaders",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "A location ID to filter the response list to only readers at the specific location"
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow#workflow-overview)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Terminal Readers",
                "description": "Creates a new Reader object.",
                "operationId": "PostTerminalReaders",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/terminal\/readers\/{reader}": {
            "delete": {
                "summary": "Delete Terminal Readers",
                "description": "Deletes a Reader object.",
                "operationId": "DeleteTerminalReadersReader",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "reader",
                        "in": "path",
                        "description": "The identifier of the reader to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Terminal Readers",
                "description": "Retrieves a Reader object.",
                "operationId": "GetTerminalReadersReader",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "reader",
                        "in": "path",
                        "description": "The identifier of the reader to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Terminal Readers",
                "description": "Updates a Reader object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
                "operationId": "PostTerminalReadersReader",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "reader",
                        "in": "path",
                        "description": "The identifier of the reader to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/tokens": {
            "post": {
                "summary": "Post Tokens",
                "description": "Creates a single-use token that represents a bank account\u2019s details.\nThis token can be used with any API method in place of a bank account dictionary. This token can be used only once, by attaching it to a Custom account.",
                "operationId": "PostTokens",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/tokens\/{token}": {
            "get": {
                "summary": "Get Tokens",
                "description": "Retrieves the token with the given ID.",
                "operationId": "GetTokensToken",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "description": "The ID of the desired token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/topups": {
            "get": {
                "summary": "Get Topups",
                "description": "Returns a list of top-ups.",
                "operationId": "GetTopups",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "A positive integer representing how much to transfer."
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow#workflow-overview)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Topups",
                "description": "Top up the balance of an account",
                "operationId": "PostTopups",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/topups\/{topup}": {
            "get": {
                "summary": "Get Topups",
                "description": "Retrieves the details of a top-up that has previously been created. Supply the unique top-up ID that was returned from your previous request, and Stripe will return the corresponding top-up information.",
                "operationId": "GetTopupsTopup",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "topup",
                        "in": "path",
                        "description": "The ID of the top-up to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Topups",
                "description": "Updates the metadata of a top-up. Other top-up details are not editable by design.",
                "operationId": "PostTopupsTopup",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "topup",
                        "in": "path",
                        "description": "The ID of the top-up to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/topups\/{topup}\/cancel": {
            "post": {
                "summary": "Post Topups Cancel",
                "description": "Cancels a top-up. Only pending top-ups can be canceled.",
                "operationId": "PostTopupsTopupCancel",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "topup",
                        "in": "path",
                        "description": "The ID of the top-up to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/transfers": {
            "get": {
                "summary": "Get Transfers",
                "description": "Returns a list of existing transfers sent to connected accounts. The transfers are returned in sorted order, with the most recently created transfers appearing first.",
                "operationId": "GetTransfers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "The ID of an external account - only return payouts sent to this external account."
                    },
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    },
                    {
                        "name": "transfer_group",
                        "in": "query",
                        "description": "Only return charges for this transfer group."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Transfers",
                "description": "To send funds from your Stripe account to a connected account, you create a new transfer object. Your Stripe balance must be able to cover the transfer amount, or you\u2019ll receive an \u201cInsufficient Funds\u201d error.",
                "operationId": "PostTransfers",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/transfers\/{id}\/reversals": {
            "get": {
                "summary": "Get Transfer Reversals",
                "description": "You can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the limit and starting_after parameters to page through additional reversals.",
                "operationId": "GetTransfersIdReversals",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Transfer Reversals",
                "description": "When you create a new reversal, you must specify a transfer to create it on.\n\nWhen reversing transfers, you can optionally reverse part of the transfer. You can do so as many times as you wish until the entire transfer has been reversed.\n\nOnce entirely reversed, a transfer can\u2019t be reversed again. This method will return an error when called on an already-reversed transfer, or when trying to reverse more money than is left on a transfer.",
                "operationId": "PostTransfersIdReversals",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/transfers\/{transfer}": {
            "get": {
                "summary": "Get Transfers",
                "description": "Retrieves the details of an existing transfer. Supply the unique transfer ID from either a transfer creation request or the transfer list, and Stripe will return the corresponding transfer information.",
                "operationId": "GetTransfersTransfer",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "transfer",
                        "in": "path",
                        "description": "The identifier of the transfer to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Transfers",
                "description": "Updates the specified transfer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\nThis request accepts only metadata as an argument.",
                "operationId": "PostTransfersTransfer",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "transfer",
                        "in": "path",
                        "description": "The identifier of the transfer to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/transfers\/{transfer}\/reversals\/{id}": {
            "get": {
                "summary": "Get Transfers Reversal",
                "description": "By default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.",
                "operationId": "GetTransfersTransferReversalsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    },
                    {
                        "name": "transfer",
                        "in": "path",
                        "description": "The identifier of the transfer to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Transfers Reversal",
                "description": "Updates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\nThis request only accepts metadata and description as arguments.",
                "operationId": "PostTransfersTransferReversalsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the external account to be deleted."
                    },
                    {
                        "name": "transfer",
                        "in": "path",
                        "description": "The identifier of the transfer to be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/webhook_endpoints": {
            "get": {
                "summary": "Get Webhook Endpoints",
                "description": "Returns a list of your webhook endpoints.",
                "operationId": "GetWebhookEndpoints",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ending_before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
                    },
                    {
                        "name": "starting_after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Webhook Endpoints",
                "description": "A webhook endpoint must have a url and a list of enabled_events. You may optionally specify the Boolean connect parameter. If set to true, then a Connect webhook endpoint that notifies the specified url about events from all connected accounts is created; otherwise an account webhook endpoint that notifies the specified url only about events from your account is created. You can also create webhook endpoints in the",
                "operationId": "PostWebhookEndpoints",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        },
        "\/v1\/webhook_endpoints\/{webhook_endpoint}": {
            "delete": {
                "summary": "Delete Webhook Endpoint",
                "description": "You can also delete webhook endpoints via the webhook endpoint management page of the Stripe dashboard.",
                "operationId": "DeleteWebhookEndpointsWebhookEndpoint",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "webhook_endpoint",
                        "in": "path",
                        "description": "The ID of the webhook endpoint to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "get": {
                "summary": "Get Webhook Endpoint",
                "description": "Retrieves the webhook endpoint with the given ID.",
                "operationId": "GetWebhookEndpointsWebhookEndpoint",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies which fields in the response should be expanded."
                    },
                    {
                        "name": "webhook_endpoint",
                        "in": "path",
                        "description": "The ID of the webhook endpoint to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            },
            "post": {
                "summary": "Post Webhook Endpoint",
                "description": "Updates the webhook endpoint. You may edit the url, the list of enabled_events, and the status of your endpoint.",
                "operationId": "PostWebhookEndpointsWebhookEndpoint",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "webhook_endpoint",
                        "in": "path",
                        "description": "The ID of the webhook endpoint to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "account": {
                "type": "object",
                "properties": {
                    "business_profile": {
                        "description": "Optional information related to the business.",
                        "type": ""
                    },
                    "business_type": {
                        "description": "The business type. Can be `individual` or `company`.",
                        "type": "string"
                    },
                    "capabilities": {
                        "description": "",
                        "type": ""
                    },
                    "charges_enabled": {
                        "description": "Whether the account can create live charges.",
                        "type": "boolean"
                    },
                    "company": {
                        "description": "",
                        "type": ""
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "default_currency": {
                        "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https:\/\/stripe.com\/docs\/payouts).",
                        "type": "string"
                    },
                    "details_submitted": {
                        "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
                        "type": "boolean"
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "external_accounts": {
                        "description": "External accounts (bank accounts and debit cards) currently attached to this account",
                        "type": "object"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "individual": {
                        "description": "",
                        "type": ""
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "payouts_enabled": {
                        "description": "Whether Stripe can send payouts to this account.",
                        "type": "boolean"
                    },
                    "requirements": {
                        "description": "",
                        "type": ""
                    },
                    "settings": {
                        "description": "Options for customizing how the account functions within Stripe.",
                        "type": ""
                    },
                    "tos_acceptance": {
                        "description": "",
                        "type": ""
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "capabilities": {
                "type": "object"
            },
            "company": {
                "type": "object"
            },
            "external_accounts": {
                "type": "object"
            },
            "individual": {
                "type": "object"
            },
            "metadata": {
                "type": "object"
            },
            "requirements": {
                "type": "object"
            },
            "tos_acceptance": {
                "type": "object"
            },
            "account_branding_settings": {
                "type": "object",
                "properties": {
                    "icon": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) An icon for the account. Must be square and at least 128px x 128px.",
                        "type": ""
                    },
                    "logo": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) A logo for the account that will be used in Checkout instead of the icon and without the account's name next to it if provided. Must be at least 128px x 128px.",
                        "type": ""
                    },
                    "primary_color": {
                        "description": "A CSS hex color value representing the primary branding color for this account",
                        "type": "string"
                    }
                }
            },
            "account_business_profile": {
                "type": "object",
                "properties": {
                    "mcc": {
                        "description": "The merchant category code for the account. MCCs are used to classify businesses based on the goods or services they provide.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "product_description": {
                        "description": "Internal-only description of the product sold or service provided by the business. It's used by Stripe for risk and underwriting purposes.",
                        "type": "string"
                    },
                    "support_address": {
                        "description": "A publicly available mailing address for sending support issues to.",
                        "type": ""
                    },
                    "support_email": {
                        "description": "A publicly available email address for sending support issues to.",
                        "type": "string"
                    },
                    "support_phone": {
                        "description": "A publicly available phone number to call with support issues.",
                        "type": "string"
                    },
                    "support_url": {
                        "description": "A publicly available website for handling support issues.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The business's publicly available website.",
                        "type": "string"
                    }
                }
            },
            "account_capabilities": {
                "type": "object",
                "properties": {
                    "card_payments": {
                        "description": "The status of the card payments capability of the account, or whether the account can directly process credit and debit card charges.",
                        "type": "string"
                    },
                    "legacy_payments": {
                        "description": "The status of the legacy payments capability of the account.",
                        "type": "string"
                    },
                    "transfers": {
                        "description": "The status of the transfers capability of the account, or whether your platform can transfer funds to the account.",
                        "type": "string"
                    }
                }
            },
            "account_capability_requirements": {
                "type": "object",
                "properties": {
                    "current_deadline": {
                        "description": "The date the fields in `currently_due` must be collected by to keep the capability enabled for the account.",
                        "type": "integer"
                    },
                    "currently_due": {
                        "description": "The fields that need to be collected to keep the capability enabled. If not collected by the `current_deadline`, these fields appear in `past_due` as well, and the capability is disabled.",
                        "type": "array"
                    },
                    "disabled_reason": {
                        "description": "If the capability is disabled, this string describes why. Possible values are `requirement.fields_needed`, `pending.onboarding`, `pending.review`, `rejected_fraud`, or `rejected.other`.",
                        "type": "string"
                    },
                    "eventually_due": {
                        "description": "The fields that need to be collected assuming all volume thresholds are reached. As they become required, these fields appear in `currently_due` as well, and the `current_deadline` is set.",
                        "type": "array"
                    },
                    "past_due": {
                        "description": "The fields that weren't collected by the `current_deadline`. These fields need to be collected to enable the capability for the account.",
                        "type": "array"
                    },
                    "pending_verification": {
                        "description": "Additional fields that may be required depending on the results of verification or review for provided requirements. If any of these fields become required, they appear in `currently_due` or `past_due`.",
                        "type": "array"
                    }
                }
            },
            "currently_due": {
                "type": "array"
            },
            "eventually_due": {
                "type": "array"
            },
            "past_due": {
                "type": "array"
            },
            "pending_verification": {
                "type": "array"
            },
            "account_card_payments_settings": {
                "type": "object",
                "properties": {
                    "decline_on": {
                        "description": "",
                        "type": ""
                    },
                    "statement_descriptor_prefix": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge. `statement_descriptor_prefix` is useful for maximizing descriptor space for the dynamic portion.",
                        "type": "string"
                    }
                }
            },
            "decline_on": {
                "type": "object"
            },
            "account_dashboard_settings": {
                "type": "object",
                "properties": {
                    "display_name": {
                        "description": "The display name for this account. This is used on the Stripe Dashboard to differentiate between accounts.",
                        "type": "string"
                    },
                    "timezone": {
                        "description": "The timezone used in the Stripe Dashboard for this account. A list of possible time zone values is maintained at the [IANA Time Zone Database](http:\/\/www.iana.org\/time-zones).",
                        "type": "string"
                    }
                }
            },
            "account_decline_charge_on": {
                "type": "object",
                "properties": {
                    "avs_failure": {
                        "description": "Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification.",
                        "type": "boolean"
                    },
                    "cvc_failure": {
                        "description": "Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.",
                        "type": "boolean"
                    }
                }
            },
            "account_link": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "expires_at": {
                        "description": "The timestamp at which this account link will expire.",
                        "type": "integer"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The business's publicly available website.",
                        "type": "string"
                    }
                }
            },
            "account_payments_settings": {
                "type": "object",
                "properties": {
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    },
                    "statement_descriptor_kana": {
                        "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only)",
                        "type": "string"
                    },
                    "statement_descriptor_kanji": {
                        "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only)",
                        "type": "string"
                    }
                }
            },
            "account_payout_settings": {
                "type": "object",
                "properties": {
                    "debit_negative_balances": {
                        "description": "A Boolean indicating if Stripe should try to reclaim negative balances from an attached bank account. See our [Understanding Connect Account Balances](https:\/\/stripe.com\/docs\/connect\/account-balances) documentation for details. Default value is `true` for Express accounts and `false` for Custom accounts.",
                        "type": "boolean"
                    },
                    "schedule": {
                        "description": "",
                        "type": ""
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    }
                }
            },
            "schedule": {
                "type": "object"
            },
            "account_requirements": {
                "type": "object",
                "properties": {
                    "current_deadline": {
                        "description": "The date the fields in `currently_due` must be collected by to keep the capability enabled for the account.",
                        "type": "integer"
                    },
                    "currently_due": {
                        "description": "The fields that need to be collected to keep the capability enabled. If not collected by the `current_deadline`, these fields appear in `past_due` as well, and the capability is disabled.",
                        "type": "array"
                    },
                    "disabled_reason": {
                        "description": "If the capability is disabled, this string describes why. Possible values are `requirement.fields_needed`, `pending.onboarding`, `pending.review`, `rejected_fraud`, or `rejected.other`.",
                        "type": "string"
                    },
                    "eventually_due": {
                        "description": "The fields that need to be collected assuming all volume thresholds are reached. As they become required, these fields appear in `currently_due` as well, and the `current_deadline` is set.",
                        "type": "array"
                    },
                    "past_due": {
                        "description": "The fields that weren't collected by the `current_deadline`. These fields need to be collected to enable the capability for the account.",
                        "type": "array"
                    },
                    "pending_verification": {
                        "description": "Additional fields that may be required depending on the results of verification or review for provided requirements. If any of these fields become required, they appear in `currently_due` or `past_due`.",
                        "type": "array"
                    }
                }
            },
            "account_settings": {
                "type": "object",
                "properties": {
                    "branding": {
                        "description": "",
                        "type": ""
                    },
                    "card_payments": {
                        "description": "",
                        "type": ""
                    },
                    "dashboard": {
                        "description": "",
                        "type": ""
                    },
                    "payments": {
                        "description": "",
                        "type": ""
                    },
                    "payouts": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "branding": {
                "type": "object"
            },
            "card_payments": {
                "type": "object"
            },
            "dashboard": {
                "type": "object"
            },
            "payments": {
                "type": "object"
            },
            "payouts": {
                "type": "object"
            },
            "account_tos_acceptance": {
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The Unix timestamp marking when the Stripe Services Agreement was accepted by the account representative",
                        "type": "integer"
                    },
                    "ip": {
                        "description": "The IP address from which the Stripe Services Agreement was accepted by the account representative",
                        "type": "string"
                    },
                    "user_agent": {
                        "description": "The user agent of the browser from which the Stripe Services Agreement was accepted by the account representative",
                        "type": "string"
                    }
                }
            },
            "address": {
                "type": "object",
                "properties": {
                    "city": {
                        "description": "City\/District\/Suburb\/Town\/Village.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "line1": {
                        "description": "Address line 1 (Street address\/PO Box\/Company name).",
                        "type": "string"
                    },
                    "line2": {
                        "description": "Address line 2 (Apartment\/Suite\/Unit\/Building).",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "ZIP or postal code.",
                        "type": "string"
                    },
                    "state": {
                        "description": "State\/County\/Province\/Region.",
                        "type": "string"
                    }
                }
            },
            "alipay_account": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "payment_amount": {
                        "description": "If the Alipay account object is not reusable, the exact amount that you can create a charge for.",
                        "type": "integer"
                    },
                    "payment_currency": {
                        "description": "If the Alipay account object is not reusable, the exact currency that you can create a charge for.",
                        "type": "string"
                    },
                    "reusable": {
                        "description": "True if you can create multiple payments using this account. If the account is reusable, then you can freely choose the amount of each payment.",
                        "type": "boolean"
                    },
                    "used": {
                        "description": "Whether this Alipay account object has ever been used for a payment.",
                        "type": "boolean"
                    },
                    "username": {
                        "description": "The username for the Alipay account.",
                        "type": "string"
                    }
                }
            },
            "api_errors": {
                "type": "object",
                "properties": {
                    "charge": {
                        "description": "For card errors, the ID of the failed charge.",
                        "type": "string"
                    },
                    "code": {
                        "description": "For some errors that could be handled programmatically, a short string indicating the [error code](https:\/\/stripe.com\/docs\/error-codes) reported.",
                        "type": "string"
                    },
                    "decline_code": {
                        "description": "For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https:\/\/stripe.com\/docs\/declines#issuer-declines) if they provide one.",
                        "type": "string"
                    },
                    "doc_url": {
                        "description": "A URL to more information about the [error code](https:\/\/stripe.com\/docs\/error-codes) reported.",
                        "type": "string"
                    },
                    "message": {
                        "description": "A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.",
                        "type": "string"
                    },
                    "param": {
                        "description": "If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.",
                        "type": "string"
                    },
                    "payment_intent": {
                        "description": "",
                        "type": ""
                    },
                    "payment_method": {
                        "description": "",
                        "type": ""
                    },
                    "setup_intent": {
                        "description": "",
                        "type": ""
                    },
                    "source": {
                        "description": "The source object for errors returned on a request involving a source.",
                        "type": ""
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "payment_intent": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "amount_capturable": {
                        "description": "Amount that can be captured from this PaymentIntent.",
                        "type": "integer"
                    },
                    "amount_received": {
                        "description": "The amount of `currency` to which `bitcoin_amount_received` has been converted.",
                        "type": "integer"
                    },
                    "application": {
                        "description": "ID of the Connect application that earned the fee.",
                        "type": ""
                    },
                    "application_fee_amount": {
                        "description": "The amount of the application fee (if any) for the charge. [See the Connect documentation](https:\/\/stripe.com\/docs\/connect\/direct-charges#collecting-fees) for details.",
                        "type": "integer"
                    },
                    "canceled_at": {
                        "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "cancellation_reason": {
                        "description": "Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).",
                        "type": "string"
                    },
                    "capture_method": {
                        "description": "One of `automatic` (default) or `manual`.\n\nWhen the capture method is `automatic`, Stripe automatically captures funds when the customer authorizes the payment.\n\nChange `capture_method` to manual if you wish to [separate authorization and capture](https:\/\/stripe.com\/docs\/payments\/payment-intents\/creating-payment-intents#separate-authorization-and-capture) for payment methods that support this.",
                        "type": "string"
                    },
                    "charges": {
                        "description": "Charges that were created by this PaymentIntent, if any.",
                        "type": "object"
                    },
                    "client_secret": {
                        "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nPlease refer to our [automatic confirmation quickstart guide](https:\/\/stripe.com\/docs\/payments\/payment-intents\/quickstart#automatic-confirmation-flow) to learn about how `client_secret` should be handled.",
                        "type": "string"
                    },
                    "confirmation_method": {
                        "description": "One of `automatic` (default) or `manual`.\n\nWhen the confirmation method is `automatic`, a PaymentIntent can be confirmed using a publishable key. After `next_action`s are handled, no additional confirmation is required to complete the payment.\n\nWhen the confirmation method is `manual`, all payment attempts must be made using a secret key. The PaymentIntent returns to the `requires_confirmation` state after handling `next_action`s, and requires your server to initiate each payment attempt with an explicit confirmation.\n\nLearn more about the different [confirmation flows](https:\/\/stripe.com\/docs\/payments\/payment-intents#one-time-payments).",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "invoice": {
                        "description": "ID of the invoice this charge is for if one exists.",
                        "type": ""
                    },
                    "last_payment_error": {
                        "description": "The payment error encountered in the previous PaymentIntent confirmation.",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "next_action": {
                        "description": "If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.",
                        "type": ""
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "on_behalf_of": {
                        "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https:\/\/stripe.com\/docs\/connect\/charges-transfers) for details.",
                        "type": ""
                    },
                    "payment_method": {
                        "description": "",
                        "type": ""
                    },
                    "payment_method_options": {
                        "description": "Payment-method-specific configuration for this PaymentIntent.",
                        "type": ""
                    },
                    "payment_method_types": {
                        "description": "A list of the types of payment methods (e.g. card) this Checkout\nSession is allowed to accept.",
                        "type": "array"
                    },
                    "receipt_email": {
                        "description": "This is the email address that the receipt for this charge was sent to.",
                        "type": "string"
                    },
                    "review": {
                        "description": "ID of the review associated with this charge if one exists.",
                        "type": ""
                    },
                    "setup_future_usage": {
                        "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf present, the payment method used with this PaymentIntent can be [attached](https:\/\/stripe.com\/docs\/api\/payment_methods\/attach) to a Customer, even after the transaction completes.\n\nUse `on_session` if you intend to only reuse the payment method when your customer is present in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. See [Saving card details after a payment](https:\/\/stripe.com\/docs\/payments\/cards\/saving-cards-after-payment) to learn more.\n\nStripe uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules. For example, if your customer is impacted by [SCA](https:\/\/stripe.com\/docs\/strong-customer-authentication), using `off_session` will ensure that they are authenticated while processing this PaymentIntent. You will then be able to collect [off-session payments](https:\/\/stripe.com\/docs\/payments\/cards\/charging-saved-cards#off-session-payments-with-saved-cards) for this customer.",
                        "type": "string"
                    },
                    "shipping": {
                        "description": "Shipping information for the charge.",
                        "type": ""
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    },
                    "statement_descriptor_suffix": {
                        "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that\u2019s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "transfer_data": {
                        "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https:\/\/stripe.com\/docs\/connect\/destination-charges) for details.",
                        "type": ""
                    },
                    "transfer_group": {
                        "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https:\/\/stripe.com\/docs\/connect\/charges-transfers#grouping-transactions) for details.",
                        "type": "string"
                    }
                }
            },
            "payment_method": {
                "type": "object",
                "properties": {
                    "billing_details": {
                        "description": "",
                        "type": ""
                    },
                    "card": {
                        "description": "",
                        "type": ""
                    },
                    "card_present": {
                        "description": "",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "setup_intent": {
                "type": "object",
                "properties": {
                    "application": {
                        "description": "ID of the Connect application that earned the fee.",
                        "type": ""
                    },
                    "cancellation_reason": {
                        "description": "Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).",
                        "type": "string"
                    },
                    "client_secret": {
                        "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nPlease refer to our [automatic confirmation quickstart guide](https:\/\/stripe.com\/docs\/payments\/payment-intents\/quickstart#automatic-confirmation-flow) to learn about how `client_secret` should be handled.",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "last_setup_error": {
                        "description": "The error encountered in the previous SetupIntent confirmation.",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "next_action": {
                        "description": "If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.",
                        "type": ""
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "on_behalf_of": {
                        "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https:\/\/stripe.com\/docs\/connect\/charges-transfers) for details.",
                        "type": ""
                    },
                    "payment_method": {
                        "description": "",
                        "type": ""
                    },
                    "payment_method_options": {
                        "description": "Payment-method-specific configuration for this PaymentIntent.",
                        "type": ""
                    },
                    "payment_method_types": {
                        "description": "A list of the types of payment methods (e.g. card) this Checkout\nSession is allowed to accept.",
                        "type": "array"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "usage": {
                        "description": "Indicates how the payment method is intended to be used in the future.\n\nUse `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.",
                        "type": "string"
                    }
                }
            },
            "apple_pay_domain": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "domain_name": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "application": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "application_fee": {
                "type": "object",
                "properties": {
                    "account": {
                        "description": "ID of the Stripe account this fee was taken from.",
                        "type": ""
                    },
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "amount_refunded": {
                        "description": "Amount in %s refunded (can be less than the amount attribute on the fee if a partial refund was issued)",
                        "type": "integer"
                    },
                    "application": {
                        "description": "ID of the Connect application that earned the fee.",
                        "type": ""
                    },
                    "balance_transaction": {
                        "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
                        "type": ""
                    },
                    "charge": {
                        "description": "ID of the charge that the application fee was taken from.",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "originating_transaction": {
                        "description": "ID of the corresponding charge on the platform account, if this fee was the result of a charge using the `destination` parameter.",
                        "type": ""
                    },
                    "refunded": {
                        "description": "Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false.",
                        "type": "boolean"
                    },
                    "refunds": {
                        "description": "A list of refunds that have been applied to the fee.",
                        "type": "object"
                    }
                }
            },
            "refunds": {
                "type": "object"
            },
            "balance": {
                "type": "object",
                "properties": {
                    "available": {
                        "description": "Funds that are available to be transferred or paid out, whether automatically by Stripe or explicitly via the [Transfers API](#transfers) or [Payouts API](#payouts). The available balance for each currency and payment type can be found in the `source_types` property.",
                        "type": "array"
                    },
                    "connect_reserved": {
                        "description": "Funds held due to negative balances on connected Custom accounts. The connect reserve balance for each currency and payment type can be found in the `source_types` property.",
                        "type": "array"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "pending": {
                        "description": "Funds that are not yet available in the balance, due to the 7-day rolling pay cycle. The pending balance for each currency, and for each payment type, can be found in the `source_types` property.",
                        "type": "array"
                    }
                }
            },
            "available": {
                "type": "array"
            },
            "connect_reserved": {
                "type": "array"
            },
            "pending": {
                "type": "array"
            },
            "balance_amount": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "source_types": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "source_types": {
                "type": "object"
            },
            "balance_amount_by_source_type": {
                "type": "object",
                "properties": {
                    "bank_account": {
                        "description": "Amount for bank account.",
                        "type": "integer"
                    },
                    "card": {
                        "description": "Amount for card.",
                        "type": "integer"
                    }
                }
            },
            "balance_transaction": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "available_on": {
                        "description": "The date the transaction's net funds will become available in the Stripe balance.",
                        "type": "integer"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "exchange_rate": {
                        "description": "",
                        "type": "number"
                    },
                    "fee": {
                        "description": "Fees (in %s) paid for this transaction.",
                        "type": "integer"
                    },
                    "fee_details": {
                        "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
                        "type": "array"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "net": {
                        "description": "Net amount of the transaction, in %s.",
                        "type": "integer"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "source": {
                        "description": "The source object for errors returned on a request involving a source.",
                        "type": ""
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "fee_details": {
                "type": "array"
            },
            "bank_account": {
                "type": "object",
                "properties": {
                    "account": {
                        "description": "ID of the Stripe account this fee was taken from.",
                        "type": ""
                    },
                    "account_holder_name": {
                        "description": "The name of the person or business that owns the bank account.",
                        "type": "string"
                    },
                    "account_holder_type": {
                        "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
                        "type": "string"
                    },
                    "bank_name": {
                        "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "default_for_currency": {
                        "description": "Whether this bank account is the default external account for its currency.",
                        "type": "boolean"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "routing_number": {
                        "description": "The routing transit number for the bank account.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    }
                }
            },
            "billing_details": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "Billing address.",
                        "type": ""
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Billing phone number (including extension).",
                        "type": "string"
                    }
                }
            },
            "bitcoin_receiver": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "True when this bitcoin receiver has received a non-zero amount of bitcoin.",
                        "type": "boolean"
                    },
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "amount_received": {
                        "description": "The amount of `currency` to which `bitcoin_amount_received` has been converted.",
                        "type": "integer"
                    },
                    "bitcoin_amount": {
                        "description": "The amount of bitcoin that the customer should send to fill the receiver. The `bitcoin_amount` is denominated in Satoshi: there are 10^8 Satoshi in one bitcoin.",
                        "type": "integer"
                    },
                    "bitcoin_amount_received": {
                        "description": "The amount of bitcoin that has been sent by the customer to this receiver.",
                        "type": "integer"
                    },
                    "bitcoin_uri": {
                        "description": "This URI can be displayed to the customer as a clickable link (to activate their bitcoin client) or as a QR code (for mobile wallets).",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "filled": {
                        "description": "This flag is initially false and updates to true when the customer sends the `bitcoin_amount` to this receiver.",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "inbound_address": {
                        "description": "A bitcoin address that is specific to this receiver. The customer can send bitcoin to this address to fill the receiver.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "payment": {
                        "description": "The ID of the payment created from the receiver, if any. Hidden when viewing the receiver with a publishable key.",
                        "type": "string"
                    },
                    "refund_address": {
                        "description": "",
                        "type": "string"
                    },
                    "transactions": {
                        "description": "A list with one entry for each time that the customer sent bitcoin to the receiver. Hidden when viewing the receiver with a publishable key.",
                        "type": "object"
                    },
                    "uncaptured_funds": {
                        "description": "This receiver contains uncaptured funds that can be used for a payment or refunded.",
                        "type": "boolean"
                    },
                    "used_for_payment": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "transactions": {
                "type": "array"
            },
            "bitcoin_transaction": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "bitcoin_amount": {
                        "description": "The amount of bitcoin that the customer should send to fill the receiver. The `bitcoin_amount` is denominated in Satoshi: there are 10^8 Satoshi in one bitcoin.",
                        "type": "integer"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "receiver": {
                        "description": "The receiver to which this transaction was sent.",
                        "type": "string"
                    }
                }
            },
            "capability": {
                "type": "object",
                "properties": {
                    "account": {
                        "description": "ID of the Stripe account this fee was taken from.",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "requested": {
                        "description": "Whether the capability has been requested.",
                        "type": "boolean"
                    },
                    "requested_at": {
                        "description": "Time at which the capability was requested. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "requirements": {
                        "description": "",
                        "type": ""
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    }
                }
            },
            "card": {
                "type": "object",
                "properties": {
                    "account": {
                        "description": "ID of the Stripe account this fee was taken from.",
                        "type": ""
                    },
                    "address_city": {
                        "description": "City\/District\/Suburb\/Town\/Village.",
                        "type": "string"
                    },
                    "address_country": {
                        "description": "Billing address country, if provided when creating card.",
                        "type": "string"
                    },
                    "address_line1": {
                        "description": "Address line 1 (Street address\/PO Box\/Company name).",
                        "type": "string"
                    },
                    "address_line1_check": {
                        "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "address_line2": {
                        "description": "Address line 2 (Apartment\/Suite\/Unit\/Building).",
                        "type": "string"
                    },
                    "address_state": {
                        "description": "State\/County\/Province\/Region.",
                        "type": "string"
                    },
                    "address_zip": {
                        "description": "ZIP or postal code.",
                        "type": "string"
                    },
                    "address_zip_check": {
                        "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "available_payout_methods": {
                        "description": "A set of available payout methods for this card. Will be either `[\"standard\"]` or `[\"standard\", \"instant\"]`. Only values from this set should be passed as the `method` when creating a transfer.",
                        "type": "array"
                    },
                    "brand": {
                        "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "cvc_check": {
                        "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "default_for_currency": {
                        "description": "Whether this bank account is the default external account for its currency.",
                        "type": "boolean"
                    },
                    "dynamic_last4": {
                        "description": "(For tokenized numbers only.) The last four digits of the device account number.",
                        "type": "string"
                    },
                    "exp_month": {
                        "description": "Two-digit number representing the card's expiration month.",
                        "type": "integer"
                    },
                    "exp_year": {
                        "description": "Four-digit number representing the card's expiration year.",
                        "type": "integer"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "funding": {
                        "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "recipient": {
                        "description": "The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.",
                        "type": ""
                    },
                    "tokenization_method": {
                        "description": "If the card number is tokenized, this is the method that was used. Can be `apple_pay` or `google_pay`.",
                        "type": "string"
                    }
                }
            },
            "available_payout_methods": {
                "type": "array"
            },
            "charge": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "amount_refunded": {
                        "description": "Amount in %s refunded (can be less than the amount attribute on the fee if a partial refund was issued)",
                        "type": "integer"
                    },
                    "application": {
                        "description": "ID of the Connect application that earned the fee.",
                        "type": ""
                    },
                    "application_fee": {
                        "description": "The application fee (if any) for the charge. [See the Connect documentation](https:\/\/stripe.com\/docs\/connect\/direct-charges#collecting-fees) for details.",
                        "type": ""
                    },
                    "application_fee_amount": {
                        "description": "The amount of the application fee (if any) for the charge. [See the Connect documentation](https:\/\/stripe.com\/docs\/connect\/direct-charges#collecting-fees) for details.",
                        "type": "integer"
                    },
                    "balance_transaction": {
                        "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
                        "type": ""
                    },
                    "billing_details": {
                        "description": "",
                        "type": ""
                    },
                    "captured": {
                        "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
                        "type": "boolean"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "dispute": {
                        "description": "Details about the dispute if the charge has been disputed.",
                        "type": ""
                    },
                    "failure_code": {
                        "description": "Error code explaining reason for charge failure if available (see [the errors section](https:\/\/stripe.com\/docs\/api#errors) for a list of codes).",
                        "type": "string"
                    },
                    "failure_message": {
                        "description": "Message to user further explaining reason for charge failure if available.",
                        "type": "string"
                    },
                    "fraud_details": {
                        "description": "Information on fraud assessments for the charge.",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "invoice": {
                        "description": "ID of the invoice this charge is for if one exists.",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "on_behalf_of": {
                        "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https:\/\/stripe.com\/docs\/connect\/charges-transfers) for details.",
                        "type": ""
                    },
                    "order": {
                        "description": "ID of the order this charge is for if one exists.",
                        "type": ""
                    },
                    "outcome": {
                        "description": "Details about whether the payment was accepted, and why. See [understanding declines](https:\/\/stripe.com\/docs\/declines) for details.",
                        "type": ""
                    },
                    "paid": {
                        "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
                        "type": "boolean"
                    },
                    "payment_intent": {
                        "description": "ID of the PaymentIntent associated with this charge, if one exists.",
                        "type": "string"
                    },
                    "payment_method": {
                        "description": "ID of the payment method used in this charge.",
                        "type": "string"
                    },
                    "payment_method_details": {
                        "description": "Details about the payment method at the time of the transaction.",
                        "type": ""
                    },
                    "receipt_email": {
                        "description": "This is the email address that the receipt for this charge was sent to.",
                        "type": "string"
                    },
                    "receipt_number": {
                        "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
                        "type": "string"
                    },
                    "receipt_url": {
                        "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
                        "type": "string"
                    },
                    "refunded": {
                        "description": "Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false.",
                        "type": "boolean"
                    },
                    "refunds": {
                        "description": "A list of refunds that have been applied to the fee.",
                        "type": "object"
                    },
                    "review": {
                        "description": "ID of the review associated with this charge if one exists.",
                        "type": ""
                    },
                    "shipping": {
                        "description": "Shipping information for the charge.",
                        "type": ""
                    },
                    "source_transfer": {
                        "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https:\/\/stripe.com\/docs\/connect\/destination-charges) for details.",
                        "type": ""
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    },
                    "statement_descriptor_suffix": {
                        "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that\u2019s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "transfer": {
                        "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
                        "type": ""
                    },
                    "transfer_data": {
                        "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https:\/\/stripe.com\/docs\/connect\/destination-charges) for details.",
                        "type": ""
                    },
                    "transfer_group": {
                        "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https:\/\/stripe.com\/docs\/connect\/charges-transfers#grouping-transactions) for details.",
                        "type": "string"
                    }
                }
            },
            "charge_fraud_details": {
                "type": "object",
                "properties": {
                    "stripe_report": {
                        "description": "Assessments from Stripe. If set, the value is `fraudulent`.",
                        "type": "string"
                    },
                    "user_report": {
                        "description": "Assessments reported by you. If set, possible values of are `safe` and `fraudulent`.",
                        "type": "string"
                    }
                }
            },
            "charge_outcome": {
                "type": "object",
                "properties": {
                    "network_status": {
                        "description": "Possible values are `approved_by_network`, `declined_by_network`, `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval` indicates the payment was [blocked by Stripe](https:\/\/stripe.com\/docs\/declines#blocked-payments) after bank authorization, and may temporarily appear as \"pending\" on a cardholder's statement.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https:\/\/stripe.com\/docs\/declines) for more details.",
                        "type": "string"
                    },
                    "risk_level": {
                        "description": "Stripe's evaluation of the riskiness of the payment. Possible values for evaluated payments are `normal`, `elevated`, `highest`. For non-card payments, and card-based payments predating the public assignment of risk levels, this field will have the value `not_assessed`. In the event of an error in the evaluation, this field will have the value `unknown`.",
                        "type": "string"
                    },
                    "risk_score": {
                        "description": "Stripe's evaluation of the riskiness of the payment. Possible values for evaluated payments are between 0 and 100. For non-card payments, card-based payments predating the public assignment of risk scores, or in the event of an error during evaluation, this field will not be present. This field is only available with Radar for Fraud Teams.",
                        "type": "integer"
                    },
                    "rule": {
                        "description": "The ID of the Radar rule that matched the payment, if applicable.",
                        "type": ""
                    },
                    "seller_message": {
                        "description": "A human-readable description of the outcome type and reason, designed for you (the recipient of the payment), not your customer.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "charge_transfer_data": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "destination": {
                        "description": "ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.",
                        "type": ""
                    }
                }
            },
            "checkout.session": {
                "type": "object",
                "properties": {
                    "billing_address_collection": {
                        "description": "The value (`auto` or `required`) for whether Checkout collected the\ncustomer's billing address.",
                        "type": "string"
                    },
                    "cancel_url": {
                        "description": "The URL the customer will be directed to if they decide to cancel payment and return to your website.",
                        "type": "string"
                    },
                    "client_reference_id": {
                        "description": "A unique string to reference the Checkout Session. This can be a\ncustomer ID, a cart ID, or similar, and can be used to reconcile the\nsession with your internal systems.",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "customer_email": {
                        "description": "If provided, this value will be used when the Customer object is created.\nIf not provided, customers will be asked to enter their email address.\nUse this parameter to prefill customer data if you already have an email\non file. To access information about the customer once a session is\ncomplete, use the `customer` field.",
                        "type": "string"
                    },
                    "display_items": {
                        "description": "The line items, plans, or SKUs purchased by the customer.",
                        "type": "array"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "locale": {
                        "description": "The IETF language tag of the locale Checkout is displayed in. If blank\nor `auto`, the browser's locale is used.",
                        "type": "string"
                    },
                    "mode": {
                        "description": "The mode of the Checkout Session, one of `payment`, `setup`, or `subscription`.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "payment_intent": {
                        "description": "",
                        "type": ""
                    },
                    "payment_method_types": {
                        "description": "A list of the types of payment methods (e.g. card) this Checkout\nSession is allowed to accept.",
                        "type": "array"
                    },
                    "setup_intent": {
                        "description": "",
                        "type": ""
                    },
                    "submit_type": {
                        "description": "Describes the type of transaction being performed by Checkout in order\nto customize relevant text on the page, such as the submit button.\n`submit_type` can only be specified on Checkout Sessions using line\nitems or a SKU, but not Checkout Sessions for subscriptions. Supported\nvalues are\n`auto`, `book`, `donate`, or `pay`.",
                        "type": "string"
                    },
                    "subscription": {
                        "description": "The ID of the subscription created if one or more plans were provided.",
                        "type": ""
                    },
                    "success_url": {
                        "description": "The URL the customer will be directed to after the payment or\nsubscription creation is successful.",
                        "type": "string"
                    }
                }
            },
            "display_items": {
                "type": "array"
            },
            "payment_method_types": {
                "type": "array"
            },
            "checkout_session_custom_display_item_description": {
                "type": "object",
                "properties": {
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "images": {
                        "description": "The images of the line item.",
                        "type": "array"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    }
                }
            },
            "images": {
                "type": "array"
            },
            "checkout_session_display_item": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "custom": {
                        "description": "",
                        "type": ""
                    },
                    "plan": {
                        "description": "",
                        "type": ""
                    },
                    "quantity": {
                        "description": "Quantity of the display item being purchased.",
                        "type": "integer"
                    },
                    "sku": {
                        "description": "",
                        "type": ""
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "custom": {
                "type": "object"
            },
            "plan": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "True when this bitcoin receiver has received a non-zero amount of bitcoin.",
                        "type": "boolean"
                    },
                    "aggregate_usage": {
                        "description": "Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for picking the last usage record reported within a period, `last_ever` for picking the last usage record ever (across period bounds) or `max` which picks the usage record with the maximum reported usage during a period. Defaults to `sum`.",
                        "type": "string"
                    },
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "amount_decimal": {
                        "description": "Same as `amount`, but contains a decimal value with at most 12 decimal places.",
                        "type": "string"
                    },
                    "billing_scheme": {
                        "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "interval": {
                        "description": "The time interval with which to apply this spending limit towards. Allowed values are `per_authorization`, `daily`, `weekly`, `monthly`, `yearly`, or `all_time`.",
                        "type": "string"
                    },
                    "interval_count": {
                        "description": "The number of intervals (specified in the `interval` property) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.",
                        "type": "integer"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "nickname": {
                        "description": "A brief description of the plan, hidden from customers.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "product": {
                        "description": "The product whose pricing this plan determines.",
                        "type": ""
                    },
                    "tiers": {
                        "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
                        "type": "array"
                    },
                    "tiers_mode": {
                        "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows.",
                        "type": "string"
                    },
                    "transform_usage": {
                        "description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`.",
                        "type": ""
                    },
                    "trial_period_days": {
                        "description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https:\/\/stripe.com\/docs\/api#create_subscription-trial_from_plan).",
                        "type": "integer"
                    },
                    "usage_type": {
                        "description": "Configures how the quantity per period should be determined, can be either `metered` or `licensed`. `licensed` will automatically bill the `quantity` set for a plan when adding it to a subscription, `metered` will aggregate the total usage based on usage records. Defaults to `licensed`.",
                        "type": "string"
                    }
                }
            },
            "sku": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "True when this bitcoin receiver has received a non-zero amount of bitcoin.",
                        "type": "boolean"
                    },
                    "attributes": {
                        "description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.",
                        "type": "object"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "image": {
                        "description": "The URL of an image for this SKU, meant to be displayable to the customer.",
                        "type": "string"
                    },
                    "inventory": {
                        "description": "",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "package_dimensions": {
                        "description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. Only applicable to products of `type=good`.",
                        "type": ""
                    },
                    "price": {
                        "description": "The cost of the item as a positive integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 100 to charge \u00a5100, Japanese Yen being a zero-decimal currency).",
                        "type": "integer"
                    },
                    "product": {
                        "description": "The product whose pricing this plan determines.",
                        "type": ""
                    },
                    "updated": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "connect_collection_transfer": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "destination": {
                        "description": "ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "country_spec": {
                "type": "object",
                "properties": {
                    "default_currency": {
                        "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https:\/\/stripe.com\/docs\/payouts).",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "supported_bank_account_currencies": {
                        "description": "Currencies that can be accepted in the specific country (for transfers).",
                        "type": "object"
                    },
                    "supported_payment_currencies": {
                        "description": "Currencies that can be accepted in the specified country (for payments).",
                        "type": "array"
                    },
                    "supported_payment_methods": {
                        "description": "Payment methods available in the specified country. You may need to enable some payment methods (e.g., [ACH](https:\/\/stripe.com\/docs\/ach)) on your account before they appear in this list. The `stripe` payment method refers to [charging through your platform](https:\/\/stripe.com\/docs\/connect\/destination-charges).",
                        "type": "array"
                    },
                    "supported_transfer_countries": {
                        "description": "Countries that can accept transfers from the specified country.",
                        "type": "array"
                    },
                    "verification_fields": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "supported_bank_account_currencies": {
                "type": "object"
            },
            "supported_payment_currencies": {
                "type": "array"
            },
            "supported_payment_methods": {
                "type": "array"
            },
            "supported_transfer_countries": {
                "type": "array"
            },
            "verification_fields": {
                "type": "object"
            },
            "country_spec_verification_field_details": {
                "type": "object",
                "properties": {
                    "additional": {
                        "description": "Additional fields which are only required for some users.",
                        "type": "array"
                    },
                    "minimum": {
                        "description": "Fields which every account must eventually provide.",
                        "type": "array"
                    }
                }
            },
            "additional": {
                "type": "array"
            },
            "minimum": {
                "type": "array"
            },
            "country_spec_verification_fields": {
                "type": "object",
                "properties": {
                    "company": {
                        "description": "",
                        "type": ""
                    },
                    "individual": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "coupon": {
                "type": "object",
                "properties": {
                    "amount_off": {
                        "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
                        "type": "integer"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "duration": {
                        "description": "One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.",
                        "type": "string"
                    },
                    "duration_in_months": {
                        "description": "If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "max_redemptions": {
                        "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.",
                        "type": "integer"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "percent_off": {
                        "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.",
                        "type": "number"
                    },
                    "redeem_by": {
                        "description": "Date after which the coupon can no longer be redeemed.",
                        "type": "integer"
                    },
                    "times_redeemed": {
                        "description": "Number of times this coupon has been applied to a customer.",
                        "type": "integer"
                    },
                    "valid": {
                        "description": "Taking account of the above properties, whether this coupon can still be applied to a customer.",
                        "type": "boolean"
                    }
                }
            },
            "credit_note": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "customer_balance_transaction": {
                        "description": "Customer balance transaction related to this credit note.",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "invoice": {
                        "description": "ID of the invoice this charge is for if one exists.",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "memo": {
                        "description": "Customer-facing text that appears on the credit note PDF.",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "number": {
                        "description": "A unique number that identifies this particular credit note and appears on the PDF of the credit note and its associated invoice.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "pdf": {
                        "description": "The link to download the PDF of the credit note.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https:\/\/stripe.com\/docs\/declines) for more details.",
                        "type": "string"
                    },
                    "refund": {
                        "description": "Refund related to this credit note.",
                        "type": ""
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "voided_at": {
                        "description": "The time that the credit note was voided.",
                        "type": "integer"
                    }
                }
            },
            "customer": {
                "type": "object",
                "properties": {
                    "account_balance": {
                        "description": "This field has been renamed to `balance` and will be removed in a future API version.",
                        "type": "integer"
                    },
                    "address": {
                        "description": "Billing address.",
                        "type": ""
                    },
                    "balance": {
                        "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
                        "type": "integer"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "default_source": {
                        "description": "ID of the default payment source for the customer.",
                        "type": ""
                    },
                    "delinquent": {
                        "description": "When the customer's latest invoice is billed by charging automatically, delinquent is true if the invoice's latest charge is failed. When the customer's latest invoice is billed by sending an invoice, delinquent is true if the invoice is not paid by its due date.",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "discount": {
                        "description": "Describes the current discount active on the customer, if there is one.",
                        "type": ""
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "invoice_prefix": {
                        "description": "The prefix for the customer used to generate unique invoice numbers.",
                        "type": "string"
                    },
                    "invoice_settings": {
                        "description": "",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Billing phone number (including extension).",
                        "type": "string"
                    },
                    "preferred_locales": {
                        "description": "The customer's preferred locales (languages), ordered by preference.",
                        "type": "array"
                    },
                    "shipping": {
                        "description": "Shipping information for the charge.",
                        "type": ""
                    },
                    "sources": {
                        "description": "The customer's payment sources, if any.",
                        "type": "object"
                    },
                    "subscriptions": {
                        "description": "The customer's current subscriptions, if any.",
                        "type": "object"
                    },
                    "tax_exempt": {
                        "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
                        "type": "string"
                    },
                    "tax_ids": {
                        "description": "The customer's tax IDs.",
                        "type": "object"
                    },
                    "tax_info": {
                        "description": "The customer's tax information. Appears on invoices emailed to this customer. This field has been deprecated and will be removed in a future API version, for further information view the [migration guide](https:\/\/stripe.com\/docs\/billing\/migration\/taxes#moving-from-taxinfo-to-customer-tax-ids).",
                        "type": ""
                    },
                    "tax_info_verification": {
                        "description": "Describes the status of looking up the tax ID provided in `tax_info`. This field has been deprecated and will be removed in a future API version, for further information view the [migration guide](https:\/\/stripe.com\/docs\/billing\/migration\/taxes#moving-from-taxinfo-to-customer-tax-ids).",
                        "type": ""
                    }
                }
            },
            "invoice_settings": {
                "type": "object"
            },
            "preferred_locales": {
                "type": "array"
            },
            "sources": {
                "type": "object"
            },
            "subscriptions": {
                "type": "object"
            },
            "tax_ids": {
                "type": "object"
            },
            "customer_balance_transaction": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "credit_note": {
                        "description": "The ID of the credit note (if any) related to the transaction.",
                        "type": ""
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "ending_balance": {
                        "description": "The customer's `balance` after the transaction was applied. A negative value decreases the amount due on the customer's next invoice. A positive value increases the amount due on the customer's next invoice.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "invoice": {
                        "description": "ID of the invoice this charge is for if one exists.",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "deleted_account": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_alipay_account": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_apple_pay_domain": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_bank_account": {
                "type": "object",
                "properties": {
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_bitcoin_receiver": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_card": {
                "type": "object",
                "properties": {
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_coupon": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_customer": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_discount": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_external_account": {
                "type": "object"
            },
            "deleted_invoice": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_invoiceitem": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_payment_source": {
                "type": "object"
            },
            "deleted_person": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_plan": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_product": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_radar.value_list": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_radar.value_list_item": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_recipient": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_sku": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_subscription_item": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_tax_id": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_terminal.location": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_terminal.reader": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "deleted_webhook_endpoint": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "description": "Always true for a deleted object",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "delivery_estimate": {
                "type": "object",
                "properties": {
                    "date": {
                        "description": "If `type` is `\"exact\"`, `date` will be the expected delivery date in the format YYYY-MM-DD.",
                        "type": "string"
                    },
                    "earliest": {
                        "description": "If `type` is `\"range\"`, `earliest` will be be the earliest delivery date in the format YYYY-MM-DD.",
                        "type": "string"
                    },
                    "latest": {
                        "description": "If `type` is `\"range\"`, `latest` will be the latest delivery date in the format YYYY-MM-DD.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "discount": {
                "type": "object",
                "properties": {
                    "coupon": {
                        "description": "",
                        "type": ""
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "end": {
                        "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
                        "type": "integer"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "start": {
                        "description": "Date that the coupon was applied.",
                        "type": "integer"
                    },
                    "subscription": {
                        "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
                        "type": "string"
                    }
                }
            },
            "dispute": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "balance_transactions": {
                        "description": "List of zero, one, or two balance transactions that show funds withdrawn and reinstated to your Stripe account as a result of this dispute.",
                        "type": "array"
                    },
                    "charge": {
                        "description": "ID of the charge that the application fee was taken from.",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "evidence": {
                        "description": "",
                        "type": ""
                    },
                    "evidence_details": {
                        "description": "",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "is_charge_refundable": {
                        "description": "If true, it is still possible to refund the disputed payment. Once the payment has been fully refunded, no further funds will be withdrawn from your Stripe account as a result of this dispute.",
                        "type": "boolean"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https:\/\/stripe.com\/docs\/declines) for more details.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    }
                }
            },
            "balance_transactions": {
                "type": "array"
            },
            "evidence": {
                "type": "object"
            },
            "evidence_details": {
                "type": "object"
            },
            "dispute_evidence": {
                "type": "object",
                "properties": {
                    "access_activity_log": {
                        "description": "Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.",
                        "type": "string"
                    },
                    "billing_address": {
                        "description": "The billing address provided by the customer.",
                        "type": "string"
                    },
                    "cancellation_policy": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Your subscription cancellation policy, as shown to the customer.",
                        "type": ""
                    },
                    "cancellation_policy_disclosure": {
                        "description": "An explanation of how and when the customer was shown your refund policy prior to purchase.",
                        "type": "string"
                    },
                    "cancellation_rebuttal": {
                        "description": "A justification for why the customer's subscription was not canceled.",
                        "type": "string"
                    },
                    "customer_communication": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Any communication with the customer that you feel is relevant to your case. Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service.",
                        "type": ""
                    },
                    "customer_email_address": {
                        "description": "The email address of the customer.",
                        "type": "string"
                    },
                    "customer_name": {
                        "description": "The name of the customer.",
                        "type": "string"
                    },
                    "customer_purchase_ip": {
                        "description": "The IP address that the customer used when making the purchase.",
                        "type": "string"
                    },
                    "customer_signature": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) A relevant document or contract showing the customer's signature.",
                        "type": ""
                    },
                    "duplicate_charge_documentation": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate.",
                        "type": ""
                    },
                    "duplicate_charge_explanation": {
                        "description": "An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.",
                        "type": "string"
                    },
                    "duplicate_charge_id": {
                        "description": "The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.",
                        "type": "string"
                    },
                    "product_description": {
                        "description": "Internal-only description of the product sold or service provided by the business. It's used by Stripe for risk and underwriting purposes.",
                        "type": "string"
                    },
                    "receipt": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Any receipt or message sent to the customer notifying them of the charge.",
                        "type": ""
                    },
                    "refund_policy": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Your refund policy, as shown to the customer.",
                        "type": ""
                    },
                    "refund_policy_disclosure": {
                        "description": "Documentation demonstrating that the customer was shown your refund policy prior to purchase.",
                        "type": "string"
                    },
                    "refund_refusal_explanation": {
                        "description": "A justification for why the customer is not entitled to a refund.",
                        "type": "string"
                    },
                    "service_date": {
                        "description": "The date on which the customer received or began receiving the purchased service, in a clear human-readable format.",
                        "type": "string"
                    },
                    "service_documentation": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement.",
                        "type": ""
                    },
                    "shipping_address": {
                        "description": "The address to which a physical product was shipped. You should try to include as complete address information as possible.",
                        "type": "string"
                    },
                    "shipping_carrier": {
                        "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas.",
                        "type": "string"
                    },
                    "shipping_date": {
                        "description": "The date on which a physical product began its route to the shipping address, in a clear human-readable format.",
                        "type": "string"
                    },
                    "shipping_documentation": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc. It should show the customer's full shipping address, if possible.",
                        "type": ""
                    },
                    "shipping_tracking_number": {
                        "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
                        "type": "string"
                    },
                    "uncategorized_file": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Any additional evidence or statements.",
                        "type": ""
                    },
                    "uncategorized_text": {
                        "description": "Any additional evidence or statements.",
                        "type": "string"
                    }
                }
            },
            "dispute_evidence_details": {
                "type": "object",
                "properties": {
                    "due_by": {
                        "description": "Date by which evidence must be submitted in order to successfully challenge dispute. Will be null if the customer's bank or credit card company doesn't allow a response for this particular dispute.",
                        "type": "integer"
                    },
                    "has_evidence": {
                        "description": "Whether evidence has been staged for this dispute.",
                        "type": "boolean"
                    },
                    "past_due": {
                        "description": "Whether the last evidence submission was submitted past the due date. Defaults to `false` if no evidence submissions have occurred. If `true`, then delivery of the latest evidence is *not* guaranteed.",
                        "type": "boolean"
                    },
                    "submission_count": {
                        "description": "The number of times evidence has been submitted. Typically, you may only submit evidence once.",
                        "type": "integer"
                    }
                }
            },
            "ephemeral_key": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "expires": {
                        "description": "Time at which the key will expire. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "secret": {
                        "description": "The key's secret. You can use this value to make authorized requests to the Stripe API.",
                        "type": "string"
                    }
                }
            },
            "error": {
                "type": "object",
                "properties": {
                    "error": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "event": {
                "type": "object",
                "properties": {
                    "api_version": {
                        "description": "The Stripe API version used to render `data`. *Note: This property is populated only for events on or after October 31, 2014*.",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "data": {
                        "description": "",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "pending_webhooks": {
                        "description": "Number of webhooks that have yet to be successfully delivered (i.e., to return a 20x response) to the URLs you've specified.",
                        "type": "integer"
                    },
                    "request": {
                        "description": "Information on the API request that instigated the event.",
                        "type": ""
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "data": {
                "type": "object"
            },
            "exchange_rate": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "rates": {
                        "description": "Hash where the keys are supported currencies and the values are the exchange rate at which the base id currency converts to the key currency.",
                        "type": "object"
                    }
                }
            },
            "rates": {
                "type": "object"
            },
            "external_account": {
                "type": "object"
            },
            "fee": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "application": {
                        "description": "",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "fee_refund": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "balance_transaction": {
                        "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "fee": {
                        "description": "ID of the application fee that was refunded.",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "file": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "filename": {
                        "description": "A filename for the file, suitable for saving to a filesystem.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "links": {
                        "description": "",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "purpose": {
                        "description": "The purpose of the file. Possible values are `business_icon`, `business_logo`, `customer_signature`, `dispute_evidence`, `finance_report_run`, `identity_document`, `pci_document`, `sigma_scheduled_query`, or `tax_document_user_upload`.",
                        "type": "string"
                    },
                    "size": {
                        "description": "The size in bytes of the file object.",
                        "type": "integer"
                    },
                    "title": {
                        "description": "A user friendly title for the document.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The business's publicly available website.",
                        "type": "string"
                    }
                }
            },
            "links": {
                "type": "object"
            },
            "file_link": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "expired": {
                        "description": "Whether this link is already expired.",
                        "type": "boolean"
                    },
                    "expires_at": {
                        "description": "The timestamp at which this account link will expire.",
                        "type": "integer"
                    },
                    "file": {
                        "description": "The file object this link points to.",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The business's publicly available website.",
                        "type": "string"
                    }
                }
            },
            "financial_reporting_finance_report_run_run_parameters": {
                "type": "object",
                "properties": {
                    "columns": {
                        "description": "The set of output columns requested for inclusion in the report run.",
                        "type": "array"
                    },
                    "connected_account": {
                        "description": "Connected account ID by which to filter the report run.",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "interval_end": {
                        "description": "Ending timestamp of data to be included in the report run (exclusive).",
                        "type": "integer"
                    },
                    "interval_start": {
                        "description": "Starting timestamp of data to be included in the report run.",
                        "type": "integer"
                    },
                    "payout": {
                        "description": "Payout ID by which to filter the report run.",
                        "type": "string"
                    },
                    "reporting_category": {
                        "description": "Category of balance transactions to be included in the report run.",
                        "type": "string"
                    }
                }
            },
            "columns": {
                "type": "array"
            },
            "inventory": {
                "type": "object",
                "properties": {
                    "quantity": {
                        "description": "Quantity of the display item being purchased.",
                        "type": "integer"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "value": {
                        "description": "An indicator of the inventory available. Possible values are `in_stock`, `limited`, and `out_of_stock`. Will be present if and only if `type` is `bucket`.",
                        "type": "string"
                    }
                }
            },
            "invoice": {
                "type": "object",
                "properties": {
                    "account_country": {
                        "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
                        "type": "string"
                    },
                    "account_name": {
                        "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
                        "type": "string"
                    },
                    "amount_due": {
                        "description": "Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
                        "type": "integer"
                    },
                    "amount_paid": {
                        "description": "The amount, in %s, that was paid.",
                        "type": "integer"
                    },
                    "amount_remaining": {
                        "description": "The amount remaining, in %s, that is due.",
                        "type": "integer"
                    },
                    "application_fee_amount": {
                        "description": "The amount of the application fee (if any) for the charge. [See the Connect documentation](https:\/\/stripe.com\/docs\/connect\/direct-charges#collecting-fees) for details.",
                        "type": "integer"
                    },
                    "attempt_count": {
                        "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
                        "type": "integer"
                    },
                    "attempted": {
                        "description": "Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
                        "type": "boolean"
                    },
                    "auto_advance": {
                        "description": "Controls whether Stripe will perform [automatic collection](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow\/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action.",
                        "type": "boolean"
                    },
                    "billing": {
                        "description": "This field has been renamed to `collection_method` and will be removed in a future API version.",
                        "type": "string"
                    },
                    "billing_reason": {
                        "description": "Indicates the reason why the invoice was created. `subscription_cycle` indicates an invoice created by a subscription advancing into a new period. `subscription_create` indicates an invoice created due to creating a subscription. `subscription_update` indicates an invoice created due to updating a subscription. `subscription` is set for all old invoices to indicate either a change to a subscription or a period advancement. `manual` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The `upcoming` value is reserved for simulated invoices per the upcoming invoice endpoint. `subscription_threshold` indicates an invoice created due to a billing threshold being reached.",
                        "type": "string"
                    },
                    "charge": {
                        "description": "ID of the charge that the application fee was taken from.",
                        "type": ""
                    },
                    "collection_method": {
                        "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "custom_fields": {
                        "description": "Custom fields displayed on the invoice.",
                        "type": "array"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "customer_address": {
                        "description": "The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.",
                        "type": ""
                    },
                    "customer_email": {
                        "description": "If provided, this value will be used when the Customer object is created.\nIf not provided, customers will be asked to enter their email address.\nUse this parameter to prefill customer data if you already have an email\non file. To access information about the customer once a session is\ncomplete, use the `customer` field.",
                        "type": "string"
                    },
                    "customer_name": {
                        "description": "The name of the customer.",
                        "type": "string"
                    },
                    "customer_phone": {
                        "description": "The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.",
                        "type": "string"
                    },
                    "customer_shipping": {
                        "description": "The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.",
                        "type": ""
                    },
                    "customer_tax_exempt": {
                        "description": "The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.",
                        "type": "string"
                    },
                    "customer_tax_ids": {
                        "description": "The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.",
                        "type": "array"
                    },
                    "default_payment_method": {
                        "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
                        "type": ""
                    },
                    "default_source": {
                        "description": "ID of the default payment source for the customer.",
                        "type": ""
                    },
                    "default_tax_rates": {
                        "description": "The tax rates applied to this invoice, if any.",
                        "type": "array"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "discount": {
                        "description": "Describes the current discount active on the customer, if there is one.",
                        "type": ""
                    },
                    "due_date": {
                        "description": "The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.",
                        "type": "integer"
                    },
                    "ending_balance": {
                        "description": "The customer's `balance` after the transaction was applied. A negative value decreases the amount due on the customer's next invoice. A positive value increases the amount due on the customer's next invoice.",
                        "type": "integer"
                    },
                    "footer": {
                        "description": "Footer displayed on the invoice.",
                        "type": "string"
                    },
                    "hosted_invoice_url": {
                        "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "invoice_pdf": {
                        "description": "The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.",
                        "type": "string"
                    },
                    "lines": {
                        "description": "The individual line items that make up the invoice. `lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
                        "type": "object"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "next_payment_attempt": {
                        "description": "The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.",
                        "type": "integer"
                    },
                    "number": {
                        "description": "A unique number that identifies this particular credit note and appears on the PDF of the credit note and its associated invoice.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "paid": {
                        "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
                        "type": "boolean"
                    },
                    "payment_intent": {
                        "description": "",
                        "type": ""
                    },
                    "period_end": {
                        "description": "End of the usage period during which invoice items were added to this invoice.",
                        "type": "integer"
                    },
                    "period_start": {
                        "description": "Start of the usage period during which invoice items were added to this invoice.",
                        "type": "integer"
                    },
                    "post_payment_credit_notes_amount": {
                        "description": "Total amount of all post-payment credit notes issued for this invoice.",
                        "type": "integer"
                    },
                    "pre_payment_credit_notes_amount": {
                        "description": "Total amount of all pre-payment credit notes issued for this invoice.",
                        "type": "integer"
                    },
                    "receipt_number": {
                        "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
                        "type": "string"
                    },
                    "starting_balance": {
                        "description": "Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance.",
                        "type": "integer"
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "status_transitions": {
                        "description": "",
                        "type": ""
                    },
                    "subscription": {
                        "description": "The ID of the subscription created if one or more plans were provided.",
                        "type": ""
                    },
                    "subscription_proration_date": {
                        "description": "Only set for upcoming invoices that preview prorations. The time used to calculate prorations.",
                        "type": "integer"
                    },
                    "subtotal": {
                        "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any discount or tax is applied.",
                        "type": "integer"
                    },
                    "tax": {
                        "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
                        "type": "integer"
                    },
                    "tax_percent": {
                        "description": "This percentage of the subtotal has been added to the total amount of the invoice, including invoice line items and discounts. This field is inherited from the subscription's `tax_percent` field, but can be changed before the invoice is paid. This field defaults to null.",
                        "type": "number"
                    },
                    "threshold_reason": {
                        "description": "",
                        "type": ""
                    },
                    "total": {
                        "description": "Total after discounts and taxes.",
                        "type": "integer"
                    },
                    "total_tax_amounts": {
                        "description": "The aggregate amounts calculated per tax rate for all line items.",
                        "type": "array"
                    },
                    "webhooks_delivered_at": {
                        "description": "The time at which webhooks for this invoice were successfully delivered (if the invoice had no webhooks to deliver, this will match `created`). Invoice payment is delayed until webhooks are delivered, or until all webhook delivery attempts have been exhausted.",
                        "type": "integer"
                    }
                }
            },
            "custom_fields": {
                "type": "array"
            },
            "customer_tax_ids": {
                "type": "array"
            },
            "default_tax_rates": {
                "type": "array"
            },
            "lines": {
                "type": "object"
            },
            "status_transitions": {
                "type": "object",
                "properties": {
                    "canceled": {
                        "description": "",
                        "type": "integer"
                    },
                    "fulfiled": {
                        "description": "",
                        "type": "integer"
                    },
                    "paid": {
                        "description": "",
                        "type": "integer"
                    },
                    "returned": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "threshold_reason": {
                "type": "object"
            },
            "total_tax_amounts": {
                "type": "array"
            },
            "invoice_item_threshold_reason": {
                "type": "object",
                "properties": {
                    "line_item_ids": {
                        "description": "The IDs of the line items that triggered the threshold invoice.",
                        "type": "array"
                    },
                    "usage_gte": {
                        "description": "The quantity threshold boundary that applied to the given line item.",
                        "type": "integer"
                    }
                }
            },
            "line_item_ids": {
                "type": "array"
            },
            "invoice_line_item_period": {
                "type": "object",
                "properties": {
                    "end": {
                        "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
                        "type": "integer"
                    },
                    "start": {
                        "description": "Date that the coupon was applied.",
                        "type": "integer"
                    }
                }
            },
            "invoice_setting_custom_field": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "value": {
                        "description": "An indicator of the inventory available. Possible values are `in_stock`, `limited`, and `out_of_stock`. Will be present if and only if `type` is `bucket`.",
                        "type": "string"
                    }
                }
            },
            "invoice_setting_customer_setting": {
                "type": "object",
                "properties": {
                    "custom_fields": {
                        "description": "Custom fields displayed on the invoice.",
                        "type": "array"
                    },
                    "default_payment_method": {
                        "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
                        "type": ""
                    },
                    "footer": {
                        "description": "Footer displayed on the invoice.",
                        "type": "string"
                    }
                }
            },
            "invoice_setting_subscription_schedule_setting": {
                "type": "object",
                "properties": {
                    "days_until_due": {
                        "description": "Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.",
                        "type": "integer"
                    }
                }
            },
            "invoice_tax_amount": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "inclusive": {
                        "description": "Whether this tax amount is inclusive or exclusive.",
                        "type": "boolean"
                    },
                    "tax_rate": {
                        "description": "The tax rate that was applied to get this tax amount.",
                        "type": ""
                    }
                }
            },
            "invoice_threshold_reason": {
                "type": "object",
                "properties": {
                    "amount_gte": {
                        "description": "The total invoice amount threshold boundary if it triggered the threshold invoice.",
                        "type": "integer"
                    },
                    "item_reasons": {
                        "description": "Indicates which line items triggered a threshold invoice.",
                        "type": "array"
                    }
                }
            },
            "item_reasons": {
                "type": "array"
            },
            "invoiceitem": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "date": {
                        "description": "The Unix timestamp marking when the Stripe Services Agreement was accepted by the account representative",
                        "type": "integer"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "discountable": {
                        "description": "If true, discounts will apply to this invoice item. Always false for prorations.",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "invoice": {
                        "description": "ID of the invoice this charge is for if one exists.",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "period": {
                        "description": "",
                        "type": ""
                    },
                    "plan": {
                        "description": "",
                        "type": ""
                    },
                    "proration": {
                        "description": "Whether the invoice item was created automatically as a proration adjustment when the customer switched plans.",
                        "type": "boolean"
                    },
                    "quantity": {
                        "description": "Quantity of the display item being purchased.",
                        "type": "integer"
                    },
                    "subscription": {
                        "description": "The ID of the subscription created if one or more plans were provided.",
                        "type": ""
                    },
                    "subscription_item": {
                        "description": "The subscription item that this invoice item has been created for, if any.",
                        "type": "string"
                    },
                    "tax_rates": {
                        "description": "The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.",
                        "type": "array"
                    },
                    "unified_proration": {
                        "description": "For prorations this indicates whether Stripe automatically grouped multiple related debit and credit line items into a single combined line item.",
                        "type": "boolean"
                    },
                    "unit_amount": {
                        "description": "Unit Amount (in the `currency` specified) of the invoice item.",
                        "type": "integer"
                    },
                    "unit_amount_decimal": {
                        "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
                        "type": "string"
                    }
                }
            },
            "period": {
                "type": "object",
                "properties": {
                    "end": {
                        "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
                        "type": "integer"
                    },
                    "start": {
                        "description": "Date that the coupon was applied.",
                        "type": "integer"
                    }
                }
            },
            "tax_rates": {
                "type": "array"
            },
            "invoices_resource_invoice_tax_id": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "value": {
                        "description": "An indicator of the inventory available. Possible values are `in_stock`, `limited`, and `out_of_stock`. Will be present if and only if `type` is `bucket`.",
                        "type": "string"
                    }
                }
            },
            "invoices_status_transitions": {
                "type": "object",
                "properties": {
                    "finalized_at": {
                        "description": "The time that the invoice draft was finalized.",
                        "type": "integer"
                    },
                    "marked_uncollectible_at": {
                        "description": "The time that the invoice was marked uncollectible.",
                        "type": "integer"
                    },
                    "paid_at": {
                        "description": "The time that the invoice was paid.",
                        "type": "integer"
                    },
                    "voided_at": {
                        "description": "The time that the credit note was voided.",
                        "type": "integer"
                    }
                }
            },
            "issuer_fraud_record": {
                "type": "object",
                "properties": {
                    "actionable": {
                        "description": "An IFR is actionable if it has not received a dispute and has not been fully refunded. You may wish to proactively refund a charge that receives an IFR, in order to avoid receiving a dispute later.",
                        "type": "boolean"
                    },
                    "charge": {
                        "description": "ID of the charge that the application fee was taken from.",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "fraud_type": {
                        "description": "The type of fraud labelled by the issuer. One of `card_never_received`, `fraudulent_card_application`, `made_with_counterfeit_card`, `made_with_lost_card`, `made_with_stolen_card`, `misc`, `unauthorized_use_of_card`.",
                        "type": "string"
                    },
                    "has_liability_shift": {
                        "description": "If true, the associated charge is subject to [liability shift](https:\/\/stripe.com\/docs\/sources\/three-d-secure#disputed-payments).",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "post_date": {
                        "description": "The timestamp at which the card issuer posted the issuer fraud record.",
                        "type": "integer"
                    }
                }
            },
            "issuing.authorization": {
                "type": "object",
                "properties": {
                    "approved": {
                        "description": "Whether the authorization has been approved.",
                        "type": "boolean"
                    },
                    "authorization_method": {
                        "description": "How the card details were provided. One of `chip`, `contactless`, `keyed_in`, `online`, or `swipe`.",
                        "type": "string"
                    },
                    "authorized_amount": {
                        "description": "The amount that has been authorized. This will be `0` when the object is created, and increase after it has been approved.",
                        "type": "integer"
                    },
                    "authorized_currency": {
                        "description": "The currency that was presented to the cardholder for the authorization. Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "balance_transactions": {
                        "description": "List of zero, one, or two balance transactions that show funds withdrawn and reinstated to your Stripe account as a result of this dispute.",
                        "type": "array"
                    },
                    "card": {
                        "description": "",
                        "type": ""
                    },
                    "cardholder": {
                        "description": "The cardholder to whom this authorization belongs.",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "held_amount": {
                        "description": "The amount the authorization is expected to be in `held_currency`. When Stripe holds funds from you, this is the amount reserved for the authorization. This will be `0` when the object is created, and increase after it has been approved. For multi-currency transactions, `held_amount` can be used to determine the expected exchange rate.",
                        "type": "integer"
                    },
                    "held_currency": {
                        "description": "The currency of the [held amount](https:\/\/stripe.com\/docs\/api#issuing_authorization_object-held_amount). This will always be the card currency.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "is_held_amount_controllable": {
                        "description": "",
                        "type": "boolean"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "merchant_data": {
                        "description": "",
                        "type": ""
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "pending_authorized_amount": {
                        "description": "The amount the user is requesting to be authorized. This field will only be non-zero during an `issuing.authorization.request` webhook.",
                        "type": "integer"
                    },
                    "pending_held_amount": {
                        "description": "The additional amount Stripe will hold if the authorization is approved. This field will only be non-zero during an `issuing.authorization.request` webhook.",
                        "type": "integer"
                    },
                    "request_history": {
                        "description": "",
                        "type": "array"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "transactions": {
                        "description": "",
                        "type": "array"
                    },
                    "verification_data": {
                        "description": "",
                        "type": ""
                    },
                    "wallet_provider": {
                        "description": "What, if any, digital wallet was used for this authorization. One of `apple_pay`, `google_pay`, or `samsung_pay`.",
                        "type": "string"
                    }
                }
            },
            "merchant_data": {
                "type": "object"
            },
            "request_history": {
                "type": "array"
            },
            "verification_data": {
                "type": "object"
            },
            "issuing.card": {
                "type": "object",
                "properties": {
                    "authorization_controls": {
                        "description": "",
                        "type": ""
                    },
                    "brand": {
                        "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
                        "type": "string"
                    },
                    "cardholder": {
                        "description": "The cardholder to whom this authorization belongs.",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "exp_month": {
                        "description": "Two-digit number representing the card's expiration month.",
                        "type": "integer"
                    },
                    "exp_year": {
                        "description": "Four-digit number representing the card's expiration year.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "pin": {
                        "description": "Metadata about the PIN on the card.",
                        "type": ""
                    },
                    "replacement_for": {
                        "description": "The card this card replaces, if any.",
                        "type": ""
                    },
                    "replacement_reason": {
                        "description": "Why the card that this card replaces (if any) needed to be replaced. One of `damage`, `expiration`, `loss`, or `theft`.",
                        "type": "string"
                    },
                    "shipping": {
                        "description": "Shipping information for the charge.",
                        "type": ""
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "authorization_controls": {
                "type": "object"
            },
            "issuing.card_details": {
                "type": "object",
                "properties": {
                    "card": {
                        "description": "",
                        "type": ""
                    },
                    "cvc": {
                        "description": "The CVC number for the card.",
                        "type": "string"
                    },
                    "exp_month": {
                        "description": "Two-digit number representing the card's expiration month.",
                        "type": "integer"
                    },
                    "exp_year": {
                        "description": "Four-digit number representing the card's expiration year.",
                        "type": "integer"
                    },
                    "number": {
                        "description": "A unique number that identifies this particular credit note and appears on the PDF of the credit note and its associated invoice.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "issuing.card_pin": {
                "type": "object",
                "properties": {
                    "card": {
                        "description": "",
                        "type": ""
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "pin": {
                        "description": "The PIN (4 digits number)",
                        "type": "string"
                    }
                }
            },
            "issuing.cardholder": {
                "type": "object",
                "properties": {
                    "authorization_controls": {
                        "description": "",
                        "type": ""
                    },
                    "billing": {
                        "description": "",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "is_default": {
                        "description": "Whether or not this cardholder is the default cardholder.",
                        "type": "boolean"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "The cardholder's phone number.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "billing": {
                "type": "object"
            },
            "issuing.dispute": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "disputed_transaction": {
                        "description": "The transaction being disputed.",
                        "type": ""
                    },
                    "evidence": {
                        "description": "",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https:\/\/stripe.com\/docs\/declines) for more details.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    }
                }
            },
            "issuing.settlement": {
                "type": "object",
                "properties": {
                    "bin": {
                        "description": "The Bank Identification Number reflecting this settlement record.",
                        "type": "string"
                    },
                    "clearing_date": {
                        "description": "The date that the transactions are cleared and posted to user's accounts.",
                        "type": "integer"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "interchange_fees": {
                        "description": "The total interchange received as reimbursement for the transactions.",
                        "type": "integer"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "net_total": {
                        "description": "The total net amount required to settle with the network.",
                        "type": "integer"
                    },
                    "network_fees": {
                        "description": "The total amount of fees owed to the network.",
                        "type": "integer"
                    },
                    "network_settlement_identifier": {
                        "description": "The Settlement Identification Number assigned by the network.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "settlement_service": {
                        "description": "One of `international` or `uk_national_net`.",
                        "type": "string"
                    },
                    "transaction_count": {
                        "description": "The total number of transactions reflected in this settlement.",
                        "type": "integer"
                    },
                    "transaction_volume": {
                        "description": "The total transaction amount reflected in this settlement.",
                        "type": "integer"
                    }
                }
            },
            "issuing.transaction": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "authorization": {
                        "description": "The `Authorization` object that led to this transaction.",
                        "type": ""
                    },
                    "balance_transaction": {
                        "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
                        "type": ""
                    },
                    "card": {
                        "description": "",
                        "type": ""
                    },
                    "cardholder": {
                        "description": "The cardholder to whom this authorization belongs.",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "dispute": {
                        "description": "Details about the dispute if the charge has been disputed.",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "merchant_amount": {
                        "description": "",
                        "type": "integer"
                    },
                    "merchant_currency": {
                        "description": "",
                        "type": "string"
                    },
                    "merchant_data": {
                        "description": "",
                        "type": ""
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "issuing.verification": {
                "type": "object",
                "properties": {
                    "card": {
                        "description": "The id of the `Card` on which the verification was requested",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "expires_at": {
                        "description": "The timestamp at which this account link will expire.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "scope": {
                        "description": "The scope of the verification (one of `card_pin_retrieve` or `card_pin_update`)",
                        "type": "string"
                    },
                    "verification_method": {
                        "description": "The method by which the cardholder will be sent a one-time code (one of `email` or `sms`)",
                        "type": "string"
                    }
                }
            },
            "issuing_authorization_merchant_data": {
                "type": "object",
                "properties": {
                    "category": {
                        "description": "A categorization of the seller's type of business. See our [merchant categories guide](https:\/\/stripe.com\/docs\/issuing\/merchant-categories) for a list of possible values.",
                        "type": "string"
                    },
                    "city": {
                        "description": "City\/District\/Suburb\/Town\/Village.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "network_id": {
                        "description": "Identifier assigned to the seller by the card brand",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "ZIP or postal code.",
                        "type": "string"
                    },
                    "state": {
                        "description": "State\/County\/Province\/Region.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The business's publicly available website.",
                        "type": "string"
                    }
                }
            },
            "issuing_authorization_request": {
                "type": "object",
                "properties": {
                    "approved": {
                        "description": "Whether the authorization has been approved.",
                        "type": "boolean"
                    },
                    "authorized_amount": {
                        "description": "The amount that has been authorized. This will be `0` when the object is created, and increase after it has been approved.",
                        "type": "integer"
                    },
                    "authorized_currency": {
                        "description": "The currency that was presented to the cardholder for the authorization. Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "held_amount": {
                        "description": "The amount the authorization is expected to be in `held_currency`. When Stripe holds funds from you, this is the amount reserved for the authorization. This will be `0` when the object is created, and increase after it has been approved. For multi-currency transactions, `held_amount` can be used to determine the expected exchange rate.",
                        "type": "integer"
                    },
                    "held_currency": {
                        "description": "The currency of the [held amount](https:\/\/stripe.com\/docs\/api#issuing_authorization_object-held_amount). This will always be the card currency.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https:\/\/stripe.com\/docs\/declines) for more details.",
                        "type": "string"
                    }
                }
            },
            "issuing_authorization_verification_data": {
                "type": "object",
                "properties": {
                    "address_line1_check": {
                        "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "address_zip_check": {
                        "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "authentication": {
                        "description": "One of `success`, `failure`, `exempt`, or `none`.",
                        "type": "string"
                    },
                    "cvc_check": {
                        "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    }
                }
            },
            "issuing_card_authorization_controls": {
                "type": "object",
                "properties": {
                    "allowed_categories": {
                        "description": "Array of strings containing [categories](https:\/\/stripe.com\/docs\/api#issuing_authorization_object-merchant_data-category) of authorizations permitted on this card.",
                        "type": "array"
                    },
                    "blocked_categories": {
                        "description": "Array of strings containing [categories](https:\/\/stripe.com\/docs\/api#issuing_authorization_object-merchant_data-category) of authorizations to always decline on this card.",
                        "type": "array"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "max_amount": {
                        "description": "Maximum amount allowed per authorization on this card, in the currency of the card. Authorization amounts in a different currency will be converted to the card's currency when evaluating this control.",
                        "type": "integer"
                    },
                    "max_approvals": {
                        "description": "Maximum count of approved authorizations on this card. Counts all authorizations retroactively.",
                        "type": "integer"
                    },
                    "spending_limits": {
                        "description": "Limit the spending with rules based on time intervals and categories.",
                        "type": "array"
                    },
                    "spending_limits_currency": {
                        "description": "Currency for the amounts within spending_limits. Locked to the currency of the card.",
                        "type": "string"
                    }
                }
            },
            "allowed_categories": {
                "type": "array"
            },
            "blocked_categories": {
                "type": "array"
            },
            "spending_limits": {
                "type": "array"
            },
            "issuing_card_pin": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    }
                }
            },
            "issuing_card_shipping": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "Billing address.",
                        "type": ""
                    },
                    "carrier": {
                        "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.",
                        "type": "string"
                    },
                    "eta": {
                        "description": "A unix timestamp representing a best estimate of when the card will be delivered.",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "tracking_number": {
                        "description": "A tracking number for a card shipment.",
                        "type": "string"
                    },
                    "tracking_url": {
                        "description": "A link to the shipping carrier's site where you can view detailed information about a card shipment.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "issuing_card_spending_limit": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "categories": {
                        "description": "Array of strings containing [categories](https:\/\/stripe.com\/docs\/api#issuing_authorization_object-merchant_data-category) on which to apply the spending limit. Leave this blank to limit all charges.",
                        "type": "array"
                    },
                    "interval": {
                        "description": "The time interval with which to apply this spending limit towards. Allowed values are `per_authorization`, `daily`, `weekly`, `monthly`, `yearly`, or `all_time`.",
                        "type": "string"
                    }
                }
            },
            "categories": {
                "type": "array"
            },
            "issuing_cardholder_address": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "Billing address.",
                        "type": ""
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    }
                }
            },
            "issuing_cardholder_authorization_controls": {
                "type": "object",
                "properties": {
                    "allowed_categories": {
                        "description": "Array of strings containing [categories](https:\/\/stripe.com\/docs\/api#issuing_authorization_object-merchant_data-category) of authorizations permitted on this card.",
                        "type": "array"
                    },
                    "blocked_categories": {
                        "description": "Array of strings containing [categories](https:\/\/stripe.com\/docs\/api#issuing_authorization_object-merchant_data-category) of authorizations to always decline on this card.",
                        "type": "array"
                    },
                    "spending_limits": {
                        "description": "Limit the spending with rules based on time intervals and categories.",
                        "type": "array"
                    },
                    "spending_limits_currency": {
                        "description": "Currency for the amounts within spending_limits. Locked to the currency of the card.",
                        "type": "string"
                    }
                }
            },
            "issuing_cardholder_spending_limit": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "categories": {
                        "description": "Array of strings containing [categories](https:\/\/stripe.com\/docs\/api#issuing_authorization_object-merchant_data-category) on which to apply the spending limit. Leave this blank to limit all charges.",
                        "type": "array"
                    },
                    "interval": {
                        "description": "The time interval with which to apply this spending limit towards. Allowed values are `per_authorization`, `daily`, `weekly`, `monthly`, `yearly`, or `all_time`.",
                        "type": "string"
                    }
                }
            },
            "issuing_dispute_evidence": {
                "type": "object",
                "properties": {
                    "fraudulent": {
                        "description": "Evidence to support a fraudulent dispute. This will only be present if your dispute's `reason` is `fraudulent`.",
                        "type": ""
                    },
                    "other": {
                        "description": "Evidence to support an uncategorized dispute. This will only be present if your dispute's `reason` is `other`.",
                        "type": ""
                    }
                }
            },
            "issuing_dispute_fraudulent_evidence": {
                "type": "object",
                "properties": {
                    "dispute_explanation": {
                        "description": "Brief freeform text explaining why you are disputing this transaction.",
                        "type": "string"
                    },
                    "uncategorized_file": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Any additional evidence or statements.",
                        "type": ""
                    }
                }
            },
            "issuing_dispute_other_evidence": {
                "type": "object",
                "properties": {
                    "dispute_explanation": {
                        "description": "Brief freeform text explaining why you are disputing this transaction.",
                        "type": "string"
                    },
                    "uncategorized_file": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Any additional evidence or statements.",
                        "type": ""
                    }
                }
            },
            "legal_entity_company": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "Billing address.",
                        "type": ""
                    },
                    "address_kana": {
                        "description": "The Kana variation of the company's primary address (Japan only).",
                        "type": ""
                    },
                    "address_kanji": {
                        "description": "The Kanji variation of the company's primary address (Japan only).",
                        "type": ""
                    },
                    "directors_provided": {
                        "description": "Whether the company's directors have been provided. This Boolean will be `true` if you've manually indicated that all directors are provided via [the `directors_provided` parameter](https:\/\/stripe.com\/docs\/api\/accounts\/update#update_account-company-directors_provided).",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "name_kana": {
                        "description": "The Kana variation of the company's legal name (Japan only).",
                        "type": "string"
                    },
                    "name_kanji": {
                        "description": "The Kanji variation of the company's legal name (Japan only).",
                        "type": "string"
                    },
                    "owners_provided": {
                        "description": "Whether the company's owners have been provided. This Boolean will be `true` if you've manually indicated that all owners are provided via [the `owners_provided` parameter](https:\/\/stripe.com\/docs\/api\/accounts\/update#update_account-company-owners_provided), or if Stripe determined that all owners were provided. Stripe determines ownership requirements using both the number of owners provided and their total percent ownership (calculated by adding the `percent_ownership` of each owner together).",
                        "type": "boolean"
                    },
                    "phone": {
                        "description": "Billing phone number (including extension).",
                        "type": "string"
                    },
                    "tax_id_provided": {
                        "description": "Whether the company's business ID number was provided.",
                        "type": "boolean"
                    },
                    "tax_id_registrar": {
                        "description": "The jurisdiction in which the `tax_id` is registered (Germany-based companies only).",
                        "type": "string"
                    },
                    "vat_id_provided": {
                        "description": "Whether the company's business VAT number was provided.",
                        "type": "boolean"
                    },
                    "verification": {
                        "description": "Information on the verification state of the company.",
                        "type": ""
                    }
                }
            },
            "legal_entity_company_verification": {
                "type": "object",
                "properties": {
                    "document": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "document": {
                "type": "object"
            },
            "legal_entity_company_verification_document": {
                "type": "object",
                "properties": {
                    "back": {
                        "description": "The back of a document returned by a [file upload](#create_file) with a `purpose` value of `additional_verification`.",
                        "type": ""
                    },
                    "details": {
                        "description": "A user-displayable string describing the verification state of this document.",
                        "type": "string"
                    },
                    "details_code": {
                        "description": "One of `document_corrupt`, `document_failed_copy`, `document_not_readable`, `document_not_uploaded`, `document_failed_other`, `document_fraudulent`, `document_invalid`, `document_manipulated`, `document_too_large`, or `document_failed_test_mode`. A machine-readable code specifying the verification state for this document.",
                        "type": "string"
                    },
                    "front": {
                        "description": "The front of a document returned by a [file upload](#create_file) with a `purpose` value of `additional_verification`.",
                        "type": ""
                    }
                }
            },
            "legal_entity_dob": {
                "type": "object",
                "properties": {
                    "day": {
                        "description": "The day of birth, between 1 and 31.",
                        "type": "integer"
                    },
                    "month": {
                        "description": "The month of birth, between 1 and 12.",
                        "type": "integer"
                    },
                    "year": {
                        "description": "The four-digit year of birth.",
                        "type": "integer"
                    }
                }
            },
            "legal_entity_japan_address": {
                "type": "object",
                "properties": {
                    "city": {
                        "description": "City\/District\/Suburb\/Town\/Village.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "line1": {
                        "description": "Address line 1 (Street address\/PO Box\/Company name).",
                        "type": "string"
                    },
                    "line2": {
                        "description": "Address line 2 (Apartment\/Suite\/Unit\/Building).",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "ZIP or postal code.",
                        "type": "string"
                    },
                    "state": {
                        "description": "State\/County\/Province\/Region.",
                        "type": "string"
                    },
                    "town": {
                        "description": "Town\/cho-me.",
                        "type": "string"
                    }
                }
            },
            "legal_entity_person_verification": {
                "type": "object",
                "properties": {
                    "additional_document": {
                        "description": "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company.",
                        "type": ""
                    },
                    "details": {
                        "description": "A user-displayable string describing the verification state of this document.",
                        "type": "string"
                    },
                    "details_code": {
                        "description": "One of `document_corrupt`, `document_failed_copy`, `document_not_readable`, `document_not_uploaded`, `document_failed_other`, `document_fraudulent`, `document_invalid`, `document_manipulated`, `document_too_large`, or `document_failed_test_mode`. A machine-readable code specifying the verification state for this document.",
                        "type": "string"
                    },
                    "document": {
                        "description": "",
                        "type": ""
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    }
                }
            },
            "legal_entity_person_verification_document": {
                "type": "object",
                "properties": {
                    "back": {
                        "description": "The back of a document returned by a [file upload](#create_file) with a `purpose` value of `additional_verification`.",
                        "type": ""
                    },
                    "details": {
                        "description": "A user-displayable string describing the verification state of this document.",
                        "type": "string"
                    },
                    "details_code": {
                        "description": "One of `document_corrupt`, `document_failed_copy`, `document_not_readable`, `document_not_uploaded`, `document_failed_other`, `document_fraudulent`, `document_invalid`, `document_manipulated`, `document_too_large`, or `document_failed_test_mode`. A machine-readable code specifying the verification state for this document.",
                        "type": "string"
                    },
                    "front": {
                        "description": "The front of a document returned by a [file upload](#create_file) with a `purpose` value of `additional_verification`.",
                        "type": ""
                    }
                }
            },
            "light_account_logout": {
                "type": "object"
            },
            "line_item": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "discountable": {
                        "description": "If true, discounts will apply to this invoice item. Always false for prorations.",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "invoice_item": {
                        "description": "",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "period": {
                        "description": "",
                        "type": ""
                    },
                    "plan": {
                        "description": "",
                        "type": ""
                    },
                    "proration": {
                        "description": "Whether the invoice item was created automatically as a proration adjustment when the customer switched plans.",
                        "type": "boolean"
                    },
                    "quantity": {
                        "description": "Quantity of the display item being purchased.",
                        "type": "integer"
                    },
                    "subscription": {
                        "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
                        "type": "string"
                    },
                    "subscription_item": {
                        "description": "The subscription item that this invoice item has been created for, if any.",
                        "type": "string"
                    },
                    "tax_amounts": {
                        "description": "The amount of tax calculated per tax rate for this line item",
                        "type": "array"
                    },
                    "tax_rates": {
                        "description": "The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.",
                        "type": "array"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "unified_proration": {
                        "description": "For prorations this indicates whether Stripe automatically grouped multiple related debit and credit line items into a single combined line item.",
                        "type": "boolean"
                    }
                }
            },
            "tax_amounts": {
                "type": "array"
            },
            "login_link": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The business's publicly available website.",
                        "type": "string"
                    }
                }
            },
            "notification_event_data": {
                "type": "object",
                "properties": {
                    "object": {
                        "description": "Object containing the API resource relevant to the event. For example, an `invoice.created` event will have a full [invoice object](#invoice_object) as the value of the object key.",
                        "type": "object"
                    },
                    "previous_attributes": {
                        "description": "Object containing the names of the attributes that have changed, and their previous values (sent along only with *.updated events).",
                        "type": "object"
                    }
                }
            },
            "object": {
                "type": "object"
            },
            "previous_attributes": {
                "type": "object"
            },
            "notification_event_request": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "idempotency_key": {
                        "description": "The idempotency key transmitted during the request, if any. *Note: This property is populated only for events on or after May 23, 2017*.",
                        "type": "string"
                    }
                }
            },
            "order": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "amount_returned": {
                        "description": "",
                        "type": "integer"
                    },
                    "application": {
                        "description": "",
                        "type": "string"
                    },
                    "application_fee": {
                        "description": "",
                        "type": "integer"
                    },
                    "charge": {
                        "description": "ID of the charge that the application fee was taken from.",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "external_coupon_code": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "items": {
                        "description": "List of items constituting the order. An order can have up to 25 items.",
                        "type": "array"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "returns": {
                        "description": "",
                        "type": "object"
                    },
                    "selected_shipping_method": {
                        "description": "The shipping method that is currently selected for this order, if any. If present, it is equal to one of the `id`s of shipping methods in the `shipping_methods` array. At order creation time, if there are multiple shipping methods, Stripe will automatically selected the first method.",
                        "type": "string"
                    },
                    "shipping": {
                        "description": "Shipping information for the charge.",
                        "type": ""
                    },
                    "shipping_methods": {
                        "description": "A list of supported shipping methods for this order. The desired shipping method can be specified either by updating the order, or when paying it.",
                        "type": "array"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "status_transitions": {
                        "description": "",
                        "type": ""
                    },
                    "updated": {
                        "description": "",
                        "type": "integer"
                    },
                    "upstream_id": {
                        "description": "The user's order ID if it is different from the Stripe order ID.",
                        "type": "string"
                    }
                }
            },
            "items": {
                "type": "object"
            },
            "returns": {
                "type": "object"
            },
            "shipping_methods": {
                "type": "array"
            },
            "order_item": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "parent": {
                        "description": "The ID of the associated object for this line item. Expandable if not null (e.g., expandable to a SKU).",
                        "type": ""
                    },
                    "quantity": {
                        "description": "Quantity of the display item being purchased.",
                        "type": "integer"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "order_return": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "items": {
                        "description": "List of items constituting the order. An order can have up to 25 items.",
                        "type": "array"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "order": {
                        "description": "ID of the order this charge is for if one exists.",
                        "type": ""
                    },
                    "refund": {
                        "description": "Refund related to this credit note.",
                        "type": ""
                    }
                }
            },
            "package_dimensions": {
                "type": "object",
                "properties": {
                    "height": {
                        "description": "Height, in inches.",
                        "type": "number"
                    },
                    "length": {
                        "description": "Length, in inches.",
                        "type": "number"
                    },
                    "weight": {
                        "description": "Weight, in ounces.",
                        "type": "number"
                    },
                    "width": {
                        "description": "Width, in inches.",
                        "type": "number"
                    }
                }
            },
            "charges": {
                "type": "object"
            },
            "payment_intent_next_action": {
                "type": "object",
                "properties": {
                    "redirect_to_url": {
                        "description": "",
                        "type": ""
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "use_stripe_sdk": {
                        "description": "When confirming a PaymentIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.",
                        "type": "object"
                    }
                }
            },
            "redirect_to_url": {
                "type": "object"
            },
            "use_stripe_sdk": {
                "type": "object"
            },
            "payment_intent_next_action_redirect_to_url": {
                "type": "object",
                "properties": {
                    "return_url": {
                        "description": "If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The business's publicly available website.",
                        "type": "string"
                    }
                }
            },
            "payment_intent_payment_method_options": {
                "type": "object",
                "properties": {
                    "card": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "payment_intent_payment_method_options_card": {
                "type": "object",
                "properties": {
                    "request_three_d_secure": {
                        "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https:\/\/stripe.com\/docs\/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Permitted values include: `automatic` or `any`. If not provided, defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https:\/\/stripe.com\/docs\/payments\/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
                        "type": "string"
                    }
                }
            },
            "card_present": {
                "type": "object"
            },
            "payment_method_card": {
                "type": "object",
                "properties": {
                    "brand": {
                        "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
                        "type": "string"
                    },
                    "checks": {
                        "description": "Checks on Card address and CVC if provided.",
                        "type": ""
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "exp_month": {
                        "description": "Two-digit number representing the card's expiration month.",
                        "type": "integer"
                    },
                    "exp_year": {
                        "description": "Four-digit number representing the card's expiration year.",
                        "type": "integer"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "funding": {
                        "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
                        "type": "string"
                    },
                    "generated_from": {
                        "description": "Details of the original PaymentMethod that created this object.",
                        "type": ""
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "three_d_secure_usage": {
                        "description": "Contains details on how this Card maybe be used for 3D Secure authentication.",
                        "type": ""
                    },
                    "wallet": {
                        "description": "If this Card is part of a card wallet, this contains the details of the card wallet.",
                        "type": ""
                    }
                }
            },
            "payment_method_card_checks": {
                "type": "object",
                "properties": {
                    "address_line1_check": {
                        "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "address_postal_code_check": {
                        "description": "If a address postal code was provided, results of the check, one of 'pass', 'failed', 'unavailable' or 'unchecked'.",
                        "type": "string"
                    },
                    "cvc_check": {
                        "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    }
                }
            },
            "payment_method_card_generated_card": {
                "type": "object",
                "properties": {
                    "charge": {
                        "description": "For card errors, the ID of the failed charge.",
                        "type": "string"
                    },
                    "payment_method_details": {
                        "description": "Details about the payment method at the time of the transaction.",
                        "type": ""
                    }
                }
            },
            "payment_method_card_present": {
                "type": "object"
            },
            "payment_method_card_wallet": {
                "type": "object",
                "properties": {
                    "amex_express_checkout": {
                        "description": "",
                        "type": ""
                    },
                    "apple_pay": {
                        "description": "",
                        "type": ""
                    },
                    "dynamic_last4": {
                        "description": "(For tokenized numbers only.) The last four digits of the device account number.",
                        "type": "string"
                    },
                    "google_pay": {
                        "description": "",
                        "type": ""
                    },
                    "masterpass": {
                        "description": "",
                        "type": ""
                    },
                    "samsung_pay": {
                        "description": "",
                        "type": ""
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "visa_checkout": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "amex_express_checkout": {
                "type": "object"
            },
            "apple_pay": {
                "type": "object"
            },
            "google_pay": {
                "type": "object"
            },
            "masterpass": {
                "type": "object"
            },
            "samsung_pay": {
                "type": "object"
            },
            "visa_checkout": {
                "type": "object"
            },
            "payment_method_card_wallet_amex_express_checkout": {
                "type": "object"
            },
            "payment_method_card_wallet_apple_pay": {
                "type": "object"
            },
            "payment_method_card_wallet_google_pay": {
                "type": "object"
            },
            "payment_method_card_wallet_masterpass": {
                "type": "object",
                "properties": {
                    "billing_address": {
                        "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": ""
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "shipping_address": {
                        "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": ""
                    }
                }
            },
            "payment_method_card_wallet_samsung_pay": {
                "type": "object"
            },
            "payment_method_card_wallet_visa_checkout": {
                "type": "object",
                "properties": {
                    "billing_address": {
                        "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": ""
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "shipping_address": {
                        "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": ""
                    }
                }
            },
            "payment_method_details": {
                "type": "object",
                "properties": {
                    "ach_credit_transfer": {
                        "description": "",
                        "type": ""
                    },
                    "ach_debit": {
                        "description": "",
                        "type": ""
                    },
                    "alipay": {
                        "description": "",
                        "type": ""
                    },
                    "bancontact": {
                        "description": "",
                        "type": ""
                    },
                    "card": {
                        "description": "",
                        "type": ""
                    },
                    "card_present": {
                        "description": "",
                        "type": ""
                    },
                    "eps": {
                        "description": "",
                        "type": ""
                    },
                    "giropay": {
                        "description": "",
                        "type": ""
                    },
                    "ideal": {
                        "description": "",
                        "type": ""
                    },
                    "klarna": {
                        "description": "",
                        "type": ""
                    },
                    "multibanco": {
                        "description": "",
                        "type": ""
                    },
                    "p24": {
                        "description": "",
                        "type": ""
                    },
                    "sepa_debit": {
                        "description": "",
                        "type": ""
                    },
                    "sofort": {
                        "description": "",
                        "type": ""
                    },
                    "stripe_account": {
                        "description": "",
                        "type": ""
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "wechat": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "ach_credit_transfer": {
                "type": "object"
            },
            "ach_debit": {
                "type": "object"
            },
            "alipay": {
                "type": "object"
            },
            "bancontact": {
                "type": "object"
            },
            "eps": {
                "type": "object"
            },
            "giropay": {
                "type": "object"
            },
            "ideal": {
                "type": "object"
            },
            "klarna": {
                "type": "object"
            },
            "multibanco": {
                "type": "object"
            },
            "p24": {
                "type": "object"
            },
            "sepa_debit": {
                "type": "object"
            },
            "sofort": {
                "type": "object"
            },
            "stripe_account": {
                "type": "object"
            },
            "wechat": {
                "type": "object"
            },
            "payment_method_details_ach_credit_transfer": {
                "type": "object",
                "properties": {
                    "account_number": {
                        "description": "Account number to transfer funds to.",
                        "type": "string"
                    },
                    "bank_name": {
                        "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                        "type": "string"
                    },
                    "routing_number": {
                        "description": "The routing transit number for the bank account.",
                        "type": "string"
                    },
                    "swift_code": {
                        "description": "SWIFT code of the bank associated with the routing number.",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_ach_debit": {
                "type": "object",
                "properties": {
                    "account_holder_type": {
                        "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
                        "type": "string"
                    },
                    "bank_name": {
                        "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "routing_number": {
                        "description": "The routing transit number for the bank account.",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_alipay": {
                "type": "object"
            },
            "payment_method_details_bancontact": {
                "type": "object",
                "properties": {
                    "bank_code": {
                        "description": "Bank code of bank associated with the bank account.",
                        "type": "string"
                    },
                    "bank_name": {
                        "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                        "type": "string"
                    },
                    "bic": {
                        "description": "Bank Identifier Code of the bank associated with the bank account.",
                        "type": "string"
                    },
                    "iban_last4": {
                        "description": "Last four characters of the IBAN.",
                        "type": "string"
                    },
                    "preferred_language": {
                        "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.\nCan be one of `en`, `de`, `fr`, or `nl`",
                        "type": "string"
                    },
                    "verified_name": {
                        "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_card": {
                "type": "object",
                "properties": {
                    "brand": {
                        "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
                        "type": "string"
                    },
                    "checks": {
                        "description": "Checks on Card address and CVC if provided.",
                        "type": ""
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "exp_month": {
                        "description": "Two-digit number representing the card's expiration month.",
                        "type": "integer"
                    },
                    "exp_year": {
                        "description": "Four-digit number representing the card's expiration year.",
                        "type": "integer"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "funding": {
                        "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "three_d_secure": {
                        "description": "Populated if this transaction used 3D Secure authentication.",
                        "type": ""
                    },
                    "wallet": {
                        "description": "If this Card is part of a card wallet, this contains the details of the card wallet.",
                        "type": ""
                    }
                }
            },
            "payment_method_details_card_checks": {
                "type": "object",
                "properties": {
                    "address_line1_check": {
                        "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "address_postal_code_check": {
                        "description": "If a address postal code was provided, results of the check, one of 'pass', 'failed', 'unavailable' or 'unchecked'.",
                        "type": "string"
                    },
                    "cvc_check": {
                        "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_card_present": {
                "type": "object",
                "properties": {
                    "brand": {
                        "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "emv_auth_data": {
                        "description": "Authorization response cryptogram.",
                        "type": "string"
                    },
                    "exp_month": {
                        "description": "Two-digit number representing the card's expiration month.",
                        "type": "integer"
                    },
                    "exp_year": {
                        "description": "Four-digit number representing the card's expiration year.",
                        "type": "integer"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "funding": {
                        "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
                        "type": "string"
                    },
                    "generated_card": {
                        "description": "ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "read_method": {
                        "description": "How were card details read in this transaction. Can be contact_emv, contactless_emv, magnetic_stripe_fallback, magnetic_stripe_track2, or contactless_magstripe_mode",
                        "type": "string"
                    },
                    "receipt": {
                        "description": "(ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Any receipt or message sent to the customer notifying them of the charge.",
                        "type": ""
                    }
                }
            },
            "payment_method_details_card_present_receipt": {
                "type": "object",
                "properties": {
                    "application_cryptogram": {
                        "description": "EMV tag 9F26, cryptogram generated by the integrated circuit chip.",
                        "type": "string"
                    },
                    "application_preferred_name": {
                        "description": "Mnenomic of the Application Identifier.",
                        "type": "string"
                    },
                    "authorization_code": {
                        "description": "Identifier for this transaction.",
                        "type": "string"
                    },
                    "authorization_response_code": {
                        "description": "EMV tag 8A. A code returned by the card issuer.",
                        "type": "string"
                    },
                    "cardholder_verification_method": {
                        "description": "How the cardholder verified ownership of the card.",
                        "type": "string"
                    },
                    "dedicated_file_name": {
                        "description": "EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.",
                        "type": "string"
                    },
                    "terminal_verification_results": {
                        "description": "The outcome of a series of EMV functions performed by the card reader.",
                        "type": "string"
                    },
                    "transaction_status_information": {
                        "description": "An indication of various EMV functions performed during the transaction.",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_card_wallet": {
                "type": "object",
                "properties": {
                    "amex_express_checkout": {
                        "description": "",
                        "type": ""
                    },
                    "apple_pay": {
                        "description": "",
                        "type": ""
                    },
                    "dynamic_last4": {
                        "description": "(For tokenized numbers only.) The last four digits of the device account number.",
                        "type": "string"
                    },
                    "google_pay": {
                        "description": "",
                        "type": ""
                    },
                    "masterpass": {
                        "description": "",
                        "type": ""
                    },
                    "samsung_pay": {
                        "description": "",
                        "type": ""
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "visa_checkout": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "payment_method_details_card_wallet_amex_express_checkout": {
                "type": "object"
            },
            "payment_method_details_card_wallet_apple_pay": {
                "type": "object"
            },
            "payment_method_details_card_wallet_google_pay": {
                "type": "object"
            },
            "payment_method_details_card_wallet_masterpass": {
                "type": "object",
                "properties": {
                    "billing_address": {
                        "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": ""
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "shipping_address": {
                        "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": ""
                    }
                }
            },
            "payment_method_details_card_wallet_samsung_pay": {
                "type": "object"
            },
            "payment_method_details_card_wallet_visa_checkout": {
                "type": "object",
                "properties": {
                    "billing_address": {
                        "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": ""
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "shipping_address": {
                        "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": ""
                    }
                }
            },
            "payment_method_details_eps": {
                "type": "object",
                "properties": {
                    "verified_name": {
                        "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_giropay": {
                "type": "object",
                "properties": {
                    "bank_code": {
                        "description": "Bank code of bank associated with the bank account.",
                        "type": "string"
                    },
                    "bank_name": {
                        "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                        "type": "string"
                    },
                    "bic": {
                        "description": "Bank Identifier Code of the bank associated with the bank account.",
                        "type": "string"
                    },
                    "verified_name": {
                        "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_ideal": {
                "type": "object",
                "properties": {
                    "bank": {
                        "description": "The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `rabobank`, `regiobank`, `sns_bank`, `triodos_bank`, or `van_lanschot`.",
                        "type": "string"
                    },
                    "bic": {
                        "description": "Bank Identifier Code of the bank associated with the bank account.",
                        "type": "string"
                    },
                    "iban_last4": {
                        "description": "Last four characters of the IBAN.",
                        "type": "string"
                    },
                    "verified_name": {
                        "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_klarna": {
                "type": "object"
            },
            "payment_method_details_multibanco": {
                "type": "object",
                "properties": {
                    "entity": {
                        "description": "Entity number associated with this Multibanco payment.",
                        "type": "string"
                    },
                    "reference": {
                        "description": "Reference number associated with this Multibanco payment.",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_p24": {
                "type": "object",
                "properties": {
                    "reference": {
                        "description": "Reference number associated with this Multibanco payment.",
                        "type": "string"
                    },
                    "verified_name": {
                        "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_sepa_debit": {
                "type": "object",
                "properties": {
                    "bank_code": {
                        "description": "Bank code of bank associated with the bank account.",
                        "type": "string"
                    },
                    "branch_code": {
                        "description": "Branch code of bank associated with the bank account.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_sofort": {
                "type": "object",
                "properties": {
                    "bank_code": {
                        "description": "Bank code of bank associated with the bank account.",
                        "type": "string"
                    },
                    "bank_name": {
                        "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                        "type": "string"
                    },
                    "bic": {
                        "description": "Bank Identifier Code of the bank associated with the bank account.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "iban_last4": {
                        "description": "Last four characters of the IBAN.",
                        "type": "string"
                    },
                    "verified_name": {
                        "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": "string"
                    }
                }
            },
            "payment_method_details_stripe_account": {
                "type": "object"
            },
            "payment_method_details_wechat": {
                "type": "object"
            },
            "payment_source": {
                "type": "object"
            },
            "payout": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "arrival_date": {
                        "description": "Date the payout is expected to arrive in the bank. This factors in delays like weekends or bank holidays.",
                        "type": "integer"
                    },
                    "automatic": {
                        "description": "Returns `true` if the payout was created by an [automated payout schedule](https:\/\/stripe.com\/docs\/payouts#payout-schedule), and `false` if it was [requested manually](https:\/\/stripe.com\/docs\/payouts#manual-payouts).",
                        "type": "boolean"
                    },
                    "balance_transaction": {
                        "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "destination": {
                        "description": "ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.",
                        "type": ""
                    },
                    "failure_balance_transaction": {
                        "description": "If the payout failed or was canceled, this will be the ID of the balance transaction that reversed the initial balance transaction, and puts the funds from the failed payout back in your balance.",
                        "type": ""
                    },
                    "failure_code": {
                        "description": "Error code explaining reason for charge failure if available (see [the errors section](https:\/\/stripe.com\/docs\/api#errors) for a list of codes).",
                        "type": "string"
                    },
                    "failure_message": {
                        "description": "Message to user further explaining reason for charge failure if available.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "method": {
                        "description": "The method used to send this payout, which can be `standard` or `instant`. `instant` is only supported for payouts to debit cards. (See [Instant payouts for marketplaces](\/blog\/instant-payouts-for-marketplaces) for more information.)",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "source_type": {
                        "description": "The source balance this payout came from. One of `card` or `bank_account`.",
                        "type": "string"
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "person": {
                "type": "object",
                "properties": {
                    "account": {
                        "description": "",
                        "type": "string"
                    },
                    "address": {
                        "description": "Billing address.",
                        "type": ""
                    },
                    "address_kana": {
                        "description": "The Kana variation of the company's primary address (Japan only).",
                        "type": ""
                    },
                    "address_kanji": {
                        "description": "The Kanji variation of the company's primary address (Japan only).",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "dob": {
                        "description": "",
                        "type": ""
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "",
                        "type": "string"
                    },
                    "first_name_kana": {
                        "description": "",
                        "type": "string"
                    },
                    "first_name_kanji": {
                        "description": "",
                        "type": "string"
                    },
                    "gender": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "id_number_provided": {
                        "description": "",
                        "type": "boolean"
                    },
                    "last_name": {
                        "description": "",
                        "type": "string"
                    },
                    "last_name_kana": {
                        "description": "",
                        "type": "string"
                    },
                    "last_name_kanji": {
                        "description": "",
                        "type": "string"
                    },
                    "maiden_name": {
                        "description": "",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Billing phone number (including extension).",
                        "type": "string"
                    },
                    "relationship": {
                        "description": "",
                        "type": ""
                    },
                    "requirements": {
                        "description": "",
                        "type": ""
                    },
                    "ssn_last_4_provided": {
                        "description": "",
                        "type": "boolean"
                    },
                    "verification": {
                        "description": "Information on the verification state of the company.",
                        "type": ""
                    }
                }
            },
            "dob": {
                "type": "object"
            },
            "relationship": {
                "type": "object"
            },
            "verification": {
                "type": "object"
            },
            "person_relationship": {
                "type": "object",
                "properties": {
                    "account_opener": {
                        "description": "Whether the person opened the account. This person provides information about themselves, and general information about the account.",
                        "type": "boolean"
                    },
                    "director": {
                        "description": "Whether the person is a director of the account's legal entity. Currently only required for accounts in the EU. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations.",
                        "type": "boolean"
                    },
                    "executive": {
                        "description": "Whether the person has significant responsibility to control, manage, or direct the organization.",
                        "type": "boolean"
                    },
                    "owner": {
                        "description": "Whether the person is an owner of the account\u2019s legal entity.",
                        "type": "boolean"
                    },
                    "percent_ownership": {
                        "description": "The percent owned by the person of the account's legal entity.",
                        "type": "number"
                    },
                    "title": {
                        "description": "A user friendly title for the document.",
                        "type": "string"
                    }
                }
            },
            "person_requirements": {
                "type": "object",
                "properties": {
                    "currently_due": {
                        "description": "The fields that need to be collected to keep the capability enabled. If not collected by the `current_deadline`, these fields appear in `past_due` as well, and the capability is disabled.",
                        "type": "array"
                    },
                    "eventually_due": {
                        "description": "The fields that need to be collected assuming all volume thresholds are reached. As they become required, these fields appear in `currently_due` as well, and the `current_deadline` is set.",
                        "type": "array"
                    },
                    "past_due": {
                        "description": "The fields that weren't collected by the `current_deadline`. These fields need to be collected to enable the capability for the account.",
                        "type": "array"
                    },
                    "pending_verification": {
                        "description": "Additional fields that may be required depending on the results of verification or review for provided requirements. If any of these fields become required, they appear in `currently_due` or `past_due`.",
                        "type": "array"
                    }
                }
            },
            "tiers": {
                "type": "array"
            },
            "plan_tier": {
                "type": "object",
                "properties": {
                    "flat_amount": {
                        "description": "Price for the entire tier.",
                        "type": "integer"
                    },
                    "flat_amount_decimal": {
                        "description": "Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.",
                        "type": "string"
                    },
                    "unit_amount": {
                        "description": "Unit Amount (in the `currency` specified) of the invoice item.",
                        "type": "integer"
                    },
                    "unit_amount_decimal": {
                        "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
                        "type": "string"
                    },
                    "up_to": {
                        "description": "Up to and including to this quantity will be contained in the tier.",
                        "type": "integer"
                    }
                }
            },
            "platform_tax_fee": {
                "type": "object",
                "properties": {
                    "account": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "source_transaction": {
                        "description": "The payment object that caused this tax to be inflicted.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "product": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "True when this bitcoin receiver has received a non-zero amount of bitcoin.",
                        "type": "boolean"
                    },
                    "attributes": {
                        "description": "A list of up to 5 attributes that each SKU can provide values for (e.g., `[\"color\", \"size\"]`). Only applicable to products of `type=good`.",
                        "type": "array"
                    },
                    "caption": {
                        "description": "A short one-line description of the product, meant to be displayable to the customer. Only applicable to products of `type=good`.",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "deactivate_on": {
                        "description": "An array of connect application identifiers that cannot purchase this product. Only applicable to products of `type=good`.",
                        "type": "array"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "images": {
                        "description": "The images of the line item.",
                        "type": "array"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "package_dimensions": {
                        "description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. Only applicable to products of `type=good`.",
                        "type": ""
                    },
                    "shippable": {
                        "description": "Whether this product is a shipped good. Only applicable to products of `type=good`.",
                        "type": "boolean"
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "unit_label": {
                        "description": "A label that represents units of this product, such as seat(s), in Stripe and on customers\u2019 receipts and invoices. Only available on products of type=`service`.",
                        "type": "string"
                    },
                    "updated": {
                        "description": "",
                        "type": "integer"
                    },
                    "url": {
                        "description": "The business's publicly available website.",
                        "type": "string"
                    }
                }
            },
            "attributes": {
                "type": "object"
            },
            "deactivate_on": {
                "type": "array"
            },
            "radar.early_fraud_warning": {
                "type": "object",
                "properties": {
                    "actionable": {
                        "description": "An IFR is actionable if it has not received a dispute and has not been fully refunded. You may wish to proactively refund a charge that receives an IFR, in order to avoid receiving a dispute later.",
                        "type": "boolean"
                    },
                    "charge": {
                        "description": "ID of the charge that the application fee was taken from.",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "fraud_type": {
                        "description": "The type of fraud labelled by the issuer. One of `card_never_received`, `fraudulent_card_application`, `made_with_counterfeit_card`, `made_with_lost_card`, `made_with_stolen_card`, `misc`, `unauthorized_use_of_card`.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "radar.value_list": {
                "type": "object",
                "properties": {
                    "alias": {
                        "description": "The name of the value list for use in rules.",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "created_by": {
                        "description": "The name or email address of the user who created this value list.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "item_type": {
                        "description": "The type of items in the value list. One of `card_fingerprint`, `card_bin`, `email`, `ip_address`, `country`, `string`, or `case_sensitive_string`.",
                        "type": "string"
                    },
                    "list_items": {
                        "description": "List of items contained within this value list.",
                        "type": "object"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "list_items": {
                "type": "object"
            },
            "radar.value_list_item": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "created_by": {
                        "description": "The name or email address of the user who created this value list.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "value": {
                        "description": "An indicator of the inventory available. Possible values are `in_stock`, `limited`, and `out_of_stock`. Will be present if and only if `type` is `bucket`.",
                        "type": "string"
                    },
                    "value_list": {
                        "description": "The identifier of the value list this item belongs to.",
                        "type": "string"
                    }
                }
            },
            "radar_review_resource_location": {
                "type": "object",
                "properties": {
                    "city": {
                        "description": "City\/District\/Suburb\/Town\/Village.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "The geographic latitude where the payment originated.",
                        "type": "number"
                    },
                    "longitude": {
                        "description": "The geographic longitude where the payment originated.",
                        "type": "number"
                    },
                    "region": {
                        "description": "The state\/county\/province\/region where the payment originated.",
                        "type": "string"
                    }
                }
            },
            "radar_review_resource_session": {
                "type": "object",
                "properties": {
                    "browser": {
                        "description": "The browser used in this browser session (e.g., `Chrome`).",
                        "type": "string"
                    },
                    "device": {
                        "description": "Information about the device used for the browser session (e.g., `Samsung SM-G930T`).",
                        "type": "string"
                    },
                    "platform": {
                        "description": "The platform for the browser session (e.g., `Macintosh`).",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version for the browser session (e.g., `61.0.3163.100`).",
                        "type": "string"
                    }
                }
            },
            "recipient": {
                "type": "object",
                "properties": {
                    "active_account": {
                        "description": "Hash describing the current account on the recipient, if there is one.",
                        "type": ""
                    },
                    "cards": {
                        "description": "",
                        "type": "object"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "default_card": {
                        "description": "The default card to use for creating transfers to this recipient.",
                        "type": ""
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "migrated_to": {
                        "description": "The ID of the [Custom account](https:\/\/stripe.com\/docs\/connect\/custom-accounts) this recipient was migrated to. If set, the recipient can no longer be updated, nor can transfers be made to it: use the Custom account instead.",
                        "type": ""
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "rolled_back_from": {
                        "description": "",
                        "type": ""
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "cards": {
                "type": "object"
            },
            "refund": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "balance_transaction": {
                        "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
                        "type": ""
                    },
                    "charge": {
                        "description": "ID of the charge that the application fee was taken from.",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "failure_balance_transaction": {
                        "description": "If the payout failed or was canceled, this will be the ID of the balance transaction that reversed the initial balance transaction, and puts the funds from the failed payout back in your balance.",
                        "type": ""
                    },
                    "failure_reason": {
                        "description": "If the refund failed, the reason for refund failure if known. Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`, or `unknown`.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https:\/\/stripe.com\/docs\/declines) for more details.",
                        "type": "string"
                    },
                    "receipt_number": {
                        "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
                        "type": "string"
                    },
                    "source_transfer_reversal": {
                        "description": "The transfer reversal that is associated with the refund. Only present if the charge came from another Stripe account. See the Connect documentation for details.",
                        "type": ""
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "transfer_reversal": {
                        "description": "If the accompanying transfer was reversed, the transfer reversal object. Only applicable if the charge was created using the destination parameter.",
                        "type": ""
                    }
                }
            },
            "reporting.report_run": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "error": {
                        "description": "If something should go wrong during the run, a message about the failure (populated when\n `status=failed`).",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "parameters": {
                        "description": "",
                        "type": ""
                    },
                    "report_type": {
                        "description": "The ID of the [report type](https:\/\/stripe.com\/docs\/reporting\/statements\/api#report-types) to run, such as `\"balance.summary.1\"`.",
                        "type": "string"
                    },
                    "result": {
                        "description": "The file object representing the result of the report run (populated when\n `status=succeeded`).",
                        "type": ""
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "succeeded_at": {
                        "description": "Timestamp at which this run successfully finished (populated when\n `status=succeeded`). Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    }
                }
            },
            "parameters": {
                "type": "object"
            },
            "reporting.report_type": {
                "type": "object",
                "properties": {
                    "data_available_end": {
                        "description": "Most recent time for which this Report Type is available. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "data_available_start": {
                        "description": "Earliest time for which this Report Type is available. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "default_columns": {
                        "description": "List of column names that are included by default when this Report Type gets run. (If the Report Type doesn't support the `columns` parameter, this will be null.)",
                        "type": "array"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "updated": {
                        "description": "",
                        "type": "integer"
                    },
                    "version": {
                        "description": "Version of the Report Type. Different versions report with the same ID will have the same purpose, but may take different run parameters or have different result schemas.",
                        "type": "integer"
                    }
                }
            },
            "default_columns": {
                "type": "array"
            },
            "reserve_transaction": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "review": {
                "type": "object",
                "properties": {
                    "billing_zip": {
                        "description": "The ZIP or postal code of the card used, if applicable.",
                        "type": "string"
                    },
                    "charge": {
                        "description": "ID of the charge that the application fee was taken from.",
                        "type": ""
                    },
                    "closed_reason": {
                        "description": "The reason the review was closed, or null if it has not yet been closed. One of `approved`, `refunded`, `refunded_as_fraud`, or `disputed`.",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "ip_address": {
                        "description": "The IP address where the payment originated.",
                        "type": "string"
                    },
                    "ip_address_location": {
                        "description": "Information related to the location of the payment. Note that this information is an approximation and attempts to locate the nearest population center - it should not be used to determine a specific address.",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "open": {
                        "description": "If `true`, the review needs action.",
                        "type": "boolean"
                    },
                    "opened_reason": {
                        "description": "The reason the review was opened. One of `rule` or `manual`.",
                        "type": "string"
                    },
                    "payment_intent": {
                        "description": "",
                        "type": ""
                    },
                    "reason": {
                        "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https:\/\/stripe.com\/docs\/declines) for more details.",
                        "type": "string"
                    },
                    "session": {
                        "description": "Information related to the browsing session of the user who initiated the payment.",
                        "type": ""
                    }
                }
            },
            "rule": {
                "type": "object",
                "properties": {
                    "action": {
                        "description": "The action taken on the payment.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "predicate": {
                        "description": "The predicate to evaluate the payment against.",
                        "type": "string"
                    }
                }
            },
            "scheduled_query_run": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "data_load_time": {
                        "description": "When the query was run, Sigma contained a snapshot of your Stripe data at this time.",
                        "type": "integer"
                    },
                    "error": {
                        "description": "",
                        "type": ""
                    },
                    "file": {
                        "description": "The file object this link points to.",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "result_available_until": {
                        "description": "Time at which the result expires and is no longer available for download.",
                        "type": "integer"
                    },
                    "sql": {
                        "description": "SQL for the query.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "title": {
                        "description": "A user friendly title for the document.",
                        "type": "string"
                    }
                }
            },
            "setup_intent_next_action": {
                "type": "object",
                "properties": {
                    "redirect_to_url": {
                        "description": "",
                        "type": ""
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "use_stripe_sdk": {
                        "description": "When confirming a PaymentIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.",
                        "type": "object"
                    }
                }
            },
            "setup_intent_next_action_redirect_to_url": {
                "type": "object",
                "properties": {
                    "return_url": {
                        "description": "If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The business's publicly available website.",
                        "type": "string"
                    }
                }
            },
            "setup_intent_payment_method_options": {
                "type": "object",
                "properties": {
                    "card": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "setup_intent_payment_method_options_card": {
                "type": "object",
                "properties": {
                    "request_three_d_secure": {
                        "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https:\/\/stripe.com\/docs\/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Permitted values include: `automatic` or `any`. If not provided, defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https:\/\/stripe.com\/docs\/payments\/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
                        "type": "string"
                    }
                }
            },
            "shipping": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "Billing address.",
                        "type": ""
                    },
                    "carrier": {
                        "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Billing phone number (including extension).",
                        "type": "string"
                    },
                    "tracking_number": {
                        "description": "A tracking number for a card shipment.",
                        "type": "string"
                    }
                }
            },
            "shipping_method": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "delivery_estimate": {
                        "description": "The estimated delivery date for the given shipping method. Can be either a specific date or a range.",
                        "type": ""
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    }
                }
            },
            "sigma_scheduled_query_run_error": {
                "type": "object",
                "properties": {
                    "message": {
                        "description": "A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.",
                        "type": "string"
                    }
                }
            },
            "source": {
                "type": "object",
                "properties": {
                    "ach_credit_transfer": {
                        "description": "",
                        "type": ""
                    },
                    "ach_debit": {
                        "description": "",
                        "type": ""
                    },
                    "alipay": {
                        "description": "",
                        "type": ""
                    },
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "bancontact": {
                        "description": "",
                        "type": ""
                    },
                    "card": {
                        "description": "",
                        "type": ""
                    },
                    "card_present": {
                        "description": "",
                        "type": ""
                    },
                    "client_secret": {
                        "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nPlease refer to our [automatic confirmation quickstart guide](https:\/\/stripe.com\/docs\/payments\/payment-intents\/quickstart#automatic-confirmation-flow) to learn about how `client_secret` should be handled.",
                        "type": "string"
                    },
                    "code_verification": {
                        "description": "",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": "string"
                    },
                    "eps": {
                        "description": "",
                        "type": ""
                    },
                    "flow": {
                        "description": "The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.",
                        "type": "string"
                    },
                    "giropay": {
                        "description": "",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "ideal": {
                        "description": "",
                        "type": ""
                    },
                    "klarna": {
                        "description": "",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "multibanco": {
                        "description": "",
                        "type": ""
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "owner": {
                        "description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
                        "type": ""
                    },
                    "p24": {
                        "description": "",
                        "type": ""
                    },
                    "receiver": {
                        "description": "",
                        "type": ""
                    },
                    "redirect": {
                        "description": "",
                        "type": ""
                    },
                    "sepa_debit": {
                        "description": "",
                        "type": ""
                    },
                    "sofort": {
                        "description": "",
                        "type": ""
                    },
                    "source_order": {
                        "description": "",
                        "type": ""
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "three_d_secure": {
                        "description": "Populated if this transaction used 3D Secure authentication.",
                        "type": ""
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "usage": {
                        "description": "Indicates how the payment method is intended to be used in the future.\n\nUse `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.",
                        "type": "string"
                    },
                    "wechat": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "code_verification": {
                "type": "object"
            },
            "receiver": {
                "type": "object"
            },
            "redirect": {
                "type": "object"
            },
            "source_order": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "items": {
                        "description": "List of items constituting the order. An order can have up to 25 items.",
                        "type": "array"
                    },
                    "shipping": {
                        "description": "Shipping information for the charge.",
                        "type": ""
                    }
                }
            },
            "three_d_secure": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "authenticated": {
                        "description": "",
                        "type": "boolean"
                    },
                    "card": {
                        "description": "",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "redirect_url": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    }
                }
            },
            "source_code_verification_flow": {
                "type": "object",
                "properties": {
                    "attempts_remaining": {
                        "description": "The number of attempts remaining to authenticate the source object with a verification code.",
                        "type": "integer"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    }
                }
            },
            "source_mandate_notification": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "bacs_debit": {
                        "description": "",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https:\/\/stripe.com\/docs\/declines) for more details.",
                        "type": "string"
                    },
                    "sepa_debit": {
                        "description": "",
                        "type": ""
                    },
                    "source": {
                        "description": "The source object for errors returned on a request involving a source.",
                        "type": ""
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "bacs_debit": {
                "type": "object"
            },
            "source_mandate_notification_bacs_debit_data": {
                "type": "object",
                "properties": {
                    "last4": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "source_mandate_notification_sepa_debit_data": {
                "type": "object",
                "properties": {
                    "creditor_identifier": {
                        "description": "SEPA creditor ID.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "mandate_reference": {
                        "description": "Mandate reference associated with the debit.",
                        "type": "string"
                    }
                }
            },
            "source_order_item": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "Quantity of the display item being purchased.",
                        "type": "integer"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "source_owner": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "Billing address.",
                        "type": ""
                    },
                    "email": {
                        "description": "The primary user's email address.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Billing phone number (including extension).",
                        "type": "string"
                    },
                    "verified_address": {
                        "description": "Verified owner's address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": ""
                    },
                    "verified_email": {
                        "description": "Verified owner's email address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": "string"
                    },
                    "verified_name": {
                        "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": "string"
                    },
                    "verified_phone": {
                        "description": "Verified owner's phone number (including extension). Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": "string"
                    }
                }
            },
            "source_receiver_flow": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "The address of the receiver source. This is the value that should be communicated to the customer to send their funds to.",
                        "type": "string"
                    },
                    "amount_charged": {
                        "description": "The total amount that was charged by you. The amount charged is expressed in the source's currency.",
                        "type": "integer"
                    },
                    "amount_received": {
                        "description": "The amount of `currency` to which `bitcoin_amount_received` has been converted.",
                        "type": "integer"
                    },
                    "amount_returned": {
                        "description": "",
                        "type": "integer"
                    },
                    "refund_attributes_method": {
                        "description": "Type of refund attribute method, one of `email`, `manual`, or `none`.",
                        "type": "string"
                    },
                    "refund_attributes_status": {
                        "description": "Type of refund attribute status, one of `missing`, `requested`, or `available`.",
                        "type": "string"
                    }
                }
            },
            "source_redirect_flow": {
                "type": "object",
                "properties": {
                    "failure_reason": {
                        "description": "If the refund failed, the reason for refund failure if known. Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`, or `unknown`.",
                        "type": "string"
                    },
                    "return_url": {
                        "description": "If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The business's publicly available website.",
                        "type": "string"
                    }
                }
            },
            "source_transaction": {
                "type": "object",
                "properties": {
                    "ach_credit_transfer": {
                        "description": "",
                        "type": ""
                    },
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "chf_credit_transfer": {
                        "description": "",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "gbp_credit_transfer": {
                        "description": "",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "paper_check": {
                        "description": "",
                        "type": ""
                    },
                    "sepa_credit_transfer": {
                        "description": "",
                        "type": ""
                    },
                    "source": {
                        "description": "The ID of the source this transaction is attached to.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "chf_credit_transfer": {
                "type": "object"
            },
            "gbp_credit_transfer": {
                "type": "object"
            },
            "paper_check": {
                "type": "object"
            },
            "sepa_credit_transfer": {
                "type": "object"
            },
            "source_transaction_ach_credit_transfer_data": {
                "type": "object",
                "properties": {
                    "customer_data": {
                        "description": "Customer data associated with the transfer.",
                        "type": "string"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "routing_number": {
                        "description": "The routing transit number for the bank account.",
                        "type": "string"
                    }
                }
            },
            "source_transaction_chf_credit_transfer_data": {
                "type": "object",
                "properties": {
                    "reference": {
                        "description": "Reference number associated with this Multibanco payment.",
                        "type": "string"
                    },
                    "sender_address_country": {
                        "description": "Sender's country address.",
                        "type": "string"
                    },
                    "sender_address_line1": {
                        "description": "Sender's line 1 address.",
                        "type": "string"
                    },
                    "sender_iban": {
                        "description": "Sender's bank account IBAN.",
                        "type": "string"
                    },
                    "sender_name": {
                        "description": "Sender's name.",
                        "type": "string"
                    }
                }
            },
            "source_transaction_gbp_credit_transfer_data": {
                "type": "object",
                "properties": {
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "sender_name": {
                        "description": "Sender's name.",
                        "type": "string"
                    },
                    "sort_code": {
                        "description": "Sort code associated with the transfer.",
                        "type": "string"
                    }
                }
            },
            "source_transaction_paper_check_data": {
                "type": "object",
                "properties": {
                    "available_at": {
                        "description": "String unix time for the available date.",
                        "type": "string"
                    },
                    "invoices": {
                        "description": "Invoice ID associated with the paper check.",
                        "type": "string"
                    }
                }
            },
            "source_transaction_sepa_credit_transfer_data": {
                "type": "object",
                "properties": {
                    "reference": {
                        "description": "Reference number associated with this Multibanco payment.",
                        "type": "string"
                    },
                    "sender_iban": {
                        "description": "Sender's bank account IBAN.",
                        "type": "string"
                    },
                    "sender_name": {
                        "description": "Sender's name.",
                        "type": "string"
                    }
                }
            },
            "source_type_ach_credit_transfer": {
                "type": "object",
                "properties": {
                    "account_number": {
                        "description": "Account number to transfer funds to.",
                        "type": "string"
                    },
                    "bank_name": {
                        "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                        "type": "string"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "refund_account_holder_name": {
                        "description": "",
                        "type": "string"
                    },
                    "refund_account_holder_type": {
                        "description": "",
                        "type": "string"
                    },
                    "refund_routing_number": {
                        "description": "",
                        "type": "string"
                    },
                    "routing_number": {
                        "description": "The routing transit number for the bank account.",
                        "type": "string"
                    },
                    "swift_code": {
                        "description": "SWIFT code of the bank associated with the routing number.",
                        "type": "string"
                    }
                }
            },
            "source_type_ach_debit": {
                "type": "object",
                "properties": {
                    "bank_name": {
                        "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "routing_number": {
                        "description": "The routing transit number for the bank account.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "source_type_alipay": {
                "type": "object",
                "properties": {
                    "data_string": {
                        "description": "",
                        "type": "string"
                    },
                    "native_url": {
                        "description": "",
                        "type": "string"
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    }
                }
            },
            "source_type_bancontact": {
                "type": "object",
                "properties": {
                    "bank_code": {
                        "description": "Bank code of bank associated with the bank account.",
                        "type": "string"
                    },
                    "bank_name": {
                        "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                        "type": "string"
                    },
                    "bic": {
                        "description": "Bank Identifier Code of the bank associated with the bank account.",
                        "type": "string"
                    },
                    "iban_last4": {
                        "description": "Last four characters of the IBAN.",
                        "type": "string"
                    },
                    "preferred_language": {
                        "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.\nCan be one of `en`, `de`, `fr`, or `nl`",
                        "type": "string"
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    }
                }
            },
            "source_type_card": {
                "type": "object",
                "properties": {
                    "address_line1_check": {
                        "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "address_zip_check": {
                        "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "brand": {
                        "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "cvc_check": {
                        "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "dynamic_last4": {
                        "description": "(For tokenized numbers only.) The last four digits of the device account number.",
                        "type": "string"
                    },
                    "exp_month": {
                        "description": "Two-digit number representing the card's expiration month.",
                        "type": "integer"
                    },
                    "exp_year": {
                        "description": "Four-digit number representing the card's expiration year.",
                        "type": "integer"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "funding": {
                        "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "three_d_secure": {
                        "description": "",
                        "type": "string"
                    },
                    "tokenization_method": {
                        "description": "If the card number is tokenized, this is the method that was used. Can be `apple_pay` or `google_pay`.",
                        "type": "string"
                    }
                }
            },
            "source_type_card_present": {
                "type": "object",
                "properties": {
                    "application_cryptogram": {
                        "description": "EMV tag 9F26, cryptogram generated by the integrated circuit chip.",
                        "type": "string"
                    },
                    "application_preferred_name": {
                        "description": "Mnenomic of the Application Identifier.",
                        "type": "string"
                    },
                    "authorization_code": {
                        "description": "Identifier for this transaction.",
                        "type": "string"
                    },
                    "authorization_response_code": {
                        "description": "EMV tag 8A. A code returned by the card issuer.",
                        "type": "string"
                    },
                    "brand": {
                        "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "cvm_type": {
                        "description": "",
                        "type": "string"
                    },
                    "data_type": {
                        "description": "",
                        "type": "string"
                    },
                    "dedicated_file_name": {
                        "description": "EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.",
                        "type": "string"
                    },
                    "emv_auth_data": {
                        "description": "Authorization response cryptogram.",
                        "type": "string"
                    },
                    "evidence_customer_signature": {
                        "description": "",
                        "type": "string"
                    },
                    "evidence_transaction_certificate": {
                        "description": "",
                        "type": "string"
                    },
                    "exp_month": {
                        "description": "Two-digit number representing the card's expiration month.",
                        "type": "integer"
                    },
                    "exp_year": {
                        "description": "Four-digit number representing the card's expiration year.",
                        "type": "integer"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "funding": {
                        "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "pos_device_id": {
                        "description": "",
                        "type": "string"
                    },
                    "pos_entry_mode": {
                        "description": "",
                        "type": "string"
                    },
                    "read_method": {
                        "description": "How were card details read in this transaction. Can be contact_emv, contactless_emv, magnetic_stripe_fallback, magnetic_stripe_track2, or contactless_magstripe_mode",
                        "type": "string"
                    },
                    "reader": {
                        "description": "",
                        "type": "string"
                    },
                    "terminal_verification_results": {
                        "description": "The outcome of a series of EMV functions performed by the card reader.",
                        "type": "string"
                    },
                    "transaction_status_information": {
                        "description": "An indication of various EMV functions performed during the transaction.",
                        "type": "string"
                    }
                }
            },
            "source_type_eps": {
                "type": "object",
                "properties": {
                    "reference": {
                        "description": "Reference number associated with this Multibanco payment.",
                        "type": "string"
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    }
                }
            },
            "source_type_giropay": {
                "type": "object",
                "properties": {
                    "bank_code": {
                        "description": "Bank code of bank associated with the bank account.",
                        "type": "string"
                    },
                    "bank_name": {
                        "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                        "type": "string"
                    },
                    "bic": {
                        "description": "Bank Identifier Code of the bank associated with the bank account.",
                        "type": "string"
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    }
                }
            },
            "source_type_ideal": {
                "type": "object",
                "properties": {
                    "bank": {
                        "description": "The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `rabobank`, `regiobank`, `sns_bank`, `triodos_bank`, or `van_lanschot`.",
                        "type": "string"
                    },
                    "bic": {
                        "description": "Bank Identifier Code of the bank associated with the bank account.",
                        "type": "string"
                    },
                    "iban_last4": {
                        "description": "Last four characters of the IBAN.",
                        "type": "string"
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    }
                }
            },
            "source_type_klarna": {
                "type": "object",
                "properties": {
                    "background_image_url": {
                        "description": "",
                        "type": "string"
                    },
                    "client_token": {
                        "description": "",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "",
                        "type": "string"
                    },
                    "locale": {
                        "description": "The IETF language tag of the locale Checkout is displayed in. If blank\nor `auto`, the browser's locale is used.",
                        "type": "string"
                    },
                    "logo_url": {
                        "description": "",
                        "type": "string"
                    },
                    "page_title": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_later_asset_urls_descriptive": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_later_asset_urls_standard": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_later_name": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_later_redirect_url": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_now_asset_urls_descriptive": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_now_asset_urls_standard": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_now_name": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_now_redirect_url": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_over_time_asset_urls_descriptive": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_over_time_asset_urls_standard": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_over_time_name": {
                        "description": "",
                        "type": "string"
                    },
                    "pay_over_time_redirect_url": {
                        "description": "",
                        "type": "string"
                    },
                    "payment_method_categories": {
                        "description": "",
                        "type": "string"
                    },
                    "purchase_country": {
                        "description": "",
                        "type": "string"
                    },
                    "purchase_type": {
                        "description": "",
                        "type": "string"
                    },
                    "redirect_url": {
                        "description": "",
                        "type": "string"
                    },
                    "shipping_first_name": {
                        "description": "",
                        "type": "string"
                    },
                    "shipping_last_name": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "source_type_multibanco": {
                "type": "object",
                "properties": {
                    "entity": {
                        "description": "Entity number associated with this Multibanco payment.",
                        "type": "string"
                    },
                    "reference": {
                        "description": "Reference number associated with this Multibanco payment.",
                        "type": "string"
                    },
                    "refund_account_holder_address_city": {
                        "description": "",
                        "type": "string"
                    },
                    "refund_account_holder_address_country": {
                        "description": "",
                        "type": "string"
                    },
                    "refund_account_holder_address_line1": {
                        "description": "",
                        "type": "string"
                    },
                    "refund_account_holder_address_line2": {
                        "description": "",
                        "type": "string"
                    },
                    "refund_account_holder_address_postal_code": {
                        "description": "",
                        "type": "string"
                    },
                    "refund_account_holder_address_state": {
                        "description": "",
                        "type": "string"
                    },
                    "refund_account_holder_name": {
                        "description": "",
                        "type": "string"
                    },
                    "refund_iban": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "source_type_p24": {
                "type": "object",
                "properties": {
                    "reference": {
                        "description": "Reference number associated with this Multibanco payment.",
                        "type": "string"
                    }
                }
            },
            "source_type_sepa_debit": {
                "type": "object",
                "properties": {
                    "bank_code": {
                        "description": "Bank code of bank associated with the bank account.",
                        "type": "string"
                    },
                    "branch_code": {
                        "description": "Branch code of bank associated with the bank account.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "mandate_reference": {
                        "description": "Mandate reference associated with the debit.",
                        "type": "string"
                    },
                    "mandate_url": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "source_type_sofort": {
                "type": "object",
                "properties": {
                    "bank_code": {
                        "description": "Bank code of bank associated with the bank account.",
                        "type": "string"
                    },
                    "bank_name": {
                        "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                        "type": "string"
                    },
                    "bic": {
                        "description": "Bank Identifier Code of the bank associated with the bank account.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "iban_last4": {
                        "description": "Last four characters of the IBAN.",
                        "type": "string"
                    },
                    "preferred_language": {
                        "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.\nCan be one of `en`, `de`, `fr`, or `nl`",
                        "type": "string"
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    }
                }
            },
            "source_type_three_d_secure": {
                "type": "object",
                "properties": {
                    "address_line1_check": {
                        "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "address_zip_check": {
                        "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "authenticated": {
                        "description": "",
                        "type": "boolean"
                    },
                    "brand": {
                        "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
                        "type": "string"
                    },
                    "card": {
                        "description": "The id of the `Card` on which the verification was requested",
                        "type": "string"
                    },
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": "string"
                    },
                    "cvc_check": {
                        "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                        "type": "string"
                    },
                    "dynamic_last4": {
                        "description": "(For tokenized numbers only.) The last four digits of the device account number.",
                        "type": "string"
                    },
                    "exp_month": {
                        "description": "Two-digit number representing the card's expiration month.",
                        "type": "integer"
                    },
                    "exp_year": {
                        "description": "Four-digit number representing the card's expiration year.",
                        "type": "integer"
                    },
                    "fingerprint": {
                        "description": "Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.",
                        "type": "string"
                    },
                    "funding": {
                        "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
                        "type": "string"
                    },
                    "last4": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "The customer-facing business name.",
                        "type": "string"
                    },
                    "three_d_secure": {
                        "description": "",
                        "type": "string"
                    },
                    "tokenization_method": {
                        "description": "If the card number is tokenized, this is the method that was used. Can be `apple_pay` or `google_pay`.",
                        "type": "string"
                    }
                }
            },
            "source_type_wechat": {
                "type": "object",
                "properties": {
                    "prepay_id": {
                        "description": "",
                        "type": "string"
                    },
                    "qr_code_url": {
                        "description": "",
                        "type": "string"
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    }
                }
            },
            "subscription": {
                "type": "object",
                "properties": {
                    "application_fee_percent": {
                        "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.",
                        "type": "number"
                    },
                    "billing": {
                        "description": "This field has been renamed to `collection_method` and will be removed in a future API version.",
                        "type": "string"
                    },
                    "billing_cycle_anchor": {
                        "description": "Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.",
                        "type": "integer"
                    },
                    "billing_thresholds": {
                        "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
                        "type": ""
                    },
                    "cancel_at": {
                        "description": "A date in the future at which the subscription will automatically get canceled",
                        "type": "integer"
                    },
                    "cancel_at_period_end": {
                        "description": "If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.",
                        "type": "boolean"
                    },
                    "canceled_at": {
                        "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "collection_method": {
                        "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "current_period_end": {
                        "description": "End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.",
                        "type": "integer"
                    },
                    "current_period_start": {
                        "description": "Start of the current period that the subscription has been invoiced for.",
                        "type": "integer"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "days_until_due": {
                        "description": "Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.",
                        "type": "integer"
                    },
                    "default_payment_method": {
                        "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
                        "type": ""
                    },
                    "default_source": {
                        "description": "ID of the default payment source for the customer.",
                        "type": ""
                    },
                    "default_tax_rates": {
                        "description": "The tax rates applied to this invoice, if any.",
                        "type": "array"
                    },
                    "discount": {
                        "description": "Describes the current discount active on the customer, if there is one.",
                        "type": ""
                    },
                    "ended_at": {
                        "description": "If the subscription has ended, the date the subscription ended.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "items": {
                        "description": "List of subscription items, each with an attached plan.",
                        "type": "object"
                    },
                    "latest_invoice": {
                        "description": "The most recent invoice this subscription has generated.",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "pending_setup_intent": {
                        "description": "You can use this [SetupIntent](https:\/\/stripe.com\/docs\/api\/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https:\/\/stripe.com\/docs\/billing\/migration\/strong-customer-authentication#scenario-2).",
                        "type": ""
                    },
                    "plan": {
                        "description": "",
                        "type": ""
                    },
                    "quantity": {
                        "description": "Quantity of the display item being purchased.",
                        "type": "integer"
                    },
                    "schedule": {
                        "description": "",
                        "type": ""
                    },
                    "start": {
                        "description": "Date that the coupon was applied.",
                        "type": "integer"
                    },
                    "start_date": {
                        "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
                        "type": "integer"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "tax_percent": {
                        "description": "This percentage of the subtotal has been added to the total amount of the invoice, including invoice line items and discounts. This field is inherited from the subscription's `tax_percent` field, but can be changed before the invoice is paid. This field defaults to null.",
                        "type": "number"
                    },
                    "trial_end": {
                        "description": "If the subscription has a trial, the end of that trial.",
                        "type": "integer"
                    },
                    "trial_start": {
                        "description": "If the subscription has a trial, the beginning of that trial.",
                        "type": "integer"
                    }
                }
            },
            "subscription_billing_thresholds": {
                "type": "object",
                "properties": {
                    "amount_gte": {
                        "description": "The total invoice amount threshold boundary if it triggered the threshold invoice.",
                        "type": "integer"
                    },
                    "reset_billing_cycle_anchor": {
                        "description": "Indicates if the `billing_cycle_anchor` should be reset when a threshold is reached. If true, `billing_cycle_anchor` will be updated to the date\/time the threshold was last reached; otherwise, the value will remain unchanged. This value may not be `true` if the subscription contains items with plans that have `aggregate_usage=last_ever`.",
                        "type": "boolean"
                    }
                }
            },
            "subscription_item": {
                "type": "object",
                "properties": {
                    "billing_thresholds": {
                        "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "plan": {
                        "description": "",
                        "type": ""
                    },
                    "quantity": {
                        "description": "Quantity of the display item being purchased.",
                        "type": "integer"
                    },
                    "subscription": {
                        "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
                        "type": "string"
                    },
                    "tax_rates": {
                        "description": "The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.",
                        "type": "array"
                    }
                }
            },
            "subscription_item_billing_thresholds": {
                "type": "object",
                "properties": {
                    "usage_gte": {
                        "description": "The quantity threshold boundary that applied to the given line item.",
                        "type": "integer"
                    }
                }
            },
            "subscription_schedule": {
                "type": "object",
                "properties": {
                    "billing": {
                        "description": "This field has been renamed to `collection_method` and will be removed in a future API version.",
                        "type": "string"
                    },
                    "billing_thresholds": {
                        "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
                        "type": ""
                    },
                    "canceled_at": {
                        "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "collection_method": {
                        "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
                        "type": "string"
                    },
                    "completed_at": {
                        "description": "Time at which the subscription schedule was completed. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "current_phase": {
                        "description": "Object representing the start and end dates for the current phase of the subscription schedule, if it is `active`.",
                        "type": ""
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "default_payment_method": {
                        "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
                        "type": ""
                    },
                    "end_behavior": {
                        "description": "Behavior of the subscription schedule and underlying subscription when it ends.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "invoice_settings": {
                        "description": "",
                        "type": ""
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "phases": {
                        "description": "Configuration for the subscription schedule's phases.",
                        "type": "array"
                    },
                    "released_at": {
                        "description": "Time at which the subscription schedule was released. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "released_subscription": {
                        "description": "ID of the subscription once managed by the subscription schedule (if it is released).",
                        "type": "string"
                    },
                    "renewal_behavior": {
                        "description": "Behavior of the subscription schedule and underlying subscription when it ends.",
                        "type": "string"
                    },
                    "renewal_interval": {
                        "description": "Interval and duration at which the subscription schedule renews for when it ends if `renewal_behavior` is `renew`.",
                        "type": ""
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "subscription": {
                        "description": "The ID of the subscription created if one or more plans were provided.",
                        "type": ""
                    }
                }
            },
            "phases": {
                "type": "array"
            },
            "subscription_schedule_configuration_item": {
                "type": "object",
                "properties": {
                    "billing_thresholds": {
                        "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
                        "type": ""
                    },
                    "plan": {
                        "description": "",
                        "type": ""
                    },
                    "quantity": {
                        "description": "Quantity of the display item being purchased.",
                        "type": "integer"
                    },
                    "tax_rates": {
                        "description": "The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.",
                        "type": "array"
                    }
                }
            },
            "subscription_schedule_current_phase": {
                "type": "object",
                "properties": {
                    "end_date": {
                        "description": "",
                        "type": "integer"
                    },
                    "start_date": {
                        "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
                        "type": "integer"
                    }
                }
            },
            "subscription_schedule_phase_configuration": {
                "type": "object",
                "properties": {
                    "application_fee_percent": {
                        "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.",
                        "type": "number"
                    },
                    "billing_thresholds": {
                        "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
                        "type": ""
                    },
                    "collection_method": {
                        "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
                        "type": "string"
                    },
                    "coupon": {
                        "description": "",
                        "type": ""
                    },
                    "default_payment_method": {
                        "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
                        "type": ""
                    },
                    "default_tax_rates": {
                        "description": "The tax rates applied to this invoice, if any.",
                        "type": "array"
                    },
                    "end_date": {
                        "description": "",
                        "type": "integer"
                    },
                    "invoice_settings": {
                        "description": "",
                        "type": ""
                    },
                    "plans": {
                        "description": "Plans to subscribe during this phase of the subscription schedule.",
                        "type": "array"
                    },
                    "start_date": {
                        "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
                        "type": "integer"
                    },
                    "tax_percent": {
                        "description": "This percentage of the subtotal has been added to the total amount of the invoice, including invoice line items and discounts. This field is inherited from the subscription's `tax_percent` field, but can be changed before the invoice is paid. This field defaults to null.",
                        "type": "number"
                    },
                    "trial_end": {
                        "description": "If the subscription has a trial, the end of that trial.",
                        "type": "integer"
                    }
                }
            },
            "plans": {
                "type": "array"
            },
            "subscription_schedule_renewal_interval": {
                "type": "object",
                "properties": {
                    "interval": {
                        "description": "The time interval with which to apply this spending limit towards. Allowed values are `per_authorization`, `daily`, `weekly`, `monthly`, `yearly`, or `all_time`.",
                        "type": "string"
                    },
                    "length": {
                        "description": "Number of intervals to renew the subscription schedule for when it ends.",
                        "type": "integer"
                    }
                }
            },
            "tax_id": {
                "type": "object",
                "properties": {
                    "country": {
                        "description": "The account's country.",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "value": {
                        "description": "An indicator of the inventory available. Possible values are `in_stock`, `limited`, and `out_of_stock`. Will be present if and only if `type` is `bucket`.",
                        "type": "string"
                    },
                    "verification": {
                        "description": "Information on the verification state of the company.",
                        "type": ""
                    }
                }
            },
            "tax_id_verification": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "verified_address": {
                        "description": "Verified address.",
                        "type": "string"
                    },
                    "verified_name": {
                        "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": "string"
                    }
                }
            },
            "tax_info": {
                "type": "object",
                "properties": {
                    "tax_id": {
                        "description": "The customer's tax ID number.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    }
                }
            },
            "tax_info_verification": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "verified_name": {
                        "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
                        "type": "string"
                    }
                }
            },
            "tax_rate": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "True when this bitcoin receiver has received a non-zero amount of bitcoin.",
                        "type": "boolean"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "display_name": {
                        "description": "The display name for this account. This is used on the Stripe Dashboard to differentiate between accounts.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "inclusive": {
                        "description": "Whether this tax amount is inclusive or exclusive.",
                        "type": "boolean"
                    },
                    "jurisdiction": {
                        "description": "The jurisdiction for the tax rate.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "percentage": {
                        "description": "This represents the tax rate percent out of 100.",
                        "type": "number"
                    }
                }
            },
            "terminal.connection_token": {
                "type": "object",
                "properties": {
                    "location": {
                        "description": "The id of the location that this connection token is scoped to.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "secret": {
                        "description": "The key's secret. You can use this value to make authorized requests to the Stripe API.",
                        "type": "string"
                    }
                }
            },
            "terminal.location": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "Billing address.",
                        "type": ""
                    },
                    "display_name": {
                        "description": "The display name for this account. This is used on the Stripe Dashboard to differentiate between accounts.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    }
                }
            },
            "terminal.reader": {
                "type": "object",
                "properties": {
                    "device_sw_version": {
                        "description": "The current software version of the reader.",
                        "type": "string"
                    },
                    "device_type": {
                        "description": "Type of reader, e.g., `verifone_P400` or `bbpos_chipper2x`.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "ip_address": {
                        "description": "The IP address where the payment originated.",
                        "type": "string"
                    },
                    "label": {
                        "description": "Custom label given to the reader for easier identification.",
                        "type": "string"
                    },
                    "location": {
                        "description": "The id of the location that this connection token is scoped to.",
                        "type": "string"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "serial_number": {
                        "description": "Serial number of the reader.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    }
                }
            },
            "three_d_secure_details": {
                "type": "object",
                "properties": {
                    "authenticated": {
                        "description": "",
                        "type": "boolean"
                    },
                    "succeeded": {
                        "description": "Whether or not 3D Secure succeeded.",
                        "type": "boolean"
                    },
                    "version": {
                        "description": "The version for the browser session (e.g., `61.0.3163.100`).",
                        "type": "string"
                    }
                }
            },
            "three_d_secure_usage": {
                "type": "object",
                "properties": {
                    "supported": {
                        "description": "Whether 3D Secure is supported on this card.",
                        "type": "boolean"
                    }
                }
            },
            "token": {
                "type": "object",
                "properties": {
                    "bank_account": {
                        "description": "",
                        "type": ""
                    },
                    "card": {
                        "description": "",
                        "type": ""
                    },
                    "client_ip": {
                        "description": "IP address of the client that generated the token.",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
                        "type": "string"
                    },
                    "used": {
                        "description": "Whether this Alipay account object has ever been used for a payment.",
                        "type": "boolean"
                    }
                }
            },
            "topup": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "balance_transaction": {
                        "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "expected_availability_date": {
                        "description": "Date the funds are expected to arrive in your Stripe account for payouts. This factors in delays like weekends or bank holidays. May not be specified depending on status of top-up.",
                        "type": "integer"
                    },
                    "failure_code": {
                        "description": "Error code explaining reason for charge failure if available (see [the errors section](https:\/\/stripe.com\/docs\/api#errors) for a list of codes).",
                        "type": "string"
                    },
                    "failure_message": {
                        "description": "Message to user further explaining reason for charge failure if available.",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "source": {
                        "description": "The source object for errors returned on a request involving a source.",
                        "type": ""
                    },
                    "statement_descriptor": {
                        "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "transfer_group": {
                        "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https:\/\/stripe.com\/docs\/connect\/charges-transfers#grouping-transactions) for details.",
                        "type": "string"
                    }
                }
            },
            "transfer": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "amount_reversed": {
                        "description": "Amount in %s reversed (can be less than the amount attribute on the transfer if a partial reversal was issued).",
                        "type": "integer"
                    },
                    "balance_transaction": {
                        "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "description": {
                        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                        "type": "string"
                    },
                    "destination": {
                        "description": "ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.",
                        "type": ""
                    },
                    "destination_payment": {
                        "description": "If the destination is a Stripe account, this will be the ID of the payment that the destination account received for the transfer.",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "reversals": {
                        "description": "A list of reversals that have been applied to the transfer.",
                        "type": "object"
                    },
                    "reversed": {
                        "description": "Whether the transfer has been fully reversed. If the transfer is only partially reversed, this attribute will still be false.",
                        "type": "boolean"
                    },
                    "source_transaction": {
                        "description": "ID of the charge or payment that was used to fund the transfer. If null, the transfer was funded from the available balance.",
                        "type": ""
                    },
                    "source_type": {
                        "description": "The source balance this payout came from. One of `card` or `bank_account`.",
                        "type": "string"
                    },
                    "transfer_group": {
                        "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https:\/\/stripe.com\/docs\/connect\/charges-transfers#grouping-transactions) for details.",
                        "type": "string"
                    }
                }
            },
            "reversals": {
                "type": "object"
            },
            "transfer_data": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "destination": {
                        "description": "ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.",
                        "type": ""
                    }
                }
            },
            "transfer_reversal": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount earned, in %s.",
                        "type": "integer"
                    },
                    "balance_transaction": {
                        "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
                        "type": ""
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).",
                        "type": "string"
                    },
                    "destination_payment_refund": {
                        "description": "Linked payment refund for the transfer reversal.",
                        "type": ""
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                        "type": "object"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "source_refund": {
                        "description": "ID of the refund responsible for the transfer reversal.",
                        "type": ""
                    },
                    "transfer": {
                        "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
                        "type": ""
                    }
                }
            },
            "transfer_schedule": {
                "type": "object",
                "properties": {
                    "delay_days": {
                        "description": "The number of days charges for the account will be held before being paid out.",
                        "type": "integer"
                    },
                    "interval": {
                        "description": "The time interval with which to apply this spending limit towards. Allowed values are `per_authorization`, `daily`, `weekly`, `monthly`, `yearly`, or `all_time`.",
                        "type": "string"
                    },
                    "monthly_anchor": {
                        "description": "The day of the month funds will be paid out. Only shown if `interval` is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.",
                        "type": "integer"
                    },
                    "weekly_anchor": {
                        "description": "The day of the week funds will be paid out, of the style 'monday', 'tuesday', etc. Only shown if `interval` is weekly.",
                        "type": "string"
                    }
                }
            },
            "transform_usage": {
                "type": "object",
                "properties": {
                    "divide_by": {
                        "description": "Divide usage by this number.",
                        "type": "integer"
                    },
                    "round": {
                        "description": "After division, either round the result `up` or `down`.",
                        "type": "string"
                    }
                }
            },
            "usage_record": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "Quantity of the display item being purchased.",
                        "type": "integer"
                    },
                    "subscription_item": {
                        "description": "The subscription item that this invoice item has been created for, if any.",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "The timestamp when this usage occurred.",
                        "type": "integer"
                    }
                }
            },
            "usage_record_summary": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "invoice": {
                        "description": "The invoice in which this usage period has been billed for.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "period": {
                        "description": "",
                        "type": ""
                    },
                    "subscription_item": {
                        "description": "The subscription item that this invoice item has been created for, if any.",
                        "type": "string"
                    },
                    "total_usage": {
                        "description": "The total usage within this usage period.",
                        "type": "integer"
                    }
                }
            },
            "webhook_endpoint": {
                "type": "object",
                "properties": {
                    "api_version": {
                        "description": "The Stripe API version used to render `data`. *Note: This property is populated only for events on or after October 31, 2014*.",
                        "type": "string"
                    },
                    "application": {
                        "description": "",
                        "type": "string"
                    },
                    "created": {
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                        "type": "integer"
                    },
                    "enabled_events": {
                        "description": "The list of events to enable for this endpoint. You may specify `['*']` to enable all events.",
                        "type": "array"
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "string"
                    },
                    "livemode": {
                        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "String representing the object's type. Objects of the same type share the same value.",
                        "type": "string"
                    },
                    "secret": {
                        "description": "The key's secret. You can use this value to make authorized requests to the Stripe API.",
                        "type": "string"
                    },
                    "status": {
                        "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The business's publicly available website.",
                        "type": "string"
                    }
                }
            },
            "enabled_events": {
                "type": "array"
            }
        }
    }
}